/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -36000000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -36000000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 5.0, "minX": 0.0, "maxY": 30870.0, "series": [{"data": [[0.0, 5.0], [0.1, 5.0], [0.2, 5.0], [0.3, 5.0], [0.4, 5.0], [0.5, 10.0], [0.6, 32.0], [0.7, 32.0], [0.8, 41.0], [0.9, 51.0], [1.0, 51.0], [1.1, 61.0], [1.2, 63.0], [1.3, 63.0], [1.4, 86.0], [1.5, 105.0], [1.6, 105.0], [1.7, 106.0], [1.8, 111.0], [1.9, 111.0], [2.0, 125.0], [2.1, 129.0], [2.2, 129.0], [2.3, 133.0], [2.4, 135.0], [2.5, 135.0], [2.6, 138.0], [2.7, 148.0], [2.8, 148.0], [2.9, 156.0], [3.0, 161.0], [3.1, 161.0], [3.2, 166.0], [3.3, 167.0], [3.4, 167.0], [3.5, 186.0], [3.6, 190.0], [3.7, 190.0], [3.8, 192.0], [3.9, 201.0], [4.0, 201.0], [4.1, 204.0], [4.2, 206.0], [4.3, 206.0], [4.4, 207.0], [4.5, 214.0], [4.6, 214.0], [4.7, 218.0], [4.8, 221.0], [4.9, 221.0], [5.0, 223.0], [5.1, 223.0], [5.2, 223.0], [5.3, 226.0], [5.4, 229.0], [5.5, 229.0], [5.6, 230.0], [5.7, 231.0], [5.8, 231.0], [5.9, 233.0], [6.0, 236.0], [6.1, 236.0], [6.2, 236.0], [6.3, 237.0], [6.4, 237.0], [6.5, 237.0], [6.6, 238.0], [6.7, 238.0], [6.8, 242.0], [6.9, 243.0], [7.0, 243.0], [7.1, 245.0], [7.2, 246.0], [7.3, 246.0], [7.4, 253.0], [7.5, 255.0], [7.6, 255.0], [7.7, 263.0], [7.8, 265.0], [7.9, 270.0], [8.0, 270.0], [8.1, 272.0], [8.2, 273.0], [8.3, 273.0], [8.4, 274.0], [8.5, 276.0], [8.6, 276.0], [8.7, 285.0], [8.8, 288.0], [8.9, 288.0], [9.0, 288.0], [9.1, 291.0], [9.2, 291.0], [9.3, 292.0], [9.4, 293.0], [9.5, 293.0], [9.6, 295.0], [9.7, 297.0], [9.8, 297.0], [9.9, 297.0], [10.0, 298.0], [10.1, 298.0], [10.2, 299.0], [10.3, 300.0], [10.4, 300.0], [10.5, 300.0], [10.6, 305.0], [10.7, 305.0], [10.8, 307.0], [10.9, 308.0], [11.0, 308.0], [11.1, 310.0], [11.2, 310.0], [11.3, 310.0], [11.4, 316.0], [11.5, 316.0], [11.6, 316.0], [11.7, 316.0], [11.8, 323.0], [11.9, 323.0], [12.0, 325.0], [12.1, 325.0], [12.2, 325.0], [12.3, 327.0], [12.4, 332.0], [12.5, 332.0], [12.6, 332.0], [12.7, 333.0], [12.8, 333.0], [12.9, 334.0], [13.0, 336.0], [13.1, 336.0], [13.2, 338.0], [13.3, 340.0], [13.4, 340.0], [13.5, 342.0], [13.6, 344.0], [13.7, 344.0], [13.8, 345.0], [13.9, 347.0], [14.0, 347.0], [14.1, 348.0], [14.2, 349.0], [14.3, 349.0], [14.4, 349.0], [14.5, 349.0], [14.6, 349.0], [14.7, 351.0], [14.8, 351.0], [14.9, 351.0], [15.0, 352.0], [15.1, 353.0], [15.2, 353.0], [15.3, 357.0], [15.4, 358.0], [15.5, 359.0], [15.6, 359.0], [15.7, 361.0], [15.8, 362.0], [15.9, 362.0], [16.0, 363.0], [16.1, 363.0], [16.2, 363.0], [16.3, 364.0], [16.4, 366.0], [16.5, 366.0], [16.6, 368.0], [16.7, 370.0], [16.8, 370.0], [16.9, 373.0], [17.0, 378.0], [17.1, 378.0], [17.2, 379.0], [17.3, 379.0], [17.4, 379.0], [17.5, 382.0], [17.6, 382.0], [17.7, 382.0], [17.8, 384.0], [17.9, 385.0], [18.0, 385.0], [18.1, 386.0], [18.2, 387.0], [18.3, 387.0], [18.4, 388.0], [18.5, 389.0], [18.6, 389.0], [18.7, 389.0], [18.8, 390.0], [18.9, 390.0], [19.0, 390.0], [19.1, 393.0], [19.2, 393.0], [19.3, 394.0], [19.4, 394.0], [19.5, 394.0], [19.6, 395.0], [19.7, 397.0], [19.8, 397.0], [19.9, 397.0], [20.0, 398.0], [20.1, 398.0], [20.2, 398.0], [20.3, 399.0], [20.4, 399.0], [20.5, 399.0], [20.6, 401.0], [20.7, 401.0], [20.8, 402.0], [20.9, 403.0], [21.0, 403.0], [21.1, 403.0], [21.2, 406.0], [21.3, 406.0], [21.4, 407.0], [21.5, 407.0], [21.6, 407.0], [21.7, 408.0], [21.8, 411.0], [21.9, 411.0], [22.0, 412.0], [22.1, 413.0], [22.2, 413.0], [22.3, 414.0], [22.4, 415.0], [22.5, 415.0], [22.6, 416.0], [22.7, 417.0], [22.8, 417.0], [22.9, 419.0], [23.0, 419.0], [23.1, 423.0], [23.2, 423.0], [23.3, 424.0], [23.4, 427.0], [23.5, 427.0], [23.6, 427.0], [23.7, 427.0], [23.8, 427.0], [23.9, 428.0], [24.0, 431.0], [24.1, 431.0], [24.2, 431.0], [24.3, 433.0], [24.4, 433.0], [24.5, 434.0], [24.6, 436.0], [24.7, 436.0], [24.8, 436.0], [24.9, 437.0], [25.0, 437.0], [25.1, 437.0], [25.2, 442.0], [25.3, 442.0], [25.4, 442.0], [25.5, 442.0], [25.6, 442.0], [25.7, 443.0], [25.8, 443.0], [25.9, 443.0], [26.0, 444.0], [26.1, 444.0], [26.2, 444.0], [26.3, 445.0], [26.4, 446.0], [26.5, 446.0], [26.6, 447.0], [26.7, 448.0], [26.8, 448.0], [26.9, 450.0], [27.0, 450.0], [27.1, 450.0], [27.2, 453.0], [27.3, 454.0], [27.4, 454.0], [27.5, 454.0], [27.6, 454.0], [27.7, 454.0], [27.8, 455.0], [27.9, 457.0], [28.0, 457.0], [28.1, 457.0], [28.2, 459.0], [28.3, 459.0], [28.4, 459.0], [28.5, 462.0], [28.6, 462.0], [28.7, 462.0], [28.8, 464.0], [28.9, 464.0], [29.0, 464.0], [29.1, 466.0], [29.2, 466.0], [29.3, 466.0], [29.4, 468.0], [29.5, 468.0], [29.6, 468.0], [29.7, 472.0], [29.8, 472.0], [29.9, 476.0], [30.0, 477.0], [30.1, 477.0], [30.2, 477.0], [30.3, 478.0], [30.4, 478.0], [30.5, 478.0], [30.6, 479.0], [30.7, 479.0], [30.8, 479.0], [30.9, 479.0], [31.0, 480.0], [31.1, 480.0], [31.2, 481.0], [31.3, 482.0], [31.4, 482.0], [31.5, 486.0], [31.6, 488.0], [31.7, 488.0], [31.8, 488.0], [31.9, 489.0], [32.0, 489.0], [32.1, 490.0], [32.2, 490.0], [32.3, 490.0], [32.4, 492.0], [32.5, 492.0], [32.6, 492.0], [32.7, 492.0], [32.8, 492.0], [32.9, 492.0], [33.0, 493.0], [33.1, 493.0], [33.2, 493.0], [33.3, 494.0], [33.4, 498.0], [33.5, 498.0], [33.6, 499.0], [33.7, 500.0], [33.8, 500.0], [33.9, 502.0], [34.0, 503.0], [34.1, 503.0], [34.2, 504.0], [34.3, 505.0], [34.4, 505.0], [34.5, 505.0], [34.6, 506.0], [34.7, 506.0], [34.8, 507.0], [34.9, 507.0], [35.0, 507.0], [35.1, 508.0], [35.2, 508.0], [35.3, 508.0], [35.4, 509.0], [35.5, 510.0], [35.6, 510.0], [35.7, 510.0], [35.8, 512.0], [35.9, 512.0], [36.0, 512.0], [36.1, 512.0], [36.2, 512.0], [36.3, 512.0], [36.4, 514.0], [36.5, 514.0], [36.6, 514.0], [36.7, 515.0], [36.8, 515.0], [36.9, 517.0], [37.0, 517.0], [37.1, 517.0], [37.2, 518.0], [37.3, 520.0], [37.4, 520.0], [37.5, 520.0], [37.6, 521.0], [37.7, 521.0], [37.8, 522.0], [37.9, 523.0], [38.0, 523.0], [38.1, 526.0], [38.2, 527.0], [38.3, 527.0], [38.4, 528.0], [38.5, 528.0], [38.6, 528.0], [38.7, 528.0], [38.8, 530.0], [38.9, 530.0], [39.0, 530.0], [39.1, 533.0], [39.2, 533.0], [39.3, 533.0], [39.4, 533.0], [39.5, 535.0], [39.6, 535.0], [39.7, 535.0], [39.8, 535.0], [39.9, 535.0], [40.0, 535.0], [40.1, 537.0], [40.2, 537.0], [40.3, 537.0], [40.4, 538.0], [40.5, 538.0], [40.6, 538.0], [40.7, 541.0], [40.8, 541.0], [40.9, 541.0], [41.0, 541.0], [41.1, 541.0], [41.2, 544.0], [41.3, 546.0], [41.4, 546.0], [41.5, 547.0], [41.6, 548.0], [41.7, 548.0], [41.8, 549.0], [41.9, 550.0], [42.0, 550.0], [42.1, 551.0], [42.2, 553.0], [42.3, 553.0], [42.4, 553.0], [42.5, 554.0], [42.6, 554.0], [42.7, 557.0], [42.8, 561.0], [42.9, 561.0], [43.0, 561.0], [43.1, 561.0], [43.2, 561.0], [43.3, 561.0], [43.4, 563.0], [43.5, 563.0], [43.6, 564.0], [43.7, 565.0], [43.8, 565.0], [43.9, 565.0], [44.0, 566.0], [44.1, 566.0], [44.2, 569.0], [44.3, 569.0], [44.4, 569.0], [44.5, 570.0], [44.6, 570.0], [44.7, 570.0], [44.8, 570.0], [44.9, 572.0], [45.0, 572.0], [45.1, 576.0], [45.2, 576.0], [45.3, 576.0], [45.4, 577.0], [45.5, 578.0], [45.6, 578.0], [45.7, 580.0], [45.8, 582.0], [45.9, 582.0], [46.0, 584.0], [46.1, 584.0], [46.2, 586.0], [46.3, 586.0], [46.4, 587.0], [46.5, 588.0], [46.6, 588.0], [46.7, 589.0], [46.8, 590.0], [46.9, 590.0], [47.0, 590.0], [47.1, 590.0], [47.2, 590.0], [47.3, 591.0], [47.4, 592.0], [47.5, 592.0], [47.6, 592.0], [47.7, 592.0], [47.8, 592.0], [47.9, 593.0], [48.0, 593.0], [48.1, 593.0], [48.2, 594.0], [48.3, 594.0], [48.4, 594.0], [48.5, 594.0], [48.6, 595.0], [48.7, 595.0], [48.8, 595.0], [48.9, 595.0], [49.0, 595.0], [49.1, 595.0], [49.2, 596.0], [49.3, 596.0], [49.4, 597.0], [49.5, 597.0], [49.6, 597.0], [49.7, 597.0], [49.8, 599.0], [49.9, 599.0], [50.0, 599.0], [50.1, 599.0], [50.2, 599.0], [50.3, 600.0], [50.4, 601.0], [50.5, 601.0], [50.6, 602.0], [50.7, 604.0], [50.8, 604.0], [50.9, 606.0], [51.0, 607.0], [51.1, 607.0], [51.2, 607.0], [51.3, 608.0], [51.4, 608.0], [51.5, 609.0], [51.6, 611.0], [51.7, 611.0], [51.8, 611.0], [51.9, 612.0], [52.0, 612.0], [52.1, 612.0], [52.2, 612.0], [52.3, 612.0], [52.4, 613.0], [52.5, 613.0], [52.6, 613.0], [52.7, 614.0], [52.8, 614.0], [52.9, 614.0], [53.0, 614.0], [53.1, 615.0], [53.2, 615.0], [53.3, 617.0], [53.4, 617.0], [53.5, 617.0], [53.6, 618.0], [53.7, 618.0], [53.8, 618.0], [53.9, 620.0], [54.0, 620.0], [54.1, 620.0], [54.2, 620.0], [54.3, 620.0], [54.4, 621.0], [54.5, 621.0], [54.6, 621.0], [54.7, 621.0], [54.8, 621.0], [54.9, 622.0], [55.0, 622.0], [55.1, 622.0], [55.2, 623.0], [55.3, 623.0], [55.4, 623.0], [55.5, 624.0], [55.6, 626.0], [55.7, 626.0], [55.8, 626.0], [55.9, 627.0], [56.0, 627.0], [56.1, 629.0], [56.2, 629.0], [56.3, 629.0], [56.4, 630.0], [56.5, 630.0], [56.6, 630.0], [56.7, 632.0], [56.8, 632.0], [56.9, 632.0], [57.0, 633.0], [57.1, 634.0], [57.2, 634.0], [57.3, 634.0], [57.4, 635.0], [57.5, 635.0], [57.6, 638.0], [57.7, 638.0], [57.8, 638.0], [57.9, 638.0], [58.0, 641.0], [58.1, 641.0], [58.2, 641.0], [58.3, 643.0], [58.4, 643.0], [58.5, 644.0], [58.6, 645.0], [58.7, 645.0], [58.8, 645.0], [58.9, 645.0], [59.0, 645.0], [59.1, 646.0], [59.2, 647.0], [59.3, 647.0], [59.4, 648.0], [59.5, 648.0], [59.6, 648.0], [59.7, 648.0], [59.8, 650.0], [59.9, 650.0], [60.0, 650.0], [60.1, 651.0], [60.2, 651.0], [60.3, 653.0], [60.4, 653.0], [60.5, 653.0], [60.6, 653.0], [60.7, 653.0], [60.8, 653.0], [60.9, 654.0], [61.0, 654.0], [61.1, 654.0], [61.2, 655.0], [61.3, 655.0], [61.4, 655.0], [61.5, 656.0], [61.6, 656.0], [61.7, 658.0], [61.8, 658.0], [61.9, 659.0], [62.0, 659.0], [62.1, 659.0], [62.2, 660.0], [62.3, 662.0], [62.4, 662.0], [62.5, 662.0], [62.6, 664.0], [62.7, 664.0], [62.8, 664.0], [62.9, 665.0], [63.0, 665.0], [63.1, 666.0], [63.2, 666.0], [63.3, 666.0], [63.4, 666.0], [63.5, 667.0], [63.6, 667.0], [63.7, 671.0], [63.8, 674.0], [63.9, 674.0], [64.0, 677.0], [64.1, 677.0], [64.2, 677.0], [64.3, 682.0], [64.4, 683.0], [64.5, 683.0], [64.6, 684.0], [64.7, 684.0], [64.8, 684.0], [64.9, 684.0], [65.0, 685.0], [65.1, 685.0], [65.2, 686.0], [65.3, 687.0], [65.4, 687.0], [65.5, 690.0], [65.6, 690.0], [65.7, 690.0], [65.8, 691.0], [65.9, 691.0], [66.0, 691.0], [66.1, 692.0], [66.2, 694.0], [66.3, 694.0], [66.4, 696.0], [66.5, 697.0], [66.6, 697.0], [66.7, 698.0], [66.8, 698.0], [66.9, 698.0], [67.0, 699.0], [67.1, 700.0], [67.2, 700.0], [67.3, 700.0], [67.4, 700.0], [67.5, 700.0], [67.6, 700.0], [67.7, 701.0], [67.8, 701.0], [67.9, 701.0], [68.0, 703.0], [68.1, 703.0], [68.2, 704.0], [68.3, 705.0], [68.4, 705.0], [68.5, 707.0], [68.6, 708.0], [68.7, 708.0], [68.8, 708.0], [68.9, 710.0], [69.0, 710.0], [69.1, 712.0], [69.2, 712.0], [69.3, 712.0], [69.4, 712.0], [69.5, 712.0], [69.6, 713.0], [69.7, 713.0], [69.8, 714.0], [69.9, 714.0], [70.0, 714.0], [70.1, 714.0], [70.2, 718.0], [70.3, 718.0], [70.4, 719.0], [70.5, 721.0], [70.6, 721.0], [70.7, 721.0], [70.8, 723.0], [70.9, 723.0], [71.0, 724.0], [71.1, 727.0], [71.2, 727.0], [71.3, 729.0], [71.4, 729.0], [71.5, 729.0], [71.6, 730.0], [71.7, 730.0], [71.8, 730.0], [71.9, 731.0], [72.0, 732.0], [72.1, 732.0], [72.2, 733.0], [72.3, 733.0], [72.4, 733.0], [72.5, 733.0], [72.6, 736.0], [72.7, 736.0], [72.8, 737.0], [72.9, 737.0], [73.0, 737.0], [73.1, 739.0], [73.2, 740.0], [73.3, 740.0], [73.4, 741.0], [73.5, 742.0], [73.6, 742.0], [73.7, 743.0], [73.8, 743.0], [73.9, 743.0], [74.0, 744.0], [74.1, 746.0], [74.2, 746.0], [74.3, 746.0], [74.4, 747.0], [74.5, 747.0], [74.6, 748.0], [74.7, 748.0], [74.8, 748.0], [74.9, 750.0], [75.0, 753.0], [75.1, 753.0], [75.2, 756.0], [75.3, 756.0], [75.4, 756.0], [75.5, 758.0], [75.6, 759.0], [75.7, 759.0], [75.8, 759.0], [75.9, 761.0], [76.0, 761.0], [76.1, 762.0], [76.2, 764.0], [76.3, 764.0], [76.4, 765.0], [76.5, 766.0], [76.6, 766.0], [76.7, 766.0], [76.8, 768.0], [76.9, 768.0], [77.0, 768.0], [77.1, 771.0], [77.2, 772.0], [77.3, 772.0], [77.4, 773.0], [77.5, 773.0], [77.6, 773.0], [77.7, 775.0], [77.8, 775.0], [77.9, 775.0], [78.0, 775.0], [78.1, 776.0], [78.2, 776.0], [78.3, 776.0], [78.4, 777.0], [78.5, 777.0], [78.6, 777.0], [78.7, 778.0], [78.8, 778.0], [78.9, 778.0], [79.0, 782.0], [79.1, 782.0], [79.2, 782.0], [79.3, 783.0], [79.4, 783.0], [79.5, 783.0], [79.6, 787.0], [79.7, 787.0], [79.8, 787.0], [79.9, 788.0], [80.0, 788.0], [80.1, 789.0], [80.2, 790.0], [80.3, 790.0], [80.4, 791.0], [80.5, 792.0], [80.6, 792.0], [80.7, 792.0], [80.8, 792.0], [80.9, 792.0], [81.0, 793.0], [81.1, 794.0], [81.2, 794.0], [81.3, 794.0], [81.4, 794.0], [81.5, 794.0], [81.6, 795.0], [81.7, 796.0], [81.8, 796.0], [81.9, 802.0], [82.0, 803.0], [82.1, 803.0], [82.2, 807.0], [82.3, 810.0], [82.4, 810.0], [82.5, 812.0], [82.6, 814.0], [82.7, 814.0], [82.8, 814.0], [82.9, 817.0], [83.0, 817.0], [83.1, 819.0], [83.2, 823.0], [83.3, 823.0], [83.4, 824.0], [83.5, 824.0], [83.6, 824.0], [83.7, 826.0], [83.8, 829.0], [83.9, 829.0], [84.0, 836.0], [84.1, 837.0], [84.2, 837.0], [84.3, 838.0], [84.4, 841.0], [84.5, 841.0], [84.6, 841.0], [84.7, 844.0], [84.8, 845.0], [84.9, 845.0], [85.0, 851.0], [85.1, 852.0], [85.2, 852.0], [85.3, 853.0], [85.4, 855.0], [85.5, 855.0], [85.6, 857.0], [85.7, 859.0], [85.8, 859.0], [85.9, 862.0], [86.0, 864.0], [86.1, 864.0], [86.2, 864.0], [86.3, 865.0], [86.4, 865.0], [86.5, 872.0], [86.6, 873.0], [86.7, 873.0], [86.8, 875.0], [86.9, 876.0], [87.0, 876.0], [87.1, 877.0], [87.2, 879.0], [87.3, 879.0], [87.4, 883.0], [87.5, 883.0], [87.6, 883.0], [87.7, 889.0], [87.8, 892.0], [87.9, 892.0], [88.0, 896.0], [88.1, 896.0], [88.2, 896.0], [88.3, 900.0], [88.4, 901.0], [88.5, 901.0], [88.6, 903.0], [88.7, 905.0], [88.8, 905.0], [88.9, 910.0], [89.0, 911.0], [89.1, 911.0], [89.2, 912.0], [89.3, 912.0], [89.4, 912.0], [89.5, 912.0], [89.6, 914.0], [89.7, 914.0], [89.8, 914.0], [89.9, 914.0], [90.0, 914.0], [90.1, 918.0], [90.2, 923.0], [90.3, 923.0], [90.4, 932.0], [90.5, 933.0], [90.6, 933.0], [90.7, 934.0], [90.8, 935.0], [90.9, 935.0], [91.0, 940.0], [91.1, 941.0], [91.2, 941.0], [91.3, 946.0], [91.4, 948.0], [91.5, 948.0], [91.6, 948.0], [91.7, 949.0], [91.8, 949.0], [91.9, 951.0], [92.0, 958.0], [92.1, 958.0], [92.2, 960.0], [92.3, 960.0], [92.4, 960.0], [92.5, 960.0], [92.6, 962.0], [92.7, 966.0], [92.8, 966.0], [92.9, 970.0], [93.0, 972.0], [93.1, 972.0], [93.2, 978.0], [93.3, 980.0], [93.4, 980.0], [93.5, 980.0], [93.6, 982.0], [93.7, 982.0], [93.8, 984.0], [93.9, 985.0], [94.0, 985.0], [94.1, 990.0], [94.2, 994.0], [94.3, 994.0], [94.4, 994.0], [94.5, 999.0], [94.6, 999.0], [94.7, 1005.0], [94.8, 1005.0], [94.9, 1005.0], [95.0, 1012.0], [95.1, 1019.0], [95.2, 1019.0], [95.3, 1023.0], [95.4, 1023.0], [95.5, 1023.0], [95.6, 1027.0], [95.7, 1033.0], [95.8, 1033.0], [95.9, 1042.0], [96.0, 1043.0], [96.1, 1043.0], [96.2, 1046.0], [96.3, 1050.0], [96.4, 1050.0], [96.5, 1058.0], [96.6, 1065.0], [96.7, 1065.0], [96.8, 1066.0], [96.9, 1068.0], [97.0, 1068.0], [97.1, 1073.0], [97.2, 1078.0], [97.3, 1078.0], [97.4, 1102.0], [97.5, 1145.0], [97.6, 1145.0], [97.7, 1147.0], [97.8, 1151.0], [97.9, 1151.0], [98.0, 1156.0], [98.1, 1157.0], [98.2, 1157.0], [98.3, 1168.0], [98.4, 1210.0], [98.5, 1210.0], [98.6, 1214.0], [98.7, 1219.0], [98.8, 1219.0], [98.9, 1280.0], [99.0, 1285.0], [99.1, 1285.0], [99.2, 1297.0], [99.3, 1304.0], [99.4, 1304.0], [99.5, 1309.0], [99.6, 1322.0], [99.7, 1322.0], [99.8, 1479.0], [99.9, 1498.0]], "isOverall": false, "label": "Post PROB UNREMOVE", "isController": false}, {"data": [[0.0, 14.0], [0.1, 14.0], [0.2, 15.0], [0.3, 16.0], [0.4, 16.0], [0.5, 16.0], [0.6, 16.0], [0.7, 17.0], [0.8, 18.0], [0.9, 18.0], [1.0, 19.0], [1.1, 69.0], [1.2, 89.0], [1.3, 89.0], [1.4, 92.0], [1.5, 127.0], [1.6, 140.0], [1.7, 140.0], [1.8, 199.0], [1.9, 222.0], [2.0, 299.0], [2.1, 299.0], [2.2, 412.0], [2.3, 513.0], [2.4, 607.0], [2.5, 607.0], [2.6, 670.0], [2.7, 787.0], [2.8, 788.0], [2.9, 789.0], [3.0, 789.0], [3.1, 831.0], [3.2, 864.0], [3.3, 887.0], [3.4, 887.0], [3.5, 904.0], [3.6, 910.0], [3.7, 911.0], [3.8, 911.0], [3.9, 989.0], [4.0, 1024.0], [4.1, 1090.0], [4.2, 1090.0], [4.3, 1093.0], [4.4, 1099.0], [4.5, 1145.0], [4.6, 1145.0], [4.7, 1153.0], [4.8, 1168.0], [4.9, 1214.0], [5.0, 1214.0], [5.1, 1217.0], [5.2, 1268.0], [5.3, 1312.0], [5.4, 1362.0], [5.5, 1362.0], [5.6, 1385.0], [5.7, 1411.0], [5.8, 1425.0], [5.9, 1425.0], [6.0, 1498.0], [6.1, 1508.0], [6.2, 1647.0], [6.3, 1647.0], [6.4, 1677.0], [6.5, 1925.0], [6.6, 1955.0], [6.7, 1955.0], [6.8, 2082.0], [6.9, 2099.0], [7.0, 2307.0], [7.1, 2307.0], [7.2, 2313.0], [7.3, 2325.0], [7.4, 2431.0], [7.5, 2431.0], [7.6, 2476.0], [7.7, 2670.0], [7.8, 2760.0], [7.9, 2800.0], [8.0, 2800.0], [8.1, 2833.0], [8.2, 2838.0], [8.3, 2857.0], [8.4, 2857.0], [8.5, 2890.0], [8.6, 2939.0], [8.7, 3015.0], [8.8, 3015.0], [8.9, 3033.0], [9.0, 3074.0], [9.1, 3212.0], [9.2, 3212.0], [9.3, 3213.0], [9.4, 3226.0], [9.5, 3478.0], [9.6, 3478.0], [9.7, 3518.0], [9.8, 3603.0], [9.9, 3632.0], [10.0, 3632.0], [10.1, 3861.0], [10.2, 4039.0], [10.3, 4045.0], [10.4, 4095.0], [10.5, 4095.0], [10.6, 4140.0], [10.7, 4340.0], [10.8, 4375.0], [10.9, 4375.0], [11.0, 4399.0], [11.1, 4415.0], [11.2, 4465.0], [11.3, 4465.0], [11.4, 4535.0], [11.5, 4648.0], [11.6, 4698.0], [11.7, 4698.0], [11.8, 4769.0], [11.9, 4786.0], [12.0, 4976.0], [12.1, 4976.0], [12.2, 5206.0], [12.3, 5215.0], [12.4, 5228.0], [12.5, 5228.0], [12.6, 5266.0], [12.7, 5439.0], [12.8, 5503.0], [12.9, 5548.0], [13.0, 5548.0], [13.1, 5563.0], [13.2, 5644.0], [13.3, 5732.0], [13.4, 5732.0], [13.5, 5777.0], [13.6, 6029.0], [13.7, 6106.0], [13.8, 6106.0], [13.9, 6217.0], [14.0, 6241.0], [14.1, 6243.0], [14.2, 6243.0], [14.3, 6326.0], [14.4, 6349.0], [14.5, 6351.0], [14.6, 6351.0], [14.7, 6365.0], [14.8, 6422.0], [14.9, 6443.0], [15.0, 6443.0], [15.1, 6462.0], [15.2, 6483.0], [15.3, 6544.0], [15.4, 6551.0], [15.5, 6551.0], [15.6, 6555.0], [15.7, 6557.0], [15.8, 6593.0], [15.9, 6593.0], [16.0, 6617.0], [16.1, 6628.0], [16.2, 6630.0], [16.3, 6630.0], [16.4, 6635.0], [16.5, 6639.0], [16.6, 6651.0], [16.7, 6651.0], [16.8, 6665.0], [16.9, 6687.0], [17.0, 6692.0], [17.1, 6692.0], [17.2, 6707.0], [17.3, 6711.0], [17.4, 6715.0], [17.5, 6715.0], [17.6, 6738.0], [17.7, 6744.0], [17.8, 6750.0], [17.9, 6782.0], [18.0, 6782.0], [18.1, 6786.0], [18.2, 6790.0], [18.3, 6800.0], [18.4, 6800.0], [18.5, 6801.0], [18.6, 6811.0], [18.7, 6826.0], [18.8, 6826.0], [18.9, 6832.0], [19.0, 6846.0], [19.1, 6858.0], [19.2, 6858.0], [19.3, 6863.0], [19.4, 6866.0], [19.5, 6882.0], [19.6, 6882.0], [19.7, 6885.0], [19.8, 6894.0], [19.9, 6899.0], [20.0, 6899.0], [20.1, 6899.0], [20.2, 6900.0], [20.3, 6905.0], [20.4, 6912.0], [20.5, 6912.0], [20.6, 6917.0], [20.7, 6923.0], [20.8, 6931.0], [20.9, 6931.0], [21.0, 6935.0], [21.1, 6939.0], [21.2, 6940.0], [21.3, 6940.0], [21.4, 6944.0], [21.5, 6947.0], [21.6, 6959.0], [21.7, 6959.0], [21.8, 6966.0], [21.9, 6967.0], [22.0, 6969.0], [22.1, 6969.0], [22.2, 6976.0], [22.3, 6978.0], [22.4, 6987.0], [22.5, 6987.0], [22.6, 6993.0], [22.7, 6998.0], [22.8, 7006.0], [22.9, 7015.0], [23.0, 7015.0], [23.1, 7036.0], [23.2, 7036.0], [23.3, 7044.0], [23.4, 7044.0], [23.5, 7049.0], [23.6, 7055.0], [23.7, 7061.0], [23.8, 7061.0], [23.9, 7066.0], [24.0, 7068.0], [24.1, 7069.0], [24.2, 7069.0], [24.3, 7072.0], [24.4, 7077.0], [24.5, 7078.0], [24.6, 7078.0], [24.7, 7080.0], [24.8, 7081.0], [24.9, 7086.0], [25.0, 7086.0], [25.1, 7090.0], [25.2, 7091.0], [25.3, 7102.0], [25.4, 7106.0], [25.5, 7106.0], [25.6, 7107.0], [25.7, 7111.0], [25.8, 7111.0], [25.9, 7111.0], [26.0, 7112.0], [26.1, 7113.0], [26.2, 7119.0], [26.3, 7119.0], [26.4, 7126.0], [26.5, 7127.0], [26.6, 7128.0], [26.7, 7128.0], [26.8, 7131.0], [26.9, 7132.0], [27.0, 7137.0], [27.1, 7137.0], [27.2, 7142.0], [27.3, 7146.0], [27.4, 7156.0], [27.5, 7156.0], [27.6, 7160.0], [27.7, 7177.0], [27.8, 7181.0], [27.9, 7209.0], [28.0, 7209.0], [28.1, 7216.0], [28.2, 7219.0], [28.3, 7220.0], [28.4, 7220.0], [28.5, 7224.0], [28.6, 7229.0], [28.7, 7229.0], [28.8, 7229.0], [28.9, 7242.0], [29.0, 7249.0], [29.1, 7251.0], [29.2, 7251.0], [29.3, 7251.0], [29.4, 7252.0], [29.5, 7259.0], [29.6, 7259.0], [29.7, 7270.0], [29.8, 7273.0], [29.9, 7279.0], [30.0, 7279.0], [30.1, 7280.0], [30.2, 7283.0], [30.3, 7286.0], [30.4, 7293.0], [30.5, 7293.0], [30.6, 7293.0], [30.7, 7295.0], [30.8, 7299.0], [30.9, 7299.0], [31.0, 7301.0], [31.1, 7303.0], [31.2, 7310.0], [31.3, 7310.0], [31.4, 7310.0], [31.5, 7329.0], [31.6, 7343.0], [31.7, 7343.0], [31.8, 7345.0], [31.9, 7374.0], [32.0, 7382.0], [32.1, 7382.0], [32.2, 7394.0], [32.3, 7395.0], [32.4, 7407.0], [32.5, 7407.0], [32.6, 7408.0], [32.7, 7412.0], [32.8, 7413.0], [32.9, 7425.0], [33.0, 7425.0], [33.1, 7434.0], [33.2, 7436.0], [33.3, 7445.0], [33.4, 7445.0], [33.5, 7450.0], [33.6, 7450.0], [33.7, 7459.0], [33.8, 7459.0], [33.9, 7459.0], [34.0, 7476.0], [34.1, 7484.0], [34.2, 7484.0], [34.3, 7487.0], [34.4, 7491.0], [34.5, 7498.0], [34.6, 7498.0], [34.7, 7506.0], [34.8, 7516.0], [34.9, 7516.0], [35.0, 7519.0], [35.1, 7519.0], [35.2, 7526.0], [35.3, 7530.0], [35.4, 7532.0], [35.5, 7532.0], [35.6, 7533.0], [35.7, 7536.0], [35.8, 7536.0], [35.9, 7536.0], [36.0, 7544.0], [36.1, 7557.0], [36.2, 7560.0], [36.3, 7560.0], [36.4, 7567.0], [36.5, 7573.0], [36.6, 7577.0], [36.7, 7577.0], [36.8, 7582.0], [36.9, 7587.0], [37.0, 7593.0], [37.1, 7593.0], [37.2, 7598.0], [37.3, 7600.0], [37.4, 7610.0], [37.5, 7620.0], [37.6, 7620.0], [37.7, 7623.0], [37.8, 7632.0], [37.9, 7635.0], [38.0, 7635.0], [38.1, 7640.0], [38.2, 7654.0], [38.3, 7659.0], [38.4, 7659.0], [38.5, 7660.0], [38.6, 7664.0], [38.7, 7675.0], [38.8, 7675.0], [38.9, 7698.0], [39.0, 7712.0], [39.1, 7714.0], [39.2, 7714.0], [39.3, 7728.0], [39.4, 7729.0], [39.5, 7746.0], [39.6, 7746.0], [39.7, 7777.0], [39.8, 7788.0], [39.9, 7794.0], [40.0, 7818.0], [40.1, 7818.0], [40.2, 7825.0], [40.3, 7832.0], [40.4, 7840.0], [40.5, 7840.0], [40.6, 7840.0], [40.7, 7889.0], [40.8, 7916.0], [40.9, 7916.0], [41.0, 7918.0], [41.1, 7922.0], [41.2, 7922.0], [41.3, 7922.0], [41.4, 7927.0], [41.5, 7953.0], [41.6, 7956.0], [41.7, 7956.0], [41.8, 7980.0], [41.9, 7985.0], [42.0, 7996.0], [42.1, 7996.0], [42.2, 7998.0], [42.3, 8008.0], [42.4, 8035.0], [42.5, 8045.0], [42.6, 8045.0], [42.7, 8048.0], [42.8, 8104.0], [42.9, 8184.0], [43.0, 8184.0], [43.1, 8209.0], [43.2, 8214.0], [43.3, 8216.0], [43.4, 8216.0], [43.5, 8288.0], [43.6, 8348.0], [43.7, 8350.0], [43.8, 8350.0], [43.9, 8484.0], [44.0, 8512.0], [44.1, 8538.0], [44.2, 8538.0], [44.3, 8538.0], [44.4, 8572.0], [44.5, 8747.0], [44.6, 8747.0], [44.7, 8829.0], [44.8, 9013.0], [44.9, 9054.0], [45.0, 9094.0], [45.1, 9094.0], [45.2, 9163.0], [45.3, 9213.0], [45.4, 9222.0], [45.5, 9222.0], [45.6, 9604.0], [45.7, 9634.0], [45.8, 9655.0], [45.9, 9655.0], [46.0, 9740.0], [46.1, 9764.0], [46.2, 9814.0], [46.3, 9814.0], [46.4, 9892.0], [46.5, 10038.0], [46.6, 10060.0], [46.7, 10060.0], [46.8, 10066.0], [46.9, 10452.0], [47.0, 11051.0], [47.1, 11051.0], [47.2, 11093.0], [47.3, 11133.0], [47.4, 11445.0], [47.5, 11481.0], [47.6, 11481.0], [47.7, 11634.0], [47.8, 11828.0], [47.9, 11876.0], [48.0, 11876.0], [48.1, 11896.0], [48.2, 11972.0], [48.3, 12035.0], [48.4, 12035.0], [48.5, 12037.0], [48.6, 12193.0], [48.7, 12420.0], [48.8, 12420.0], [48.9, 12429.0], [49.0, 12499.0], [49.1, 12499.0], [49.2, 12499.0], [49.3, 12601.0], [49.4, 12701.0], [49.5, 12778.0], [49.6, 12778.0], [49.7, 12901.0], [49.8, 12978.0], [49.9, 12986.0], [50.0, 13037.0], [50.1, 13037.0], [50.2, 13141.0], [50.3, 13165.0], [50.4, 13196.0], [50.5, 13196.0], [50.6, 13199.0], [50.7, 13219.0], [50.8, 13296.0], [50.9, 13296.0], [51.0, 13312.0], [51.1, 13315.0], [51.2, 13317.0], [51.3, 13317.0], [51.4, 13495.0], [51.5, 13601.0], [51.6, 13602.0], [51.7, 13602.0], [51.8, 13678.0], [51.9, 13732.0], [52.0, 13774.0], [52.1, 13774.0], [52.2, 13776.0], [52.3, 13846.0], [52.4, 13893.0], [52.5, 14033.0], [52.6, 14033.0], [52.7, 14185.0], [52.8, 14326.0], [52.9, 14331.0], [53.0, 14331.0], [53.1, 14429.0], [53.2, 14578.0], [53.3, 14600.0], [53.4, 14600.0], [53.5, 14740.0], [53.6, 14772.0], [53.7, 14856.0], [53.8, 14856.0], [53.9, 14966.0], [54.0, 14978.0], [54.1, 14988.0], [54.2, 14988.0], [54.3, 15012.0], [54.4, 15114.0], [54.5, 15124.0], [54.6, 15124.0], [54.7, 15189.0], [54.8, 15226.0], [54.9, 15226.0], [55.0, 15356.0], [55.1, 15356.0], [55.2, 15385.0], [55.3, 15389.0], [55.4, 15409.0], [55.5, 15409.0], [55.6, 15412.0], [55.7, 15449.0], [55.8, 15469.0], [55.9, 15469.0], [56.0, 15532.0], [56.1, 15586.0], [56.2, 15592.0], [56.3, 15592.0], [56.4, 15598.0], [56.5, 15608.0], [56.6, 15625.0], [56.7, 15625.0], [56.8, 15632.0], [56.9, 15637.0], [57.0, 15638.0], [57.1, 15638.0], [57.2, 15644.0], [57.3, 15667.0], [57.4, 15692.0], [57.5, 15704.0], [57.6, 15704.0], [57.7, 15707.0], [57.8, 15710.0], [57.9, 15726.0], [58.0, 15726.0], [58.1, 15746.0], [58.2, 15748.0], [58.3, 15774.0], [58.4, 15774.0], [58.5, 15780.0], [58.6, 15784.0], [58.7, 15802.0], [58.8, 15802.0], [58.9, 15815.0], [59.0, 15817.0], [59.1, 15824.0], [59.2, 15824.0], [59.3, 15833.0], [59.4, 15837.0], [59.5, 15884.0], [59.6, 15884.0], [59.7, 15918.0], [59.8, 15920.0], [59.9, 15923.0], [60.0, 15927.0], [60.1, 15927.0], [60.2, 15933.0], [60.3, 15958.0], [60.4, 15977.0], [60.5, 15977.0], [60.6, 15981.0], [60.7, 15988.0], [60.8, 15994.0], [60.9, 15994.0], [61.0, 15997.0], [61.1, 16000.0], [61.2, 16003.0], [61.3, 16003.0], [61.4, 16021.0], [61.5, 16021.0], [61.6, 16032.0], [61.7, 16032.0], [61.8, 16033.0], [61.9, 16036.0], [62.0, 16042.0], [62.1, 16042.0], [62.2, 16044.0], [62.3, 16055.0], [62.4, 16062.0], [62.5, 16064.0], [62.6, 16064.0], [62.7, 16073.0], [62.8, 16076.0], [62.9, 16076.0], [63.0, 16076.0], [63.1, 16082.0], [63.2, 16084.0], [63.3, 16107.0], [63.4, 16107.0], [63.5, 16123.0], [63.6, 16136.0], [63.7, 16141.0], [63.8, 16141.0], [63.9, 16147.0], [64.0, 16163.0], [64.1, 16185.0], [64.2, 16185.0], [64.3, 16191.0], [64.4, 16203.0], [64.5, 16211.0], [64.6, 16211.0], [64.7, 16213.0], [64.8, 16216.0], [64.9, 16252.0], [65.0, 16261.0], [65.1, 16261.0], [65.2, 16275.0], [65.3, 16284.0], [65.4, 16293.0], [65.5, 16293.0], [65.6, 16302.0], [65.7, 16307.0], [65.8, 16312.0], [65.9, 16312.0], [66.0, 16327.0], [66.1, 16334.0], [66.2, 16342.0], [66.3, 16342.0], [66.4, 16345.0], [66.5, 16351.0], [66.6, 16392.0], [66.7, 16392.0], [66.8, 16392.0], [66.9, 16404.0], [67.0, 16408.0], [67.1, 16408.0], [67.2, 16431.0], [67.3, 16483.0], [67.4, 16484.0], [67.5, 16510.0], [67.6, 16510.0], [67.7, 16521.0], [67.8, 16532.0], [67.9, 16535.0], [68.0, 16535.0], [68.1, 16535.0], [68.2, 16555.0], [68.3, 16586.0], [68.4, 16586.0], [68.5, 16586.0], [68.6, 16628.0], [68.7, 16645.0], [68.8, 16645.0], [68.9, 16650.0], [69.0, 16652.0], [69.1, 16657.0], [69.2, 16657.0], [69.3, 16658.0], [69.4, 16664.0], [69.5, 16676.0], [69.6, 16676.0], [69.7, 16680.0], [69.8, 16695.0], [69.9, 16707.0], [70.0, 16734.0], [70.1, 16734.0], [70.2, 16736.0], [70.3, 16743.0], [70.4, 16747.0], [70.5, 16747.0], [70.6, 16764.0], [70.7, 16765.0], [70.8, 16770.0], [70.9, 16770.0], [71.0, 16782.0], [71.1, 16820.0], [71.2, 16865.0], [71.3, 16865.0], [71.4, 16867.0], [71.5, 16879.0], [71.6, 16921.0], [71.7, 16921.0], [71.8, 16936.0], [71.9, 16943.0], [72.0, 16952.0], [72.1, 16952.0], [72.2, 16959.0], [72.3, 16986.0], [72.4, 17030.0], [72.5, 17050.0], [72.6, 17050.0], [72.7, 17057.0], [72.8, 17097.0], [72.9, 17115.0], [73.0, 17115.0], [73.1, 17116.0], [73.2, 17126.0], [73.3, 17128.0], [73.4, 17128.0], [73.5, 17137.0], [73.6, 17209.0], [73.7, 17231.0], [73.8, 17231.0], [73.9, 17261.0], [74.0, 17261.0], [74.1, 17325.0], [74.2, 17325.0], [74.3, 17332.0], [74.4, 17384.0], [74.5, 17396.0], [74.6, 17396.0], [74.7, 17406.0], [74.8, 17408.0], [74.9, 17430.0], [75.0, 17446.0], [75.1, 17446.0], [75.2, 17472.0], [75.3, 17483.0], [75.4, 17557.0], [75.5, 17557.0], [75.6, 17605.0], [75.7, 17647.0], [75.8, 17686.0], [75.9, 17686.0], [76.0, 17691.0], [76.1, 17691.0], [76.2, 17736.0], [76.3, 17736.0], [76.4, 17739.0], [76.5, 17773.0], [76.6, 17776.0], [76.7, 17776.0], [76.8, 17777.0], [76.9, 17843.0], [77.0, 17891.0], [77.1, 17891.0], [77.2, 17897.0], [77.3, 17944.0], [77.4, 17965.0], [77.5, 18097.0], [77.6, 18097.0], [77.7, 18120.0], [77.8, 18236.0], [77.9, 18379.0], [78.0, 18379.0], [78.1, 18616.0], [78.2, 18681.0], [78.3, 18927.0], [78.4, 18927.0], [78.5, 18992.0], [78.6, 19246.0], [78.7, 19347.0], [78.8, 19347.0], [78.9, 19439.0], [79.0, 19483.0], [79.1, 19675.0], [79.2, 19675.0], [79.3, 19731.0], [79.4, 19733.0], [79.5, 19795.0], [79.6, 19795.0], [79.7, 19805.0], [79.8, 19846.0], [79.9, 19882.0], [80.0, 20066.0], [80.1, 20066.0], [80.2, 20111.0], [80.3, 20337.0], [80.4, 20417.0], [80.5, 20417.0], [80.6, 20508.0], [80.7, 20538.0], [80.8, 20569.0], [80.9, 20569.0], [81.0, 20578.0], [81.1, 20590.0], [81.2, 20754.0], [81.3, 20754.0], [81.4, 20784.0], [81.5, 20818.0], [81.6, 20867.0], [81.7, 20867.0], [81.8, 20878.0], [81.9, 20889.0], [82.0, 20911.0], [82.1, 20911.0], [82.2, 20920.0], [82.3, 20928.0], [82.4, 20939.0], [82.5, 20952.0], [82.6, 20952.0], [82.7, 20989.0], [82.8, 20996.0], [82.9, 21031.0], [83.0, 21031.0], [83.1, 21066.0], [83.2, 21088.0], [83.3, 21133.0], [83.4, 21133.0], [83.5, 21173.0], [83.6, 21248.0], [83.7, 21268.0], [83.8, 21268.0], [83.9, 21289.0], [84.0, 21404.0], [84.1, 21470.0], [84.2, 21470.0], [84.3, 21560.0], [84.4, 21578.0], [84.5, 21666.0], [84.6, 21666.0], [84.7, 21710.0], [84.8, 21721.0], [84.9, 21754.0], [85.0, 21850.0], [85.1, 21850.0], [85.2, 22009.0], [85.3, 22066.0], [85.4, 22096.0], [85.5, 22096.0], [85.6, 22291.0], [85.7, 22336.0], [85.8, 22368.0], [85.9, 22368.0], [86.0, 22538.0], [86.1, 22557.0], [86.2, 22580.0], [86.3, 22580.0], [86.4, 22603.0], [86.5, 22611.0], [86.6, 22818.0], [86.7, 22818.0], [86.8, 22834.0], [86.9, 22875.0], [87.0, 22951.0], [87.1, 22951.0], [87.2, 23044.0], [87.3, 23058.0], [87.4, 23063.0], [87.5, 23161.0], [87.6, 23161.0], [87.7, 23187.0], [87.8, 23432.0], [87.9, 23478.0], [88.0, 23478.0], [88.1, 23529.0], [88.2, 23972.0], [88.3, 24303.0], [88.4, 24303.0], [88.5, 24405.0], [88.6, 24581.0], [88.7, 24657.0], [88.8, 24657.0], [88.9, 24713.0], [89.0, 24742.0], [89.1, 24779.0], [89.2, 24779.0], [89.3, 24955.0], [89.4, 24958.0], [89.5, 24977.0], [89.6, 24977.0], [89.7, 25013.0], [89.8, 25077.0], [89.9, 25364.0], [90.0, 25570.0], [90.1, 25570.0], [90.2, 25597.0], [90.3, 25619.0], [90.4, 25629.0], [90.5, 25629.0], [90.6, 25664.0], [90.7, 25690.0], [90.8, 25702.0], [90.9, 25702.0], [91.0, 25758.0], [91.1, 25812.0], [91.2, 25823.0], [91.3, 25823.0], [91.4, 25830.0], [91.5, 25859.0], [91.6, 25881.0], [91.7, 25881.0], [91.8, 26024.0], [91.9, 26029.0], [92.0, 26046.0], [92.1, 26046.0], [92.2, 26072.0], [92.3, 26096.0], [92.4, 26127.0], [92.5, 26127.0], [92.6, 26140.0], [92.7, 26162.0], [92.8, 26167.0], [92.9, 26216.0], [93.0, 26216.0], [93.1, 26221.0], [93.2, 26237.0], [93.3, 26258.0], [93.4, 26258.0], [93.5, 26272.0], [93.6, 26282.0], [93.7, 26309.0], [93.8, 26309.0], [93.9, 26316.0], [94.0, 26319.0], [94.1, 26338.0], [94.2, 26338.0], [94.3, 26343.0], [94.4, 26460.0], [94.5, 26494.0], [94.6, 26494.0], [94.7, 26564.0], [94.8, 26585.0], [94.9, 26631.0], [95.0, 26631.0], [95.1, 26654.0], [95.2, 26715.0], [95.3, 26746.0], [95.4, 26834.0], [95.5, 26834.0], [95.6, 26875.0], [95.7, 26914.0], [95.8, 26953.0], [95.9, 26953.0], [96.0, 26977.0], [96.1, 26989.0], [96.2, 27003.0], [96.3, 27003.0], [96.4, 27091.0], [96.5, 27305.0], [96.6, 27384.0], [96.7, 27384.0], [96.8, 27680.0], [96.9, 27737.0], [97.0, 27899.0], [97.1, 27899.0], [97.2, 28022.0], [97.3, 28478.0], [97.4, 28598.0], [97.5, 28598.0], [97.6, 28968.0], [97.7, 29120.0], [97.8, 29162.0], [97.9, 29221.0], [98.0, 29221.0], [98.1, 29242.0], [98.2, 29445.0], [98.3, 29490.0], [98.4, 29490.0], [98.5, 29510.0], [98.6, 29558.0], [98.7, 29843.0], [98.8, 29843.0], [98.9, 29941.0], [99.0, 29966.0], [99.1, 30060.0], [99.2, 30060.0], [99.3, 30078.0], [99.4, 30152.0], [99.5, 30267.0], [99.6, 30267.0], [99.7, 30614.0], [99.8, 30630.0], [99.9, 30870.0], [100.0, 30870.0]], "isOverall": false, "label": "Post PROB", "isController": false}, {"data": [[0.0, 12.0], [0.1, 12.0], [0.2, 13.0], [0.3, 19.0], [0.4, 19.0], [0.5, 21.0], [0.6, 38.0], [0.7, 38.0], [0.8, 50.0], [0.9, 74.0], [1.0, 74.0], [1.1, 88.0], [1.2, 128.0], [1.3, 128.0], [1.4, 318.0], [1.5, 364.0], [1.6, 364.0], [1.7, 419.0], [1.8, 450.0], [1.9, 450.0], [2.0, 455.0], [2.1, 458.0], [2.2, 458.0], [2.3, 460.0], [2.4, 461.0], [2.5, 461.0], [2.6, 470.0], [2.7, 502.0], [2.8, 502.0], [2.9, 510.0], [3.0, 520.0], [3.1, 520.0], [3.2, 521.0], [3.3, 524.0], [3.4, 524.0], [3.5, 529.0], [3.6, 530.0], [3.7, 530.0], [3.8, 531.0], [3.9, 545.0], [4.0, 545.0], [4.1, 555.0], [4.2, 570.0], [4.3, 570.0], [4.4, 576.0], [4.5, 589.0], [4.6, 597.0], [4.7, 597.0], [4.8, 629.0], [4.9, 636.0], [5.0, 636.0], [5.1, 650.0], [5.2, 668.0], [5.3, 668.0], [5.4, 684.0], [5.5, 700.0], [5.6, 700.0], [5.7, 718.0], [5.8, 731.0], [5.9, 731.0], [6.0, 731.0], [6.1, 742.0], [6.2, 742.0], [6.3, 745.0], [6.4, 760.0], [6.5, 760.0], [6.6, 763.0], [6.7, 795.0], [6.8, 795.0], [6.9, 803.0], [7.0, 804.0], [7.1, 804.0], [7.2, 809.0], [7.3, 816.0], [7.4, 816.0], [7.5, 818.0], [7.6, 819.0], [7.7, 819.0], [7.8, 822.0], [7.9, 827.0], [8.0, 827.0], [8.1, 829.0], [8.2, 829.0], [8.3, 829.0], [8.4, 833.0], [8.5, 839.0], [8.6, 839.0], [8.7, 840.0], [8.8, 843.0], [8.9, 843.0], [9.0, 846.0], [9.1, 850.0], [9.2, 852.0], [9.3, 852.0], [9.4, 852.0], [9.5, 855.0], [9.6, 855.0], [9.7, 858.0], [9.8, 859.0], [9.9, 859.0], [10.0, 859.0], [10.1, 872.0], [10.2, 872.0], [10.3, 874.0], [10.4, 879.0], [10.5, 879.0], [10.6, 879.0], [10.7, 885.0], [10.8, 885.0], [10.9, 885.0], [11.0, 885.0], [11.1, 885.0], [11.2, 886.0], [11.3, 887.0], [11.4, 887.0], [11.5, 888.0], [11.6, 889.0], [11.7, 889.0], [11.8, 891.0], [11.9, 892.0], [12.0, 892.0], [12.1, 894.0], [12.2, 895.0], [12.3, 895.0], [12.4, 900.0], [12.5, 901.0], [12.6, 901.0], [12.7, 903.0], [12.8, 908.0], [12.9, 908.0], [13.0, 908.0], [13.1, 909.0], [13.2, 909.0], [13.3, 914.0], [13.4, 920.0], [13.5, 920.0], [13.6, 921.0], [13.7, 924.0], [13.8, 925.0], [13.9, 925.0], [14.0, 925.0], [14.1, 926.0], [14.2, 926.0], [14.3, 926.0], [14.4, 930.0], [14.5, 930.0], [14.6, 931.0], [14.7, 931.0], [14.8, 931.0], [14.9, 932.0], [15.0, 933.0], [15.1, 933.0], [15.2, 941.0], [15.3, 941.0], [15.4, 941.0], [15.5, 942.0], [15.6, 945.0], [15.7, 945.0], [15.8, 945.0], [15.9, 946.0], [16.0, 946.0], [16.1, 948.0], [16.2, 948.0], [16.3, 948.0], [16.4, 950.0], [16.5, 950.0], [16.6, 950.0], [16.7, 950.0], [16.8, 965.0], [16.9, 965.0], [17.0, 967.0], [17.1, 969.0], [17.2, 969.0], [17.3, 970.0], [17.4, 971.0], [17.5, 971.0], [17.6, 971.0], [17.7, 974.0], [17.8, 974.0], [17.9, 975.0], [18.0, 976.0], [18.1, 976.0], [18.2, 982.0], [18.3, 983.0], [18.4, 985.0], [18.5, 985.0], [18.6, 986.0], [18.7, 987.0], [18.8, 987.0], [18.9, 988.0], [19.0, 991.0], [19.1, 991.0], [19.2, 997.0], [19.3, 1000.0], [19.4, 1000.0], [19.5, 1000.0], [19.6, 1002.0], [19.7, 1002.0], [19.8, 1004.0], [19.9, 1004.0], [20.0, 1004.0], [20.1, 1006.0], [20.2, 1006.0], [20.3, 1006.0], [20.4, 1009.0], [20.5, 1012.0], [20.6, 1012.0], [20.7, 1022.0], [20.8, 1026.0], [20.9, 1026.0], [21.0, 1027.0], [21.1, 1028.0], [21.2, 1028.0], [21.3, 1030.0], [21.4, 1031.0], [21.5, 1031.0], [21.6, 1033.0], [21.7, 1036.0], [21.8, 1036.0], [21.9, 1040.0], [22.0, 1045.0], [22.1, 1045.0], [22.2, 1047.0], [22.3, 1051.0], [22.4, 1051.0], [22.5, 1051.0], [22.6, 1055.0], [22.7, 1055.0], [22.8, 1058.0], [22.9, 1059.0], [23.0, 1059.0], [23.1, 1059.0], [23.2, 1060.0], [23.3, 1064.0], [23.4, 1064.0], [23.5, 1066.0], [23.6, 1068.0], [23.7, 1068.0], [23.8, 1069.0], [23.9, 1069.0], [24.0, 1069.0], [24.1, 1070.0], [24.2, 1070.0], [24.3, 1070.0], [24.4, 1071.0], [24.5, 1073.0], [24.6, 1073.0], [24.7, 1073.0], [24.8, 1076.0], [24.9, 1076.0], [25.0, 1080.0], [25.1, 1080.0], [25.2, 1080.0], [25.3, 1081.0], [25.4, 1084.0], [25.5, 1084.0], [25.6, 1086.0], [25.7, 1087.0], [25.8, 1087.0], [25.9, 1088.0], [26.0, 1093.0], [26.1, 1093.0], [26.2, 1094.0], [26.3, 1095.0], [26.4, 1095.0], [26.5, 1098.0], [26.6, 1098.0], [26.7, 1098.0], [26.8, 1101.0], [26.9, 1104.0], [27.0, 1104.0], [27.1, 1104.0], [27.2, 1104.0], [27.3, 1105.0], [27.4, 1105.0], [27.5, 1107.0], [27.6, 1108.0], [27.7, 1108.0], [27.8, 1110.0], [27.9, 1112.0], [28.0, 1112.0], [28.1, 1113.0], [28.2, 1115.0], [28.3, 1115.0], [28.4, 1115.0], [28.5, 1116.0], [28.6, 1116.0], [28.7, 1118.0], [28.8, 1119.0], [28.9, 1119.0], [29.0, 1120.0], [29.1, 1120.0], [29.2, 1120.0], [29.3, 1124.0], [29.4, 1128.0], [29.5, 1128.0], [29.6, 1128.0], [29.7, 1129.0], [29.8, 1129.0], [29.9, 1130.0], [30.0, 1132.0], [30.1, 1132.0], [30.2, 1137.0], [30.3, 1143.0], [30.4, 1143.0], [30.5, 1143.0], [30.6, 1143.0], [30.7, 1143.0], [30.8, 1144.0], [30.9, 1145.0], [31.0, 1145.0], [31.1, 1146.0], [31.2, 1147.0], [31.3, 1147.0], [31.4, 1147.0], [31.5, 1147.0], [31.6, 1147.0], [31.7, 1149.0], [31.8, 1150.0], [31.9, 1151.0], [32.0, 1151.0], [32.1, 1156.0], [32.2, 1157.0], [32.3, 1157.0], [32.4, 1157.0], [32.5, 1157.0], [32.6, 1157.0], [32.7, 1159.0], [32.8, 1160.0], [32.9, 1160.0], [33.0, 1162.0], [33.1, 1163.0], [33.2, 1163.0], [33.3, 1163.0], [33.4, 1169.0], [33.5, 1169.0], [33.6, 1170.0], [33.7, 1171.0], [33.8, 1171.0], [33.9, 1173.0], [34.0, 1176.0], [34.1, 1176.0], [34.2, 1177.0], [34.3, 1179.0], [34.4, 1179.0], [34.5, 1181.0], [34.6, 1185.0], [34.7, 1185.0], [34.8, 1185.0], [34.9, 1187.0], [35.0, 1187.0], [35.1, 1188.0], [35.2, 1191.0], [35.3, 1191.0], [35.4, 1193.0], [35.5, 1193.0], [35.6, 1193.0], [35.7, 1194.0], [35.8, 1194.0], [35.9, 1194.0], [36.0, 1198.0], [36.1, 1201.0], [36.2, 1201.0], [36.3, 1202.0], [36.4, 1203.0], [36.5, 1203.0], [36.6, 1203.0], [36.7, 1206.0], [36.8, 1206.0], [36.9, 1206.0], [37.0, 1208.0], [37.1, 1208.0], [37.2, 1208.0], [37.3, 1210.0], [37.4, 1210.0], [37.5, 1210.0], [37.6, 1213.0], [37.7, 1215.0], [37.8, 1215.0], [37.9, 1215.0], [38.0, 1216.0], [38.1, 1216.0], [38.2, 1217.0], [38.3, 1217.0], [38.4, 1217.0], [38.5, 1220.0], [38.6, 1222.0], [38.7, 1222.0], [38.8, 1223.0], [38.9, 1223.0], [39.0, 1223.0], [39.1, 1225.0], [39.2, 1226.0], [39.3, 1226.0], [39.4, 1227.0], [39.5, 1228.0], [39.6, 1228.0], [39.7, 1229.0], [39.8, 1229.0], [39.9, 1229.0], [40.0, 1229.0], [40.1, 1230.0], [40.2, 1230.0], [40.3, 1232.0], [40.4, 1237.0], [40.5, 1237.0], [40.6, 1237.0], [40.7, 1237.0], [40.8, 1237.0], [40.9, 1239.0], [41.0, 1241.0], [41.1, 1245.0], [41.2, 1245.0], [41.3, 1251.0], [41.4, 1251.0], [41.5, 1251.0], [41.6, 1251.0], [41.7, 1255.0], [41.8, 1255.0], [41.9, 1257.0], [42.0, 1258.0], [42.1, 1258.0], [42.2, 1260.0], [42.3, 1262.0], [42.4, 1262.0], [42.5, 1264.0], [42.6, 1264.0], [42.7, 1264.0], [42.8, 1265.0], [42.9, 1267.0], [43.0, 1267.0], [43.1, 1267.0], [43.2, 1267.0], [43.3, 1267.0], [43.4, 1270.0], [43.5, 1270.0], [43.6, 1270.0], [43.7, 1270.0], [43.8, 1274.0], [43.9, 1274.0], [44.0, 1277.0], [44.1, 1278.0], [44.2, 1278.0], [44.3, 1281.0], [44.4, 1283.0], [44.5, 1283.0], [44.6, 1286.0], [44.7, 1286.0], [44.8, 1286.0], [44.9, 1287.0], [45.0, 1287.0], [45.1, 1287.0], [45.2, 1287.0], [45.3, 1289.0], [45.4, 1289.0], [45.5, 1289.0], [45.6, 1289.0], [45.7, 1290.0], [45.8, 1290.0], [45.9, 1290.0], [46.0, 1293.0], [46.1, 1293.0], [46.2, 1294.0], [46.3, 1295.0], [46.4, 1295.0], [46.5, 1295.0], [46.6, 1297.0], [46.7, 1297.0], [46.8, 1299.0], [46.9, 1300.0], [47.0, 1300.0], [47.1, 1301.0], [47.2, 1302.0], [47.3, 1302.0], [47.4, 1304.0], [47.5, 1306.0], [47.6, 1306.0], [47.7, 1306.0], [47.8, 1307.0], [47.9, 1307.0], [48.0, 1309.0], [48.1, 1310.0], [48.2, 1310.0], [48.3, 1310.0], [48.4, 1311.0], [48.5, 1311.0], [48.6, 1311.0], [48.7, 1313.0], [48.8, 1313.0], [48.9, 1317.0], [49.0, 1318.0], [49.1, 1318.0], [49.2, 1319.0], [49.3, 1319.0], [49.4, 1319.0], [49.5, 1319.0], [49.6, 1320.0], [49.7, 1320.0], [49.8, 1322.0], [49.9, 1323.0], [50.0, 1324.0], [50.1, 1324.0], [50.2, 1325.0], [50.3, 1326.0], [50.4, 1326.0], [50.5, 1329.0], [50.6, 1330.0], [50.7, 1330.0], [50.8, 1330.0], [50.9, 1333.0], [51.0, 1333.0], [51.1, 1335.0], [51.2, 1337.0], [51.3, 1337.0], [51.4, 1338.0], [51.5, 1338.0], [51.6, 1338.0], [51.7, 1338.0], [51.8, 1341.0], [51.9, 1341.0], [52.0, 1344.0], [52.1, 1345.0], [52.2, 1345.0], [52.3, 1345.0], [52.4, 1345.0], [52.5, 1345.0], [52.6, 1346.0], [52.7, 1347.0], [52.8, 1347.0], [52.9, 1347.0], [53.0, 1348.0], [53.1, 1348.0], [53.2, 1349.0], [53.3, 1349.0], [53.4, 1349.0], [53.5, 1350.0], [53.6, 1354.0], [53.7, 1354.0], [53.8, 1355.0], [53.9, 1356.0], [54.0, 1356.0], [54.1, 1358.0], [54.2, 1359.0], [54.3, 1359.0], [54.4, 1360.0], [54.5, 1360.0], [54.6, 1361.0], [54.7, 1361.0], [54.8, 1362.0], [54.9, 1364.0], [55.0, 1364.0], [55.1, 1365.0], [55.2, 1370.0], [55.3, 1370.0], [55.4, 1370.0], [55.5, 1372.0], [55.6, 1372.0], [55.7, 1373.0], [55.8, 1373.0], [55.9, 1373.0], [56.0, 1373.0], [56.1, 1373.0], [56.2, 1373.0], [56.3, 1376.0], [56.4, 1377.0], [56.5, 1377.0], [56.6, 1377.0], [56.7, 1377.0], [56.8, 1377.0], [56.9, 1377.0], [57.0, 1378.0], [57.1, 1378.0], [57.2, 1379.0], [57.3, 1380.0], [57.4, 1380.0], [57.5, 1381.0], [57.6, 1381.0], [57.7, 1381.0], [57.8, 1382.0], [57.9, 1384.0], [58.0, 1384.0], [58.1, 1385.0], [58.2, 1386.0], [58.3, 1386.0], [58.4, 1389.0], [58.5, 1389.0], [58.6, 1389.0], [58.7, 1391.0], [58.8, 1391.0], [58.9, 1391.0], [59.0, 1395.0], [59.1, 1395.0], [59.2, 1395.0], [59.3, 1395.0], [59.4, 1399.0], [59.5, 1399.0], [59.6, 1399.0], [59.7, 1405.0], [59.8, 1405.0], [59.9, 1405.0], [60.0, 1407.0], [60.1, 1407.0], [60.2, 1407.0], [60.3, 1407.0], [60.4, 1407.0], [60.5, 1407.0], [60.6, 1407.0], [60.7, 1408.0], [60.8, 1408.0], [60.9, 1408.0], [61.0, 1408.0], [61.1, 1408.0], [61.2, 1408.0], [61.3, 1410.0], [61.4, 1410.0], [61.5, 1410.0], [61.6, 1411.0], [61.7, 1411.0], [61.8, 1412.0], [61.9, 1413.0], [62.0, 1413.0], [62.1, 1414.0], [62.2, 1414.0], [62.3, 1414.0], [62.4, 1414.0], [62.5, 1415.0], [62.6, 1415.0], [62.7, 1415.0], [62.8, 1417.0], [62.9, 1417.0], [63.0, 1419.0], [63.1, 1419.0], [63.2, 1419.0], [63.3, 1421.0], [63.4, 1423.0], [63.5, 1423.0], [63.6, 1424.0], [63.7, 1426.0], [63.8, 1427.0], [63.9, 1427.0], [64.0, 1427.0], [64.1, 1429.0], [64.2, 1429.0], [64.3, 1429.0], [64.4, 1435.0], [64.5, 1435.0], [64.6, 1435.0], [64.7, 1435.0], [64.8, 1435.0], [64.9, 1436.0], [65.0, 1439.0], [65.1, 1439.0], [65.2, 1440.0], [65.3, 1441.0], [65.4, 1441.0], [65.5, 1441.0], [65.6, 1442.0], [65.7, 1442.0], [65.8, 1445.0], [65.9, 1446.0], [66.0, 1446.0], [66.1, 1446.0], [66.2, 1447.0], [66.3, 1447.0], [66.4, 1448.0], [66.5, 1450.0], [66.6, 1450.0], [66.7, 1452.0], [66.8, 1453.0], [66.9, 1453.0], [67.0, 1453.0], [67.1, 1454.0], [67.2, 1454.0], [67.3, 1454.0], [67.4, 1456.0], [67.5, 1456.0], [67.6, 1456.0], [67.7, 1457.0], [67.8, 1457.0], [67.9, 1459.0], [68.0, 1459.0], [68.1, 1459.0], [68.2, 1462.0], [68.3, 1465.0], [68.4, 1466.0], [68.5, 1466.0], [68.6, 1468.0], [68.7, 1474.0], [68.8, 1474.0], [68.9, 1476.0], [69.0, 1479.0], [69.1, 1479.0], [69.2, 1480.0], [69.3, 1481.0], [69.4, 1481.0], [69.5, 1482.0], [69.6, 1484.0], [69.7, 1484.0], [69.8, 1487.0], [69.9, 1488.0], [70.0, 1488.0], [70.1, 1491.0], [70.2, 1494.0], [70.3, 1494.0], [70.4, 1494.0], [70.5, 1495.0], [70.6, 1495.0], [70.7, 1495.0], [70.8, 1496.0], [70.9, 1496.0], [71.0, 1498.0], [71.1, 1500.0], [71.2, 1500.0], [71.3, 1500.0], [71.4, 1501.0], [71.5, 1501.0], [71.6, 1502.0], [71.7, 1502.0], [71.8, 1502.0], [71.9, 1505.0], [72.0, 1510.0], [72.1, 1510.0], [72.2, 1512.0], [72.3, 1515.0], [72.4, 1515.0], [72.5, 1516.0], [72.6, 1520.0], [72.7, 1520.0], [72.8, 1521.0], [72.9, 1526.0], [73.0, 1526.0], [73.1, 1526.0], [73.2, 1529.0], [73.3, 1535.0], [73.4, 1535.0], [73.5, 1536.0], [73.6, 1536.0], [73.7, 1536.0], [73.8, 1538.0], [73.9, 1541.0], [74.0, 1541.0], [74.1, 1544.0], [74.2, 1548.0], [74.3, 1548.0], [74.4, 1548.0], [74.5, 1554.0], [74.6, 1554.0], [74.7, 1558.0], [74.8, 1561.0], [74.9, 1561.0], [75.0, 1562.0], [75.1, 1566.0], [75.2, 1566.0], [75.3, 1567.0], [75.4, 1567.0], [75.5, 1567.0], [75.6, 1572.0], [75.7, 1574.0], [75.8, 1574.0], [75.9, 1575.0], [76.0, 1584.0], [76.1, 1584.0], [76.2, 1584.0], [76.3, 1584.0], [76.4, 1584.0], [76.5, 1587.0], [76.6, 1598.0], [76.7, 1598.0], [76.8, 1601.0], [76.9, 1602.0], [77.0, 1602.0], [77.1, 1602.0], [77.2, 1603.0], [77.3, 1605.0], [77.4, 1605.0], [77.5, 1606.0], [77.6, 1613.0], [77.7, 1613.0], [77.8, 1617.0], [77.9, 1619.0], [78.0, 1619.0], [78.1, 1624.0], [78.2, 1628.0], [78.3, 1628.0], [78.4, 1629.0], [78.5, 1629.0], [78.6, 1629.0], [78.7, 1631.0], [78.8, 1631.0], [78.9, 1631.0], [79.0, 1632.0], [79.1, 1634.0], [79.2, 1634.0], [79.3, 1635.0], [79.4, 1635.0], [79.5, 1635.0], [79.6, 1637.0], [79.7, 1639.0], [79.8, 1639.0], [79.9, 1647.0], [80.0, 1651.0], [80.1, 1651.0], [80.2, 1652.0], [80.3, 1654.0], [80.4, 1654.0], [80.5, 1656.0], [80.6, 1657.0], [80.7, 1657.0], [80.8, 1660.0], [80.9, 1663.0], [81.0, 1663.0], [81.1, 1664.0], [81.2, 1668.0], [81.3, 1668.0], [81.4, 1672.0], [81.5, 1675.0], [81.6, 1675.0], [81.7, 1680.0], [81.8, 1684.0], [81.9, 1685.0], [82.0, 1685.0], [82.1, 1688.0], [82.2, 1688.0], [82.3, 1688.0], [82.4, 1690.0], [82.5, 1692.0], [82.6, 1692.0], [82.7, 1698.0], [82.8, 1707.0], [82.9, 1707.0], [83.0, 1709.0], [83.1, 1712.0], [83.2, 1712.0], [83.3, 1712.0], [83.4, 1714.0], [83.5, 1714.0], [83.6, 1715.0], [83.7, 1720.0], [83.8, 1720.0], [83.9, 1726.0], [84.0, 1726.0], [84.1, 1726.0], [84.2, 1730.0], [84.3, 1730.0], [84.4, 1730.0], [84.5, 1736.0], [84.6, 1738.0], [84.7, 1738.0], [84.8, 1741.0], [84.9, 1741.0], [85.0, 1741.0], [85.1, 1742.0], [85.2, 1745.0], [85.3, 1745.0], [85.4, 1746.0], [85.5, 1754.0], [85.6, 1754.0], [85.7, 1760.0], [85.8, 1762.0], [85.9, 1762.0], [86.0, 1765.0], [86.1, 1765.0], [86.2, 1765.0], [86.3, 1767.0], [86.4, 1768.0], [86.5, 1770.0], [86.6, 1770.0], [86.7, 1776.0], [86.8, 1777.0], [86.9, 1777.0], [87.0, 1780.0], [87.1, 1783.0], [87.2, 1783.0], [87.3, 1787.0], [87.4, 1792.0], [87.5, 1792.0], [87.6, 1794.0], [87.7, 1806.0], [87.8, 1806.0], [87.9, 1807.0], [88.0, 1811.0], [88.1, 1811.0], [88.2, 1812.0], [88.3, 1813.0], [88.4, 1813.0], [88.5, 1815.0], [88.6, 1822.0], [88.7, 1822.0], [88.8, 1828.0], [88.9, 1828.0], [89.0, 1828.0], [89.1, 1838.0], [89.2, 1842.0], [89.3, 1842.0], [89.4, 1845.0], [89.5, 1845.0], [89.6, 1845.0], [89.7, 1856.0], [89.8, 1860.0], [89.9, 1860.0], [90.0, 1866.0], [90.1, 1876.0], [90.2, 1876.0], [90.3, 1878.0], [90.4, 1887.0], [90.5, 1887.0], [90.6, 1888.0], [90.7, 1890.0], [90.8, 1890.0], [90.9, 1893.0], [91.0, 1896.0], [91.1, 1900.0], [91.2, 1900.0], [91.3, 1904.0], [91.4, 1904.0], [91.5, 1904.0], [91.6, 1910.0], [91.7, 1910.0], [91.8, 1910.0], [91.9, 1910.0], [92.0, 1914.0], [92.1, 1914.0], [92.2, 1917.0], [92.3, 1935.0], [92.4, 1935.0], [92.5, 1938.0], [92.6, 1939.0], [92.7, 1939.0], [92.8, 1954.0], [92.9, 1959.0], [93.0, 1959.0], [93.1, 1962.0], [93.2, 1972.0], [93.3, 1972.0], [93.4, 1977.0], [93.5, 1983.0], [93.6, 1983.0], [93.7, 1986.0], [93.8, 1991.0], [93.9, 1991.0], [94.0, 1999.0], [94.1, 2014.0], [94.2, 2014.0], [94.3, 2016.0], [94.4, 2024.0], [94.5, 2024.0], [94.6, 2035.0], [94.7, 2056.0], [94.8, 2056.0], [94.9, 2057.0], [95.0, 2064.0], [95.1, 2064.0], [95.2, 2078.0], [95.3, 2108.0], [95.4, 2108.0], [95.5, 2125.0], [95.6, 2136.0], [95.7, 2143.0], [95.8, 2143.0], [95.9, 2176.0], [96.0, 2209.0], [96.1, 2209.0], [96.2, 2209.0], [96.3, 2219.0], [96.4, 2219.0], [96.5, 2256.0], [96.6, 2282.0], [96.7, 2282.0], [96.8, 2292.0], [96.9, 2301.0], [97.0, 2301.0], [97.1, 2302.0], [97.2, 2316.0], [97.3, 2316.0], [97.4, 2327.0], [97.5, 2359.0], [97.6, 2359.0], [97.7, 2379.0], [97.8, 2395.0], [97.9, 2395.0], [98.0, 2411.0], [98.1, 2427.0], [98.2, 2427.0], [98.3, 2447.0], [98.4, 2485.0], [98.5, 2485.0], [98.6, 2518.0], [98.7, 2529.0], [98.8, 2529.0], [98.9, 2602.0], [99.0, 2606.0], [99.1, 2606.0], [99.2, 2643.0], [99.3, 2658.0], [99.4, 2658.0], [99.5, 2721.0], [99.6, 2726.0], [99.7, 2726.0], [99.8, 2914.0], [99.9, 2922.0]], "isOverall": false, "label": "Delete PROB", "isController": false}, {"data": [[0.0, 8.0], [0.1, 8.0], [0.2, 9.0], [0.3, 11.0], [0.4, 11.0], [0.5, 35.0], [0.6, 37.0], [0.7, 37.0], [0.8, 50.0], [0.9, 55.0], [1.0, 55.0], [1.1, 115.0], [1.2, 127.0], [1.3, 127.0], [1.4, 152.0], [1.5, 182.0], [1.6, 182.0], [1.7, 215.0], [1.8, 240.0], [1.9, 240.0], [2.0, 257.0], [2.1, 269.0], [2.2, 269.0], [2.3, 297.0], [2.4, 316.0], [2.5, 316.0], [2.6, 342.0], [2.7, 349.0], [2.8, 349.0], [2.9, 359.0], [3.0, 377.0], [3.1, 386.0], [3.2, 386.0], [3.3, 389.0], [3.4, 400.0], [3.5, 400.0], [3.6, 402.0], [3.7, 408.0], [3.8, 408.0], [3.9, 420.0], [4.0, 440.0], [4.1, 440.0], [4.2, 449.0], [4.3, 461.0], [4.4, 461.0], [4.5, 471.0], [4.6, 482.0], [4.7, 482.0], [4.8, 497.0], [4.9, 511.0], [5.0, 511.0], [5.1, 513.0], [5.2, 516.0], [5.3, 516.0], [5.4, 518.0], [5.5, 520.0], [5.6, 520.0], [5.7, 529.0], [5.8, 531.0], [5.9, 544.0], [6.0, 544.0], [6.1, 545.0], [6.2, 552.0], [6.3, 552.0], [6.4, 560.0], [6.5, 565.0], [6.6, 565.0], [6.7, 565.0], [6.8, 567.0], [6.9, 567.0], [7.0, 572.0], [7.1, 621.0], [7.2, 621.0], [7.3, 623.0], [7.4, 624.0], [7.5, 624.0], [7.6, 626.0], [7.7, 635.0], [7.8, 635.0], [7.9, 645.0], [8.0, 657.0], [8.1, 657.0], [8.2, 663.0], [8.3, 670.0], [8.4, 670.0], [8.5, 681.0], [8.6, 688.0], [8.7, 688.0], [8.8, 695.0], [8.9, 703.0], [9.0, 704.0], [9.1, 704.0], [9.2, 709.0], [9.3, 710.0], [9.4, 710.0], [9.5, 710.0], [9.6, 715.0], [9.7, 715.0], [9.8, 716.0], [9.9, 718.0], [10.0, 718.0], [10.1, 720.0], [10.2, 721.0], [10.3, 721.0], [10.4, 723.0], [10.5, 724.0], [10.6, 724.0], [10.7, 728.0], [10.8, 730.0], [10.9, 730.0], [11.0, 731.0], [11.1, 734.0], [11.2, 734.0], [11.3, 735.0], [11.4, 741.0], [11.5, 741.0], [11.6, 742.0], [11.7, 748.0], [11.8, 749.0], [11.9, 749.0], [12.0, 750.0], [12.1, 756.0], [12.2, 756.0], [12.3, 758.0], [12.4, 762.0], [12.5, 762.0], [12.6, 762.0], [12.7, 766.0], [12.8, 766.0], [12.9, 769.0], [13.0, 774.0], [13.1, 774.0], [13.2, 775.0], [13.3, 778.0], [13.4, 778.0], [13.5, 786.0], [13.6, 789.0], [13.7, 789.0], [13.8, 789.0], [13.9, 794.0], [14.0, 794.0], [14.1, 795.0], [14.2, 796.0], [14.3, 796.0], [14.4, 798.0], [14.5, 802.0], [14.6, 802.0], [14.7, 805.0], [14.8, 806.0], [14.9, 807.0], [15.0, 807.0], [15.1, 819.0], [15.2, 819.0], [15.3, 819.0], [15.4, 823.0], [15.5, 825.0], [15.6, 825.0], [15.7, 826.0], [15.8, 831.0], [15.9, 831.0], [16.0, 831.0], [16.1, 831.0], [16.2, 831.0], [16.3, 832.0], [16.4, 834.0], [16.5, 834.0], [16.6, 837.0], [16.7, 840.0], [16.8, 840.0], [16.9, 842.0], [17.0, 847.0], [17.1, 847.0], [17.2, 850.0], [17.3, 858.0], [17.4, 858.0], [17.5, 859.0], [17.6, 859.0], [17.7, 861.0], [17.8, 861.0], [17.9, 862.0], [18.0, 863.0], [18.1, 863.0], [18.2, 864.0], [18.3, 864.0], [18.4, 864.0], [18.5, 865.0], [18.6, 867.0], [18.7, 867.0], [18.8, 870.0], [18.9, 871.0], [19.0, 871.0], [19.1, 876.0], [19.2, 877.0], [19.3, 877.0], [19.4, 877.0], [19.5, 879.0], [19.6, 879.0], [19.7, 880.0], [19.8, 881.0], [19.9, 881.0], [20.0, 881.0], [20.1, 883.0], [20.2, 883.0], [20.3, 885.0], [20.4, 886.0], [20.5, 886.0], [20.6, 887.0], [20.7, 892.0], [20.8, 896.0], [20.9, 896.0], [21.0, 897.0], [21.1, 899.0], [21.2, 899.0], [21.3, 900.0], [21.4, 900.0], [21.5, 900.0], [21.6, 901.0], [21.7, 901.0], [21.8, 901.0], [21.9, 903.0], [22.0, 905.0], [22.1, 905.0], [22.2, 905.0], [22.3, 908.0], [22.4, 908.0], [22.5, 909.0], [22.6, 914.0], [22.7, 914.0], [22.8, 914.0], [22.9, 916.0], [23.0, 916.0], [23.1, 917.0], [23.2, 919.0], [23.3, 919.0], [23.4, 919.0], [23.5, 920.0], [23.6, 921.0], [23.7, 921.0], [23.8, 924.0], [23.9, 925.0], [24.0, 925.0], [24.1, 925.0], [24.2, 926.0], [24.3, 926.0], [24.4, 927.0], [24.5, 927.0], [24.6, 927.0], [24.7, 931.0], [24.8, 933.0], [24.9, 933.0], [25.0, 934.0], [25.1, 934.0], [25.2, 934.0], [25.3, 935.0], [25.4, 936.0], [25.5, 936.0], [25.6, 937.0], [25.7, 938.0], [25.8, 938.0], [25.9, 939.0], [26.0, 940.0], [26.1, 940.0], [26.2, 941.0], [26.3, 942.0], [26.4, 942.0], [26.5, 942.0], [26.6, 943.0], [26.7, 943.0], [26.8, 943.0], [26.9, 946.0], [27.0, 947.0], [27.1, 947.0], [27.2, 947.0], [27.3, 948.0], [27.4, 948.0], [27.5, 949.0], [27.6, 950.0], [27.7, 950.0], [27.8, 951.0], [27.9, 953.0], [28.0, 953.0], [28.1, 954.0], [28.2, 956.0], [28.3, 956.0], [28.4, 956.0], [28.5, 958.0], [28.6, 958.0], [28.7, 959.0], [28.8, 960.0], [28.9, 960.0], [29.0, 962.0], [29.1, 962.0], [29.2, 962.0], [29.3, 962.0], [29.4, 964.0], [29.5, 964.0], [29.6, 964.0], [29.7, 967.0], [29.8, 968.0], [29.9, 968.0], [30.0, 969.0], [30.1, 969.0], [30.2, 969.0], [30.3, 971.0], [30.4, 973.0], [30.5, 973.0], [30.6, 974.0], [30.7, 975.0], [30.8, 975.0], [30.9, 980.0], [31.0, 983.0], [31.1, 983.0], [31.2, 984.0], [31.3, 985.0], [31.4, 985.0], [31.5, 985.0], [31.6, 987.0], [31.7, 987.0], [31.8, 988.0], [31.9, 989.0], [32.0, 989.0], [32.1, 990.0], [32.2, 990.0], [32.3, 990.0], [32.4, 990.0], [32.5, 991.0], [32.6, 992.0], [32.7, 992.0], [32.8, 992.0], [32.9, 993.0], [33.0, 993.0], [33.1, 996.0], [33.2, 997.0], [33.3, 997.0], [33.4, 998.0], [33.5, 998.0], [33.6, 998.0], [33.7, 999.0], [33.8, 1001.0], [33.9, 1001.0], [34.0, 1002.0], [34.1, 1005.0], [34.2, 1005.0], [34.3, 1005.0], [34.4, 1006.0], [34.5, 1006.0], [34.6, 1006.0], [34.7, 1007.0], [34.8, 1007.0], [34.9, 1008.0], [35.0, 1009.0], [35.1, 1009.0], [35.2, 1010.0], [35.3, 1011.0], [35.4, 1013.0], [35.5, 1013.0], [35.6, 1013.0], [35.7, 1014.0], [35.8, 1014.0], [35.9, 1017.0], [36.0, 1018.0], [36.1, 1018.0], [36.2, 1019.0], [36.3, 1022.0], [36.4, 1022.0], [36.5, 1025.0], [36.6, 1026.0], [36.7, 1026.0], [36.8, 1027.0], [36.9, 1029.0], [37.0, 1029.0], [37.1, 1030.0], [37.2, 1030.0], [37.3, 1030.0], [37.4, 1032.0], [37.5, 1032.0], [37.6, 1032.0], [37.7, 1033.0], [37.8, 1034.0], [37.9, 1034.0], [38.0, 1034.0], [38.1, 1034.0], [38.2, 1034.0], [38.3, 1035.0], [38.4, 1037.0], [38.5, 1037.0], [38.6, 1037.0], [38.7, 1039.0], [38.8, 1040.0], [38.9, 1040.0], [39.0, 1040.0], [39.1, 1042.0], [39.2, 1042.0], [39.3, 1046.0], [39.4, 1046.0], [39.5, 1046.0], [39.6, 1049.0], [39.7, 1050.0], [39.8, 1050.0], [39.9, 1051.0], [40.0, 1051.0], [40.1, 1051.0], [40.2, 1052.0], [40.3, 1052.0], [40.4, 1052.0], [40.5, 1054.0], [40.6, 1056.0], [40.7, 1056.0], [40.8, 1056.0], [40.9, 1057.0], [41.0, 1057.0], [41.1, 1059.0], [41.2, 1064.0], [41.3, 1066.0], [41.4, 1066.0], [41.5, 1067.0], [41.6, 1067.0], [41.7, 1067.0], [41.8, 1068.0], [41.9, 1070.0], [42.0, 1070.0], [42.1, 1070.0], [42.2, 1070.0], [42.3, 1070.0], [42.4, 1072.0], [42.5, 1072.0], [42.6, 1072.0], [42.7, 1074.0], [42.8, 1075.0], [42.9, 1075.0], [43.0, 1075.0], [43.1, 1079.0], [43.2, 1079.0], [43.3, 1082.0], [43.4, 1082.0], [43.5, 1082.0], [43.6, 1083.0], [43.7, 1085.0], [43.8, 1085.0], [43.9, 1087.0], [44.0, 1090.0], [44.1, 1090.0], [44.2, 1090.0], [44.3, 1095.0], [44.4, 1095.0], [44.5, 1095.0], [44.6, 1098.0], [44.7, 1105.0], [44.8, 1105.0], [44.9, 1108.0], [45.0, 1109.0], [45.1, 1109.0], [45.2, 1109.0], [45.3, 1109.0], [45.4, 1109.0], [45.5, 1111.0], [45.6, 1111.0], [45.7, 1111.0], [45.8, 1111.0], [45.9, 1111.0], [46.0, 1111.0], [46.1, 1112.0], [46.2, 1113.0], [46.3, 1113.0], [46.4, 1113.0], [46.5, 1113.0], [46.6, 1113.0], [46.7, 1114.0], [46.8, 1117.0], [46.9, 1117.0], [47.0, 1117.0], [47.1, 1119.0], [47.2, 1122.0], [47.3, 1122.0], [47.4, 1123.0], [47.5, 1124.0], [47.6, 1124.0], [47.7, 1126.0], [47.8, 1127.0], [47.9, 1127.0], [48.0, 1128.0], [48.1, 1129.0], [48.2, 1129.0], [48.3, 1129.0], [48.4, 1131.0], [48.5, 1131.0], [48.6, 1132.0], [48.7, 1132.0], [48.8, 1132.0], [48.9, 1133.0], [49.0, 1134.0], [49.1, 1134.0], [49.2, 1134.0], [49.3, 1137.0], [49.4, 1137.0], [49.5, 1138.0], [49.6, 1139.0], [49.7, 1139.0], [49.8, 1139.0], [49.9, 1140.0], [50.0, 1141.0], [50.1, 1141.0], [50.2, 1144.0], [50.3, 1146.0], [50.4, 1146.0], [50.5, 1147.0], [50.6, 1149.0], [50.7, 1149.0], [50.8, 1149.0], [50.9, 1150.0], [51.0, 1150.0], [51.1, 1151.0], [51.2, 1151.0], [51.3, 1151.0], [51.4, 1157.0], [51.5, 1157.0], [51.6, 1157.0], [51.7, 1158.0], [51.8, 1160.0], [51.9, 1160.0], [52.0, 1160.0], [52.1, 1161.0], [52.2, 1161.0], [52.3, 1161.0], [52.4, 1163.0], [52.5, 1163.0], [52.6, 1165.0], [52.7, 1167.0], [52.8, 1167.0], [52.9, 1167.0], [53.0, 1169.0], [53.1, 1173.0], [53.2, 1173.0], [53.3, 1173.0], [53.4, 1173.0], [53.5, 1173.0], [53.6, 1174.0], [53.7, 1174.0], [53.8, 1174.0], [53.9, 1174.0], [54.0, 1178.0], [54.1, 1178.0], [54.2, 1180.0], [54.3, 1181.0], [54.4, 1181.0], [54.5, 1181.0], [54.6, 1183.0], [54.7, 1183.0], [54.8, 1184.0], [54.9, 1185.0], [55.0, 1185.0], [55.1, 1185.0], [55.2, 1192.0], [55.3, 1192.0], [55.4, 1195.0], [55.5, 1196.0], [55.6, 1196.0], [55.7, 1196.0], [55.8, 1196.0], [55.9, 1197.0], [56.0, 1197.0], [56.1, 1197.0], [56.2, 1198.0], [56.3, 1198.0], [56.4, 1199.0], [56.5, 1199.0], [56.6, 1199.0], [56.7, 1201.0], [56.8, 1204.0], [56.9, 1204.0], [57.0, 1204.0], [57.1, 1206.0], [57.2, 1206.0], [57.3, 1206.0], [57.4, 1207.0], [57.5, 1207.0], [57.6, 1207.0], [57.7, 1208.0], [57.8, 1208.0], [57.9, 1209.0], [58.0, 1211.0], [58.1, 1211.0], [58.2, 1213.0], [58.3, 1214.0], [58.4, 1214.0], [58.5, 1217.0], [58.6, 1218.0], [58.7, 1218.0], [58.8, 1221.0], [58.9, 1223.0], [59.0, 1226.0], [59.1, 1226.0], [59.2, 1227.0], [59.3, 1228.0], [59.4, 1228.0], [59.5, 1228.0], [59.6, 1229.0], [59.7, 1229.0], [59.8, 1229.0], [59.9, 1235.0], [60.0, 1235.0], [60.1, 1237.0], [60.2, 1237.0], [60.3, 1237.0], [60.4, 1239.0], [60.5, 1239.0], [60.6, 1239.0], [60.7, 1242.0], [60.8, 1242.0], [60.9, 1242.0], [61.0, 1245.0], [61.1, 1246.0], [61.2, 1246.0], [61.3, 1247.0], [61.4, 1247.0], [61.5, 1247.0], [61.6, 1249.0], [61.7, 1249.0], [61.8, 1250.0], [61.9, 1250.0], [62.0, 1252.0], [62.1, 1252.0], [62.2, 1252.0], [62.3, 1254.0], [62.4, 1254.0], [62.5, 1254.0], [62.6, 1254.0], [62.7, 1255.0], [62.8, 1255.0], [62.9, 1256.0], [63.0, 1256.0], [63.1, 1256.0], [63.2, 1257.0], [63.3, 1258.0], [63.4, 1258.0], [63.5, 1259.0], [63.6, 1263.0], [63.7, 1263.0], [63.8, 1264.0], [63.9, 1268.0], [64.0, 1268.0], [64.1, 1270.0], [64.2, 1271.0], [64.3, 1271.0], [64.4, 1272.0], [64.5, 1273.0], [64.6, 1273.0], [64.7, 1274.0], [64.8, 1276.0], [64.9, 1276.0], [65.0, 1276.0], [65.1, 1277.0], [65.2, 1277.0], [65.3, 1277.0], [65.4, 1278.0], [65.5, 1279.0], [65.6, 1279.0], [65.7, 1280.0], [65.8, 1282.0], [65.9, 1282.0], [66.0, 1282.0], [66.1, 1283.0], [66.2, 1283.0], [66.3, 1283.0], [66.4, 1284.0], [66.5, 1284.0], [66.6, 1286.0], [66.7, 1286.0], [66.8, 1286.0], [66.9, 1286.0], [67.0, 1287.0], [67.1, 1287.0], [67.2, 1288.0], [67.3, 1289.0], [67.4, 1289.0], [67.5, 1290.0], [67.6, 1291.0], [67.7, 1294.0], [67.8, 1294.0], [67.9, 1294.0], [68.0, 1295.0], [68.1, 1295.0], [68.2, 1295.0], [68.3, 1295.0], [68.4, 1295.0], [68.5, 1296.0], [68.6, 1296.0], [68.7, 1296.0], [68.8, 1300.0], [68.9, 1301.0], [69.0, 1301.0], [69.1, 1302.0], [69.2, 1303.0], [69.3, 1303.0], [69.4, 1305.0], [69.5, 1307.0], [69.6, 1307.0], [69.7, 1307.0], [69.8, 1308.0], [69.9, 1308.0], [70.0, 1310.0], [70.1, 1312.0], [70.2, 1312.0], [70.3, 1312.0], [70.4, 1314.0], [70.5, 1314.0], [70.6, 1316.0], [70.7, 1318.0], [70.8, 1320.0], [70.9, 1320.0], [71.0, 1321.0], [71.1, 1324.0], [71.2, 1324.0], [71.3, 1325.0], [71.4, 1325.0], [71.5, 1325.0], [71.6, 1325.0], [71.7, 1325.0], [71.8, 1325.0], [71.9, 1332.0], [72.0, 1332.0], [72.1, 1332.0], [72.2, 1335.0], [72.3, 1339.0], [72.4, 1339.0], [72.5, 1339.0], [72.6, 1339.0], [72.7, 1339.0], [72.8, 1341.0], [72.9, 1341.0], [73.0, 1341.0], [73.1, 1342.0], [73.2, 1344.0], [73.3, 1344.0], [73.4, 1352.0], [73.5, 1352.0], [73.6, 1354.0], [73.7, 1354.0], [73.8, 1355.0], [73.9, 1356.0], [74.0, 1356.0], [74.1, 1357.0], [74.2, 1359.0], [74.3, 1359.0], [74.4, 1361.0], [74.5, 1364.0], [74.6, 1364.0], [74.7, 1368.0], [74.8, 1369.0], [74.9, 1369.0], [75.0, 1369.0], [75.1, 1369.0], [75.2, 1369.0], [75.3, 1370.0], [75.4, 1370.0], [75.5, 1370.0], [75.6, 1371.0], [75.7, 1374.0], [75.8, 1374.0], [75.9, 1375.0], [76.0, 1376.0], [76.1, 1376.0], [76.2, 1383.0], [76.3, 1383.0], [76.4, 1383.0], [76.5, 1384.0], [76.6, 1386.0], [76.7, 1386.0], [76.8, 1386.0], [76.9, 1387.0], [77.0, 1391.0], [77.1, 1391.0], [77.2, 1398.0], [77.3, 1403.0], [77.4, 1403.0], [77.5, 1403.0], [77.6, 1406.0], [77.7, 1406.0], [77.8, 1407.0], [77.9, 1408.0], [78.0, 1408.0], [78.1, 1408.0], [78.2, 1410.0], [78.3, 1410.0], [78.4, 1411.0], [78.5, 1412.0], [78.6, 1412.0], [78.7, 1420.0], [78.8, 1427.0], [78.9, 1427.0], [79.0, 1431.0], [79.1, 1438.0], [79.2, 1438.0], [79.3, 1441.0], [79.4, 1442.0], [79.5, 1443.0], [79.6, 1443.0], [79.7, 1443.0], [79.8, 1444.0], [79.9, 1444.0], [80.0, 1446.0], [80.1, 1446.0], [80.2, 1446.0], [80.3, 1450.0], [80.4, 1452.0], [80.5, 1452.0], [80.6, 1455.0], [80.7, 1455.0], [80.8, 1455.0], [80.9, 1460.0], [81.0, 1460.0], [81.1, 1460.0], [81.2, 1460.0], [81.3, 1460.0], [81.4, 1460.0], [81.5, 1460.0], [81.6, 1465.0], [81.7, 1465.0], [81.8, 1468.0], [81.9, 1469.0], [82.0, 1469.0], [82.1, 1470.0], [82.2, 1473.0], [82.3, 1473.0], [82.4, 1474.0], [82.5, 1478.0], [82.6, 1480.0], [82.7, 1480.0], [82.8, 1482.0], [82.9, 1485.0], [83.0, 1485.0], [83.1, 1488.0], [83.2, 1488.0], [83.3, 1488.0], [83.4, 1491.0], [83.5, 1494.0], [83.6, 1494.0], [83.7, 1496.0], [83.8, 1498.0], [83.9, 1498.0], [84.0, 1501.0], [84.1, 1510.0], [84.2, 1510.0], [84.3, 1511.0], [84.4, 1514.0], [84.5, 1514.0], [84.6, 1519.0], [84.7, 1520.0], [84.8, 1520.0], [84.9, 1522.0], [85.0, 1527.0], [85.1, 1527.0], [85.2, 1528.0], [85.3, 1529.0], [85.4, 1530.0], [85.5, 1530.0], [85.6, 1532.0], [85.7, 1532.0], [85.8, 1532.0], [85.9, 1542.0], [86.0, 1542.0], [86.1, 1542.0], [86.2, 1542.0], [86.3, 1543.0], [86.4, 1543.0], [86.5, 1549.0], [86.6, 1554.0], [86.7, 1554.0], [86.8, 1554.0], [86.9, 1558.0], [87.0, 1558.0], [87.1, 1561.0], [87.2, 1565.0], [87.3, 1565.0], [87.4, 1569.0], [87.5, 1573.0], [87.6, 1573.0], [87.7, 1576.0], [87.8, 1579.0], [87.9, 1579.0], [88.0, 1580.0], [88.1, 1582.0], [88.2, 1582.0], [88.3, 1583.0], [88.4, 1584.0], [88.5, 1593.0], [88.6, 1593.0], [88.7, 1594.0], [88.8, 1595.0], [88.9, 1595.0], [89.0, 1597.0], [89.1, 1598.0], [89.2, 1598.0], [89.3, 1600.0], [89.4, 1602.0], [89.5, 1602.0], [89.6, 1612.0], [89.7, 1613.0], [89.8, 1613.0], [89.9, 1621.0], [90.0, 1622.0], [90.1, 1622.0], [90.2, 1631.0], [90.3, 1646.0], [90.4, 1646.0], [90.5, 1655.0], [90.6, 1655.0], [90.7, 1655.0], [90.8, 1656.0], [90.9, 1661.0], [91.0, 1661.0], [91.1, 1667.0], [91.2, 1684.0], [91.3, 1702.0], [91.4, 1702.0], [91.5, 1705.0], [91.6, 1708.0], [91.7, 1708.0], [91.8, 1709.0], [91.9, 1720.0], [92.0, 1720.0], [92.1, 1724.0], [92.2, 1726.0], [92.3, 1726.0], [92.4, 1732.0], [92.5, 1736.0], [92.6, 1736.0], [92.7, 1738.0], [92.8, 1745.0], [92.9, 1745.0], [93.0, 1748.0], [93.1, 1754.0], [93.2, 1754.0], [93.3, 1757.0], [93.4, 1760.0], [93.5, 1760.0], [93.6, 1771.0], [93.7, 1778.0], [93.8, 1778.0], [93.9, 1779.0], [94.0, 1787.0], [94.1, 1787.0], [94.2, 1793.0], [94.3, 1793.0], [94.4, 1797.0], [94.5, 1797.0], [94.6, 1812.0], [94.7, 1813.0], [94.8, 1813.0], [94.9, 1839.0], [95.0, 1846.0], [95.1, 1846.0], [95.2, 1849.0], [95.3, 1858.0], [95.4, 1858.0], [95.5, 1872.0], [95.6, 1876.0], [95.7, 1876.0], [95.8, 1877.0], [95.9, 1879.0], [96.0, 1879.0], [96.1, 1906.0], [96.2, 1924.0], [96.3, 1924.0], [96.4, 1928.0], [96.5, 1955.0], [96.6, 1955.0], [96.7, 1963.0], [96.8, 1976.0], [96.9, 1976.0], [97.0, 2013.0], [97.1, 2024.0], [97.2, 2037.0], [97.3, 2037.0], [97.4, 2046.0], [97.5, 2052.0], [97.6, 2052.0], [97.7, 2053.0], [97.8, 2073.0], [97.9, 2073.0], [98.0, 2087.0], [98.1, 2088.0], [98.2, 2088.0], [98.3, 2117.0], [98.4, 2127.0], [98.5, 2127.0], [98.6, 2164.0], [98.7, 2212.0], [98.8, 2212.0], [98.9, 2239.0], [99.0, 2240.0], [99.1, 2240.0], [99.2, 2381.0], [99.3, 2450.0], [99.4, 2450.0], [99.5, 2491.0], [99.6, 2625.0], [99.7, 2625.0], [99.8, 2651.0], [99.9, 2749.0]], "isOverall": false, "label": "Get PROB ID", "isController": false}, {"data": [[0.0, 177.0], [0.1, 179.0], [0.2, 184.0], [0.3, 187.0], [0.4, 208.0], [0.5, 214.0], [0.6, 219.0], [0.7, 266.0], [0.8, 296.0], [0.9, 375.0], [1.0, 400.0], [1.1, 401.0], [1.2, 449.0], [1.3, 456.0], [1.4, 523.0], [1.5, 527.0], [1.6, 541.0], [1.7, 543.0], [1.8, 568.0], [1.9, 576.0], [2.0, 607.0], [2.1, 610.0], [2.2, 618.0], [2.3, 649.0], [2.4, 669.0], [2.5, 673.0], [2.6, 678.0], [2.7, 684.0], [2.8, 712.0], [2.9, 729.0], [3.0, 729.0], [3.1, 743.0], [3.2, 744.0], [3.3, 754.0], [3.4, 764.0], [3.5, 765.0], [3.6, 772.0], [3.7, 783.0], [3.8, 803.0], [3.9, 804.0], [4.0, 806.0], [4.1, 819.0], [4.2, 825.0], [4.3, 861.0], [4.4, 864.0], [4.5, 890.0], [4.6, 892.0], [4.7, 917.0], [4.8, 927.0], [4.9, 955.0], [5.0, 959.0], [5.1, 1028.0], [5.2, 1035.0], [5.3, 1060.0], [5.4, 1085.0], [5.5, 1086.0], [5.6, 1100.0], [5.7, 1104.0], [5.8, 1118.0], [5.9, 1134.0], [6.0, 1150.0], [6.1, 1167.0], [6.2, 1178.0], [6.3, 1185.0], [6.4, 1189.0], [6.5, 1203.0], [6.6, 1207.0], [6.7, 1215.0], [6.8, 1225.0], [6.9, 1226.0], [7.0, 1228.0], [7.1, 1235.0], [7.2, 1238.0], [7.3, 1259.0], [7.4, 1261.0], [7.5, 1283.0], [7.6, 1284.0], [7.7, 1285.0], [7.8, 1290.0], [7.9, 1292.0], [8.0, 1302.0], [8.1, 1305.0], [8.2, 1308.0], [8.3, 1319.0], [8.4, 1337.0], [8.5, 1337.0], [8.6, 1350.0], [8.7, 1354.0], [8.8, 1359.0], [8.9, 1365.0], [9.0, 1365.0], [9.1, 1373.0], [9.2, 1373.0], [9.3, 1377.0], [9.4, 1380.0], [9.5, 1384.0], [9.6, 1385.0], [9.7, 1388.0], [9.8, 1390.0], [9.9, 1394.0], [10.0, 1398.0], [10.1, 1399.0], [10.2, 1420.0], [10.3, 1423.0], [10.4, 1424.0], [10.5, 1427.0], [10.6, 1429.0], [10.7, 1430.0], [10.8, 1431.0], [10.9, 1435.0], [11.0, 1446.0], [11.1, 1450.0], [11.2, 1454.0], [11.3, 1460.0], [11.4, 1461.0], [11.5, 1466.0], [11.6, 1466.0], [11.7, 1470.0], [11.8, 1473.0], [11.9, 1480.0], [12.0, 1481.0], [12.1, 1482.0], [12.2, 1482.0], [12.3, 1489.0], [12.4, 1496.0], [12.5, 1496.0], [12.6, 1500.0], [12.7, 1501.0], [12.8, 1503.0], [12.9, 1507.0], [13.0, 1509.0], [13.1, 1510.0], [13.2, 1510.0], [13.3, 1512.0], [13.4, 1515.0], [13.5, 1516.0], [13.6, 1517.0], [13.7, 1524.0], [13.8, 1524.0], [13.9, 1527.0], [14.0, 1528.0], [14.1, 1530.0], [14.2, 1531.0], [14.3, 1533.0], [14.4, 1537.0], [14.5, 1538.0], [14.6, 1541.0], [14.7, 1545.0], [14.8, 1546.0], [14.9, 1547.0], [15.0, 1550.0], [15.1, 1550.0], [15.2, 1552.0], [15.3, 1554.0], [15.4, 1554.0], [15.5, 1555.0], [15.6, 1558.0], [15.7, 1560.0], [15.8, 1563.0], [15.9, 1572.0], [16.0, 1573.0], [16.1, 1575.0], [16.2, 1576.0], [16.3, 1579.0], [16.4, 1579.0], [16.5, 1579.0], [16.6, 1580.0], [16.7, 1580.0], [16.8, 1584.0], [16.9, 1586.0], [17.0, 1587.0], [17.1, 1588.0], [17.2, 1588.0], [17.3, 1592.0], [17.4, 1594.0], [17.5, 1598.0], [17.6, 1599.0], [17.7, 1600.0], [17.8, 1602.0], [17.9, 1605.0], [18.0, 1606.0], [18.1, 1607.0], [18.2, 1607.0], [18.3, 1608.0], [18.4, 1608.0], [18.5, 1609.0], [18.6, 1610.0], [18.7, 1610.0], [18.8, 1612.0], [18.9, 1615.0], [19.0, 1615.0], [19.1, 1617.0], [19.2, 1620.0], [19.3, 1621.0], [19.4, 1621.0], [19.5, 1622.0], [19.6, 1624.0], [19.7, 1626.0], [19.8, 1627.0], [19.9, 1628.0], [20.0, 1628.0], [20.1, 1630.0], [20.2, 1630.0], [20.3, 1632.0], [20.4, 1635.0], [20.5, 1637.0], [20.6, 1637.0], [20.7, 1638.0], [20.8, 1639.0], [20.9, 1641.0], [21.0, 1643.0], [21.1, 1645.0], [21.2, 1646.0], [21.3, 1648.0], [21.4, 1651.0], [21.5, 1652.0], [21.6, 1654.0], [21.7, 1654.0], [21.8, 1655.0], [21.9, 1656.0], [22.0, 1659.0], [22.1, 1659.0], [22.2, 1661.0], [22.3, 1662.0], [22.4, 1662.0], [22.5, 1663.0], [22.6, 1665.0], [22.7, 1667.0], [22.8, 1667.0], [22.9, 1669.0], [23.0, 1671.0], [23.1, 1671.0], [23.2, 1675.0], [23.3, 1675.0], [23.4, 1677.0], [23.5, 1677.0], [23.6, 1678.0], [23.7, 1683.0], [23.8, 1685.0], [23.9, 1686.0], [24.0, 1687.0], [24.1, 1688.0], [24.2, 1688.0], [24.3, 1689.0], [24.4, 1690.0], [24.5, 1692.0], [24.6, 1697.0], [24.7, 1700.0], [24.8, 1700.0], [24.9, 1701.0], [25.0, 1701.0], [25.1, 1701.0], [25.2, 1702.0], [25.3, 1703.0], [25.4, 1705.0], [25.5, 1707.0], [25.6, 1709.0], [25.7, 1710.0], [25.8, 1712.0], [25.9, 1713.0], [26.0, 1716.0], [26.1, 1716.0], [26.2, 1717.0], [26.3, 1718.0], [26.4, 1719.0], [26.5, 1720.0], [26.6, 1722.0], [26.7, 1725.0], [26.8, 1726.0], [26.9, 1729.0], [27.0, 1730.0], [27.1, 1731.0], [27.2, 1732.0], [27.3, 1733.0], [27.4, 1734.0], [27.5, 1735.0], [27.6, 1736.0], [27.7, 1736.0], [27.8, 1737.0], [27.9, 1737.0], [28.0, 1741.0], [28.1, 1742.0], [28.2, 1742.0], [28.3, 1743.0], [28.4, 1743.0], [28.5, 1745.0], [28.6, 1746.0], [28.7, 1747.0], [28.8, 1748.0], [28.9, 1749.0], [29.0, 1750.0], [29.1, 1752.0], [29.2, 1753.0], [29.3, 1756.0], [29.4, 1756.0], [29.5, 1757.0], [29.6, 1759.0], [29.7, 1760.0], [29.8, 1762.0], [29.9, 1766.0], [30.0, 1769.0], [30.1, 1769.0], [30.2, 1772.0], [30.3, 1773.0], [30.4, 1774.0], [30.5, 1774.0], [30.6, 1774.0], [30.7, 1777.0], [30.8, 1777.0], [30.9, 1781.0], [31.0, 1781.0], [31.1, 1783.0], [31.2, 1785.0], [31.3, 1787.0], [31.4, 1787.0], [31.5, 1788.0], [31.6, 1788.0], [31.7, 1789.0], [31.8, 1791.0], [31.9, 1793.0], [32.0, 1796.0], [32.1, 1797.0], [32.2, 1798.0], [32.3, 1800.0], [32.4, 1805.0], [32.5, 1805.0], [32.6, 1806.0], [32.7, 1807.0], [32.8, 1808.0], [32.9, 1809.0], [33.0, 1810.0], [33.1, 1812.0], [33.2, 1813.0], [33.3, 1814.0], [33.4, 1815.0], [33.5, 1816.0], [33.6, 1817.0], [33.7, 1819.0], [33.8, 1821.0], [33.9, 1822.0], [34.0, 1822.0], [34.1, 1824.0], [34.2, 1826.0], [34.3, 1827.0], [34.4, 1828.0], [34.5, 1828.0], [34.6, 1829.0], [34.7, 1829.0], [34.8, 1829.0], [34.9, 1833.0], [35.0, 1833.0], [35.1, 1835.0], [35.2, 1835.0], [35.3, 1839.0], [35.4, 1844.0], [35.5, 1845.0], [35.6, 1845.0], [35.7, 1849.0], [35.8, 1850.0], [35.9, 1851.0], [36.0, 1854.0], [36.1, 1854.0], [36.2, 1855.0], [36.3, 1857.0], [36.4, 1860.0], [36.5, 1861.0], [36.6, 1862.0], [36.7, 1864.0], [36.8, 1866.0], [36.9, 1867.0], [37.0, 1869.0], [37.1, 1870.0], [37.2, 1871.0], [37.3, 1874.0], [37.4, 1874.0], [37.5, 1877.0], [37.6, 1878.0], [37.7, 1880.0], [37.8, 1881.0], [37.9, 1885.0], [38.0, 1886.0], [38.1, 1886.0], [38.2, 1886.0], [38.3, 1887.0], [38.4, 1888.0], [38.5, 1888.0], [38.6, 1890.0], [38.7, 1891.0], [38.8, 1893.0], [38.9, 1895.0], [39.0, 1895.0], [39.1, 1896.0], [39.2, 1896.0], [39.3, 1900.0], [39.4, 1900.0], [39.5, 1901.0], [39.6, 1901.0], [39.7, 1906.0], [39.8, 1906.0], [39.9, 1908.0], [40.0, 1908.0], [40.1, 1911.0], [40.2, 1911.0], [40.3, 1912.0], [40.4, 1912.0], [40.5, 1913.0], [40.6, 1914.0], [40.7, 1916.0], [40.8, 1921.0], [40.9, 1921.0], [41.0, 1922.0], [41.1, 1922.0], [41.2, 1925.0], [41.3, 1926.0], [41.4, 1927.0], [41.5, 1927.0], [41.6, 1929.0], [41.7, 1930.0], [41.8, 1931.0], [41.9, 1933.0], [42.0, 1933.0], [42.1, 1934.0], [42.2, 1934.0], [42.3, 1937.0], [42.4, 1937.0], [42.5, 1938.0], [42.6, 1940.0], [42.7, 1940.0], [42.8, 1940.0], [42.9, 1943.0], [43.0, 1944.0], [43.1, 1944.0], [43.2, 1945.0], [43.3, 1945.0], [43.4, 1946.0], [43.5, 1946.0], [43.6, 1946.0], [43.7, 1947.0], [43.8, 1949.0], [43.9, 1952.0], [44.0, 1953.0], [44.1, 1955.0], [44.2, 1955.0], [44.3, 1956.0], [44.4, 1957.0], [44.5, 1958.0], [44.6, 1960.0], [44.7, 1964.0], [44.8, 1965.0], [44.9, 1966.0], [45.0, 1968.0], [45.1, 1968.0], [45.2, 1968.0], [45.3, 1969.0], [45.4, 1970.0], [45.5, 1971.0], [45.6, 1973.0], [45.7, 1976.0], [45.8, 1977.0], [45.9, 1980.0], [46.0, 1982.0], [46.1, 1985.0], [46.2, 1985.0], [46.3, 1987.0], [46.4, 1987.0], [46.5, 1992.0], [46.6, 1993.0], [46.7, 1994.0], [46.8, 1994.0], [46.9, 1994.0], [47.0, 1995.0], [47.1, 1996.0], [47.2, 1997.0], [47.3, 1998.0], [47.4, 1999.0], [47.5, 2003.0], [47.6, 2004.0], [47.7, 2005.0], [47.8, 2007.0], [47.9, 2008.0], [48.0, 2010.0], [48.1, 2011.0], [48.2, 2012.0], [48.3, 2012.0], [48.4, 2015.0], [48.5, 2016.0], [48.6, 2016.0], [48.7, 2017.0], [48.8, 2018.0], [48.9, 2021.0], [49.0, 2022.0], [49.1, 2023.0], [49.2, 2026.0], [49.3, 2026.0], [49.4, 2027.0], [49.5, 2027.0], [49.6, 2028.0], [49.7, 2028.0], [49.8, 2032.0], [49.9, 2033.0], [50.0, 2033.0], [50.1, 2034.0], [50.2, 2034.0], [50.3, 2036.0], [50.4, 2036.0], [50.5, 2037.0], [50.6, 2040.0], [50.7, 2041.0], [50.8, 2042.0], [50.9, 2044.0], [51.0, 2045.0], [51.1, 2045.0], [51.2, 2046.0], [51.3, 2046.0], [51.4, 2048.0], [51.5, 2048.0], [51.6, 2049.0], [51.7, 2049.0], [51.8, 2049.0], [51.9, 2050.0], [52.0, 2051.0], [52.1, 2051.0], [52.2, 2052.0], [52.3, 2053.0], [52.4, 2053.0], [52.5, 2054.0], [52.6, 2054.0], [52.7, 2054.0], [52.8, 2055.0], [52.9, 2058.0], [53.0, 2058.0], [53.1, 2059.0], [53.2, 2060.0], [53.3, 2060.0], [53.4, 2065.0], [53.5, 2066.0], [53.6, 2068.0], [53.7, 2069.0], [53.8, 2069.0], [53.9, 2071.0], [54.0, 2072.0], [54.1, 2073.0], [54.2, 2075.0], [54.3, 2076.0], [54.4, 2079.0], [54.5, 2081.0], [54.6, 2081.0], [54.7, 2085.0], [54.8, 2085.0], [54.9, 2086.0], [55.0, 2086.0], [55.1, 2088.0], [55.2, 2088.0], [55.3, 2089.0], [55.4, 2089.0], [55.5, 2089.0], [55.6, 2091.0], [55.7, 2093.0], [55.8, 2094.0], [55.9, 2094.0], [56.0, 2095.0], [56.1, 2095.0], [56.2, 2098.0], [56.3, 2101.0], [56.4, 2104.0], [56.5, 2105.0], [56.6, 2105.0], [56.7, 2106.0], [56.8, 2107.0], [56.9, 2107.0], [57.0, 2108.0], [57.1, 2108.0], [57.2, 2109.0], [57.3, 2112.0], [57.4, 2113.0], [57.5, 2116.0], [57.6, 2118.0], [57.7, 2119.0], [57.8, 2121.0], [57.9, 2121.0], [58.0, 2123.0], [58.1, 2124.0], [58.2, 2126.0], [58.3, 2126.0], [58.4, 2129.0], [58.5, 2130.0], [58.6, 2131.0], [58.7, 2131.0], [58.8, 2132.0], [58.9, 2133.0], [59.0, 2134.0], [59.1, 2137.0], [59.2, 2139.0], [59.3, 2140.0], [59.4, 2141.0], [59.5, 2142.0], [59.6, 2143.0], [59.7, 2144.0], [59.8, 2144.0], [59.9, 2146.0], [60.0, 2146.0], [60.1, 2146.0], [60.2, 2149.0], [60.3, 2150.0], [60.4, 2150.0], [60.5, 2151.0], [60.6, 2153.0], [60.7, 2153.0], [60.8, 2156.0], [60.9, 2156.0], [61.0, 2157.0], [61.1, 2162.0], [61.2, 2162.0], [61.3, 2165.0], [61.4, 2166.0], [61.5, 2168.0], [61.6, 2169.0], [61.7, 2169.0], [61.8, 2169.0], [61.9, 2170.0], [62.0, 2171.0], [62.1, 2171.0], [62.2, 2172.0], [62.3, 2172.0], [62.4, 2175.0], [62.5, 2175.0], [62.6, 2177.0], [62.7, 2178.0], [62.8, 2179.0], [62.9, 2179.0], [63.0, 2183.0], [63.1, 2183.0], [63.2, 2184.0], [63.3, 2187.0], [63.4, 2191.0], [63.5, 2193.0], [63.6, 2195.0], [63.7, 2198.0], [63.8, 2199.0], [63.9, 2201.0], [64.0, 2201.0], [64.1, 2202.0], [64.2, 2203.0], [64.3, 2203.0], [64.4, 2206.0], [64.5, 2208.0], [64.6, 2209.0], [64.7, 2209.0], [64.8, 2210.0], [64.9, 2211.0], [65.0, 2211.0], [65.1, 2213.0], [65.2, 2215.0], [65.3, 2216.0], [65.4, 2217.0], [65.5, 2220.0], [65.6, 2220.0], [65.7, 2220.0], [65.8, 2221.0], [65.9, 2223.0], [66.0, 2223.0], [66.1, 2226.0], [66.2, 2230.0], [66.3, 2232.0], [66.4, 2233.0], [66.5, 2233.0], [66.6, 2237.0], [66.7, 2239.0], [66.8, 2244.0], [66.9, 2245.0], [67.0, 2245.0], [67.1, 2248.0], [67.2, 2250.0], [67.3, 2251.0], [67.4, 2254.0], [67.5, 2256.0], [67.6, 2257.0], [67.7, 2260.0], [67.8, 2261.0], [67.9, 2265.0], [68.0, 2266.0], [68.1, 2267.0], [68.2, 2267.0], [68.3, 2269.0], [68.4, 2273.0], [68.5, 2274.0], [68.6, 2274.0], [68.7, 2274.0], [68.8, 2276.0], [68.9, 2278.0], [69.0, 2281.0], [69.1, 2282.0], [69.2, 2282.0], [69.3, 2286.0], [69.4, 2288.0], [69.5, 2289.0], [69.6, 2292.0], [69.7, 2295.0], [69.8, 2295.0], [69.9, 2298.0], [70.0, 2298.0], [70.1, 2304.0], [70.2, 2305.0], [70.3, 2307.0], [70.4, 2309.0], [70.5, 2311.0], [70.6, 2311.0], [70.7, 2312.0], [70.8, 2313.0], [70.9, 2316.0], [71.0, 2318.0], [71.1, 2319.0], [71.2, 2322.0], [71.3, 2323.0], [71.4, 2326.0], [71.5, 2328.0], [71.6, 2331.0], [71.7, 2331.0], [71.8, 2333.0], [71.9, 2335.0], [72.0, 2337.0], [72.1, 2338.0], [72.2, 2339.0], [72.3, 2341.0], [72.4, 2342.0], [72.5, 2344.0], [72.6, 2345.0], [72.7, 2347.0], [72.8, 2348.0], [72.9, 2351.0], [73.0, 2353.0], [73.1, 2354.0], [73.2, 2357.0], [73.3, 2359.0], [73.4, 2360.0], [73.5, 2362.0], [73.6, 2362.0], [73.7, 2362.0], [73.8, 2368.0], [73.9, 2369.0], [74.0, 2370.0], [74.1, 2373.0], [74.2, 2375.0], [74.3, 2376.0], [74.4, 2380.0], [74.5, 2382.0], [74.6, 2385.0], [74.7, 2387.0], [74.8, 2395.0], [74.9, 2398.0], [75.0, 2398.0], [75.1, 2400.0], [75.2, 2402.0], [75.3, 2403.0], [75.4, 2413.0], [75.5, 2413.0], [75.6, 2415.0], [75.7, 2417.0], [75.8, 2419.0], [75.9, 2421.0], [76.0, 2429.0], [76.1, 2430.0], [76.2, 2434.0], [76.3, 2435.0], [76.4, 2436.0], [76.5, 2439.0], [76.6, 2440.0], [76.7, 2444.0], [76.8, 2446.0], [76.9, 2450.0], [77.0, 2450.0], [77.1, 2453.0], [77.2, 2457.0], [77.3, 2460.0], [77.4, 2466.0], [77.5, 2471.0], [77.6, 2472.0], [77.7, 2472.0], [77.8, 2479.0], [77.9, 2480.0], [78.0, 2485.0], [78.1, 2485.0], [78.2, 2486.0], [78.3, 2488.0], [78.4, 2488.0], [78.5, 2492.0], [78.6, 2494.0], [78.7, 2495.0], [78.8, 2495.0], [78.9, 2499.0], [79.0, 2503.0], [79.1, 2504.0], [79.2, 2506.0], [79.3, 2508.0], [79.4, 2513.0], [79.5, 2515.0], [79.6, 2517.0], [79.7, 2517.0], [79.8, 2522.0], [79.9, 2523.0], [80.0, 2526.0], [80.1, 2529.0], [80.2, 2535.0], [80.3, 2540.0], [80.4, 2544.0], [80.5, 2544.0], [80.6, 2544.0], [80.7, 2544.0], [80.8, 2547.0], [80.9, 2547.0], [81.0, 2549.0], [81.1, 2553.0], [81.2, 2554.0], [81.3, 2557.0], [81.4, 2562.0], [81.5, 2567.0], [81.6, 2567.0], [81.7, 2571.0], [81.8, 2572.0], [81.9, 2575.0], [82.0, 2579.0], [82.1, 2580.0], [82.2, 2585.0], [82.3, 2586.0], [82.4, 2588.0], [82.5, 2593.0], [82.6, 2595.0], [82.7, 2596.0], [82.8, 2596.0], [82.9, 2600.0], [83.0, 2600.0], [83.1, 2604.0], [83.2, 2607.0], [83.3, 2612.0], [83.4, 2615.0], [83.5, 2617.0], [83.6, 2621.0], [83.7, 2624.0], [83.8, 2632.0], [83.9, 2635.0], [84.0, 2636.0], [84.1, 2642.0], [84.2, 2648.0], [84.3, 2652.0], [84.4, 2655.0], [84.5, 2656.0], [84.6, 2659.0], [84.7, 2659.0], [84.8, 2662.0], [84.9, 2667.0], [85.0, 2676.0], [85.1, 2677.0], [85.2, 2679.0], [85.3, 2687.0], [85.4, 2693.0], [85.5, 2704.0], [85.6, 2709.0], [85.7, 2711.0], [85.8, 2713.0], [85.9, 2717.0], [86.0, 2726.0], [86.1, 2727.0], [86.2, 2730.0], [86.3, 2730.0], [86.4, 2735.0], [86.5, 2743.0], [86.6, 2747.0], [86.7, 2749.0], [86.8, 2750.0], [86.9, 2753.0], [87.0, 2756.0], [87.1, 2767.0], [87.2, 2768.0], [87.3, 2769.0], [87.4, 2776.0], [87.5, 2780.0], [87.6, 2781.0], [87.7, 2788.0], [87.8, 2791.0], [87.9, 2792.0], [88.0, 2794.0], [88.1, 2795.0], [88.2, 2804.0], [88.3, 2815.0], [88.4, 2817.0], [88.5, 2817.0], [88.6, 2824.0], [88.7, 2826.0], [88.8, 2827.0], [88.9, 2827.0], [89.0, 2831.0], [89.1, 2841.0], [89.2, 2845.0], [89.3, 2852.0], [89.4, 2853.0], [89.5, 2866.0], [89.6, 2866.0], [89.7, 2869.0], [89.8, 2874.0], [89.9, 2880.0], [90.0, 2883.0], [90.1, 2887.0], [90.2, 2892.0], [90.3, 2896.0], [90.4, 2898.0], [90.5, 2898.0], [90.6, 2901.0], [90.7, 2901.0], [90.8, 2902.0], [90.9, 2902.0], [91.0, 2903.0], [91.1, 2905.0], [91.2, 2909.0], [91.3, 2920.0], [91.4, 2926.0], [91.5, 2929.0], [91.6, 2932.0], [91.7, 2933.0], [91.8, 2934.0], [91.9, 2941.0], [92.0, 2951.0], [92.1, 2959.0], [92.2, 2963.0], [92.3, 2976.0], [92.4, 2980.0], [92.5, 2982.0], [92.6, 2997.0], [92.7, 2998.0], [92.8, 3003.0], [92.9, 3008.0], [93.0, 3011.0], [93.1, 3023.0], [93.2, 3039.0], [93.3, 3040.0], [93.4, 3050.0], [93.5, 3052.0], [93.6, 3055.0], [93.7, 3065.0], [93.8, 3066.0], [93.9, 3078.0], [94.0, 3078.0], [94.1, 3113.0], [94.2, 3134.0], [94.3, 3144.0], [94.4, 3160.0], [94.5, 3163.0], [94.6, 3163.0], [94.7, 3172.0], [94.8, 3177.0], [94.9, 3181.0], [95.0, 3185.0], [95.1, 3193.0], [95.2, 3200.0], [95.3, 3200.0], [95.4, 3222.0], [95.5, 3234.0], [95.6, 3250.0], [95.7, 3254.0], [95.8, 3254.0], [95.9, 3258.0], [96.0, 3260.0], [96.1, 3265.0], [96.2, 3265.0], [96.3, 3275.0], [96.4, 3277.0], [96.5, 3287.0], [96.6, 3291.0], [96.7, 3322.0], [96.8, 3345.0], [96.9, 3354.0], [97.0, 3367.0], [97.1, 3368.0], [97.2, 3389.0], [97.3, 3392.0], [97.4, 3398.0], [97.5, 3427.0], [97.6, 3433.0], [97.7, 3438.0], [97.8, 3454.0], [97.9, 3455.0], [98.0, 3461.0], [98.1, 3499.0], [98.2, 3514.0], [98.3, 3546.0], [98.4, 3560.0], [98.5, 3582.0], [98.6, 3591.0], [98.7, 3606.0], [98.8, 3622.0], [98.9, 3649.0], [99.0, 3670.0], [99.1, 3704.0], [99.2, 3761.0], [99.3, 3790.0], [99.4, 3839.0], [99.5, 3907.0], [99.6, 3941.0], [99.7, 3960.0], [99.8, 4049.0], [99.9, 4104.0]], "isOverall": false, "label": "Get PROB list", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 128.0, "series": [{"data": [[0.0, 10.0], [600.0, 113.0], [700.0, 99.0], [200.0, 43.0], [800.0, 43.0], [900.0, 43.0], [1000.0, 18.0], [1100.0, 7.0], [300.0, 69.0], [1200.0, 6.0], [1300.0, 3.0], [1400.0, 2.0], [100.0, 16.0], [400.0, 88.0], [500.0, 111.0]], "isOverall": false, "label": "Post PROB UNREMOVE", "isController": false}, {"data": [[0.0, 11.0], [100.0, 3.0], [200.0, 2.0], [400.0, 1.0], [500.0, 1.0], [600.0, 2.0], [700.0, 3.0], [800.0, 3.0], [900.0, 4.0], [1000.0, 4.0], [1100.0, 3.0], [1200.0, 3.0], [1300.0, 3.0], [1400.0, 3.0], [1500.0, 1.0], [1600.0, 2.0], [1900.0, 2.0], [2000.0, 2.0], [2300.0, 3.0], [2400.0, 2.0], [2600.0, 1.0], [2700.0, 1.0], [2800.0, 5.0], [2900.0, 1.0], [3000.0, 3.0], [3200.0, 3.0], [3400.0, 1.0], [3500.0, 1.0], [3600.0, 2.0], [3800.0, 1.0], [4000.0, 3.0], [4300.0, 3.0], [4100.0, 1.0], [4500.0, 1.0], [4400.0, 2.0], [4600.0, 2.0], [4700.0, 2.0], [4900.0, 1.0], [5200.0, 4.0], [5500.0, 3.0], [5400.0, 1.0], [5600.0, 1.0], [5700.0, 2.0], [6000.0, 1.0], [6100.0, 1.0], [6200.0, 3.0], [6300.0, 4.0], [6500.0, 5.0], [6600.0, 9.0], [6400.0, 4.0], [6800.0, 14.0], [6700.0, 9.0], [6900.0, 20.0], [7100.0, 20.0], [7000.0, 19.0], [7200.0, 23.0], [7300.0, 11.0], [7400.0, 17.0], [7500.0, 20.0], [7600.0, 13.0], [7700.0, 8.0], [7900.0, 11.0], [7800.0, 6.0], [8000.0, 4.0], [8100.0, 2.0], [8200.0, 4.0], [8300.0, 2.0], [8500.0, 4.0], [8400.0, 1.0], [8700.0, 1.0], [8800.0, 1.0], [9000.0, 3.0], [9100.0, 1.0], [9200.0, 2.0], [9600.0, 3.0], [9700.0, 2.0], [9800.0, 2.0], [10000.0, 3.0], [10400.0, 1.0], [11100.0, 1.0], [11000.0, 2.0], [11400.0, 2.0], [11600.0, 1.0], [11800.0, 3.0], [12000.0, 2.0], [11900.0, 1.0], [12100.0, 1.0], [12400.0, 4.0], [12700.0, 2.0], [12600.0, 1.0], [12900.0, 3.0], [13100.0, 4.0], [13000.0, 1.0], [13200.0, 2.0], [13300.0, 3.0], [13600.0, 3.0], [13800.0, 2.0], [13400.0, 1.0], [13700.0, 3.0], [14100.0, 1.0], [14000.0, 1.0], [14300.0, 2.0], [14600.0, 1.0], [14700.0, 2.0], [14800.0, 1.0], [14500.0, 1.0], [14400.0, 1.0], [15200.0, 2.0], [15100.0, 3.0], [15300.0, 3.0], [14900.0, 3.0], [15000.0, 1.0], [15400.0, 4.0], [15700.0, 9.0], [15800.0, 7.0], [15600.0, 8.0], [15500.0, 4.0], [16000.0, 17.0], [16100.0, 8.0], [16300.0, 10.0], [16200.0, 9.0], [15900.0, 11.0], [17200.0, 4.0], [16600.0, 10.0], [16800.0, 4.0], [16400.0, 5.0], [17000.0, 4.0], [17400.0, 6.0], [17800.0, 3.0], [17600.0, 5.0], [18000.0, 1.0], [18200.0, 1.0], [18600.0, 2.0], [19400.0, 2.0], [19200.0, 1.0], [19800.0, 3.0], [19600.0, 1.0], [20000.0, 1.0], [20400.0, 1.0], [21400.0, 2.0], [20800.0, 4.0], [21000.0, 3.0], [21200.0, 3.0], [21800.0, 1.0], [22000.0, 3.0], [21600.0, 1.0], [22200.0, 1.0], [23000.0, 3.0], [22600.0, 2.0], [22800.0, 3.0], [23400.0, 2.0], [24400.0, 1.0], [25000.0, 2.0], [24600.0, 1.0], [26000.0, 5.0], [25800.0, 5.0], [26200.0, 6.0], [26600.0, 2.0], [26400.0, 2.0], [25600.0, 4.0], [26800.0, 2.0], [27000.0, 2.0], [27600.0, 1.0], [27800.0, 1.0], [28400.0, 1.0], [28000.0, 1.0], [29200.0, 2.0], [29400.0, 2.0], [30000.0, 2.0], [29800.0, 1.0], [30600.0, 2.0], [30200.0, 1.0], [30800.0, 1.0], [16500.0, 8.0], [16700.0, 9.0], [17100.0, 5.0], [16900.0, 6.0], [17300.0, 4.0], [18300.0, 1.0], [17900.0, 2.0], [17500.0, 1.0], [17700.0, 5.0], [18100.0, 1.0], [18900.0, 2.0], [19300.0, 1.0], [20100.0, 1.0], [19700.0, 3.0], [20300.0, 1.0], [20700.0, 2.0], [20500.0, 5.0], [20900.0, 7.0], [21100.0, 2.0], [21500.0, 2.0], [21700.0, 3.0], [22500.0, 3.0], [22300.0, 2.0], [23100.0, 2.0], [22900.0, 1.0], [23500.0, 1.0], [24500.0, 1.0], [24300.0, 1.0], [23900.0, 1.0], [24700.0, 3.0], [24900.0, 3.0], [25500.0, 2.0], [25300.0, 1.0], [25700.0, 2.0], [26100.0, 4.0], [26500.0, 2.0], [26300.0, 5.0], [26900.0, 4.0], [26700.0, 2.0], [27300.0, 2.0], [27700.0, 1.0], [28500.0, 1.0], [29100.0, 2.0], [29500.0, 2.0], [28900.0, 1.0], [29900.0, 2.0], [30100.0, 1.0]], "isOverall": false, "label": "Post PROB", "isController": false}, {"data": [[0.0, 8.0], [600.0, 5.0], [700.0, 9.0], [800.0, 37.0], [900.0, 47.0], [1000.0, 50.0], [1100.0, 63.0], [1200.0, 73.0], [1300.0, 86.0], [1400.0, 77.0], [1500.0, 38.0], [100.0, 1.0], [1600.0, 41.0], [1700.0, 33.0], [1800.0, 23.0], [1900.0, 20.0], [2000.0, 8.0], [2100.0, 5.0], [2300.0, 7.0], [2200.0, 6.0], [2400.0, 4.0], [2500.0, 2.0], [2600.0, 4.0], [2700.0, 2.0], [2900.0, 2.0], [300.0, 2.0], [400.0, 7.0], [500.0, 14.0]], "isOverall": false, "label": "Delete PROB", "isController": false}, {"data": [[0.0, 7.0], [600.0, 12.0], [700.0, 38.0], [800.0, 46.0], [900.0, 85.0], [1000.0, 74.0], [1100.0, 81.0], [1200.0, 82.0], [1300.0, 58.0], [1400.0, 45.0], [1500.0, 36.0], [100.0, 4.0], [1600.0, 14.0], [1700.0, 22.0], [1800.0, 10.0], [1900.0, 6.0], [2000.0, 9.0], [2100.0, 3.0], [2200.0, 3.0], [2300.0, 1.0], [2400.0, 2.0], [2600.0, 2.0], [2700.0, 1.0], [200.0, 5.0], [300.0, 7.0], [400.0, 10.0], [500.0, 15.0]], "isOverall": false, "label": "Get PROB ID", "isController": false}, {"data": [[600.0, 12.0], [700.0, 14.0], [800.0, 13.0], [900.0, 7.0], [1000.0, 7.0], [1100.0, 13.0], [1200.0, 22.0], [1300.0, 31.0], [1400.0, 36.0], [1500.0, 73.0], [100.0, 5.0], [1600.0, 103.0], [1700.0, 110.0], [1800.0, 102.0], [1900.0, 119.0], [2000.0, 128.0], [2100.0, 110.0], [2200.0, 90.0], [2300.0, 73.0], [2400.0, 57.0], [2500.0, 57.0], [2600.0, 38.0], [2700.0, 39.0], [2800.0, 35.0], [2900.0, 31.0], [3000.0, 20.0], [3100.0, 16.0], [200.0, 7.0], [3200.0, 21.0], [3300.0, 12.0], [3400.0, 10.0], [3500.0, 7.0], [3600.0, 6.0], [3700.0, 4.0], [3800.0, 2.0], [3900.0, 5.0], [4000.0, 1.0], [4100.0, 2.0], [300.0, 2.0], [400.0, 6.0], [500.0, 8.0]], "isOverall": false, "label": "Get PROB list", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 30800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 315.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2286.0, "series": [{"data": [[1.0, 1636.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[0.0, 315.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 2286.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 27.787661406025844, "minX": 1.52728176E12, "maxY": 80.64229765013047, "series": [{"data": [[1.52728182E12, 40.0], [1.52728194E12, 60.935601458080185], [1.52728176E12, 27.787661406025844], [1.52728206E12, 78.11409395973155], [1.52728188E12, 54.31111111111115], [1.527282E12, 80.64229765013047]], "isOverall": false, "label": "jp@gc Ultima Thread - Patient Problem", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52728206E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.0, "maxY": 30630.0, "series": [{"data": [[4.0, 5.0], [5.0, 61.0], [6.0, 18.5], [9.0, 70.75], [11.0, 34.0], [13.0, 67.5], [14.0, 186.0], [15.0, 263.0], [16.0, 302.5], [17.0, 308.0], [18.0, 129.0], [19.0, 347.0], [20.0, 308.1428571428571], [21.0, 338.0], [22.0, 313.0], [23.0, 336.0], [24.0, 678.5], [26.0, 492.0], [28.0, 291.0], [29.0, 386.0], [30.0, 694.5], [31.0, 623.0], [32.0, 698.0], [35.0, 919.0], [36.0, 974.3333333333334], [37.0, 629.0], [38.0, 433.0], [39.0, 725.0], [40.0, 528.0224215246637], [41.0, 624.0], [42.0, 554.6666666666666], [43.0, 739.0], [44.0, 847.0], [46.0, 1285.0], [47.0, 620.0], [48.0, 831.5], [50.0, 759.0], [51.0, 884.0], [52.0, 732.0], [55.0, 1049.5], [57.0, 935.0], [58.0, 725.0], [59.0, 508.0], [60.0, 601.863414634146], [61.0, 796.0], [62.0, 502.25], [65.0, 971.6666666666666], [69.0, 897.0], [70.0, 698.0], [71.0, 990.0], [72.0, 1102.5], [73.0, 870.0], [74.0, 951.0], [75.0, 1145.0], [76.0, 980.0], [77.0, 778.0], [79.0, 1049.0], [80.0, 700.7058823529412], [81.0, 924.5], [83.0, 1019.0], [84.0, 713.0], [85.0, 766.0], [86.0, 864.0], [88.0, 1024.5], [90.0, 1309.0], [91.0, 666.0], [92.0, 1151.0], [93.0, 1304.0], [95.0, 940.0], [96.0, 1168.0], [97.0, 1077.0], [99.0, 1102.0], [100.0, 1282.0]], "isOverall": false, "label": "Post PROB UNREMOVE", "isController": false}, {"data": [[53.70193740685541, 602.8062593144564]], "isOverall": false, "label": "Post PROB UNREMOVE-Aggregated", "isController": false}, {"data": [[2.0, 43.5], [4.0, 52.5], [6.0, 16.5], [8.0, 214.0], [9.0, 133.5], [11.0, 339.25], [12.0, 955.5], [13.0, 543.0], [14.0, 904.0], [15.0, 496.5], [17.0, 1411.0], [18.0, 1224.6666666666667], [19.0, 895.5], [20.0, 1390.2307692307693], [21.0, 1925.0], [22.0, 1474.5], [23.0, 1333.0], [24.0, 2082.0], [25.0, 2723.0], [26.0, 3122.5], [27.0, 2519.0], [28.0, 2760.0], [29.0, 2783.3333333333335], [30.0, 2941.5], [31.0, 2607.5], [32.0, 3352.0], [33.0, 3632.0], [35.0, 4210.0], [36.0, 4337.5], [37.0, 3991.5], [38.0, 4095.0], [39.0, 3603.0], [40.0, 7089.861607142858], [41.0, 8095.0], [42.0, 7336.666666666667], [43.0, 7394.0], [44.0, 8512.0], [45.0, 8538.0], [46.0, 8214.0], [47.0, 8209.0], [48.0, 8241.5], [49.0, 8050.333333333333], [50.0, 7996.0], [51.0, 4747.666666666667], [52.0, 5711.6], [53.0, 5708.4], [54.0, 6988.5], [55.0, 7983.5], [56.0, 8514.2], [57.0, 9452.5], [58.0, 10006.0], [59.0, 11137.75], [60.0, 15598.719806763287], [61.0, 14754.75], [62.0, 15816.999999999998], [63.0, 16902.25], [64.0, 18057.8], [66.0, 19863.333333333332], [67.0, 21012.2], [65.0, 20017.333333333332], [68.0, 22874.6], [69.0, 22059.333333333332], [70.0, 24338.5], [71.0, 22660.25], [72.0, 23810.5], [74.0, 18681.0], [75.0, 19882.0], [73.0, 30051.0], [77.0, 23039.333333333332], [78.0, 20111.0], [79.0, 19731.0], [80.0, 23467.135922330104], [81.0, 26319.0], [82.0, 28291.5], [83.0, 26951.5], [84.0, 27305.0], [85.0, 27091.0], [86.0, 26258.0], [87.0, 27003.0], [88.0, 28663.666666666668], [89.0, 27899.0], [90.0, 27680.0], [91.0, 28478.0], [92.0, 28598.0], [93.0, 29242.0], [94.0, 29490.0], [95.0, 29599.0], [96.0, 29797.666666666668], [97.0, 29510.0], [98.0, 29445.0], [99.0, 29843.0], [100.0, 30630.0]], "isOverall": false, "label": "Post PROB", "isController": false}, {"data": [[53.85921052631579, 13019.123684210517]], "isOverall": false, "label": "Post PROB-Aggregated", "isController": false}, {"data": [[4.0, 17.0], [6.0, 46.5], [8.0, 63.33333333333333], [9.0, 88.0], [10.0, 809.0], [11.0, 318.0], [12.0, 818.0], [13.0, 745.0], [14.0, 486.6666666666667], [15.0, 249.0], [16.0, 555.0], [17.0, 1130.5], [18.0, 476.5], [19.0, 590.0], [20.0, 739.1538461538462], [21.0, 881.0], [22.0, 568.5], [25.0, 1567.0], [27.0, 1629.0], [28.0, 1575.0], [29.0, 1081.3333333333333], [30.0, 1027.5], [31.0, 1429.0], [33.0, 1818.0], [34.0, 2316.0], [35.0, 2205.0], [36.0, 2219.0], [37.0, 1415.3333333333333], [38.0, 1598.0], [39.0, 1538.5], [40.0, 1243.650224215247], [41.0, 1456.0], [42.0, 1212.75], [43.0, 945.0], [44.0, 1736.0], [46.0, 2209.0], [47.0, 1959.0], [48.0, 1828.0], [49.0, 1855.0], [50.0, 1398.5], [51.0, 1364.0], [53.0, 1541.5], [55.0, 2721.0], [56.0, 2180.6666666666665], [57.0, 1415.0], [58.0, 1646.5], [59.0, 1673.5], [60.0, 1301.8872549019607], [61.0, 1552.0], [63.0, 1381.5], [64.0, 1446.0], [66.0, 2447.0], [67.0, 2176.0], [68.0, 1587.0], [69.0, 2007.3333333333333], [70.0, 874.0], [71.0, 1520.0], [72.0, 1692.0], [74.0, 1993.5], [76.0, 2379.0], [77.0, 2136.0], [78.0, 2606.0], [79.0, 1783.0], [80.0, 1494.5922330097085], [81.0, 1876.0], [83.0, 2158.0], [84.0, 2108.0], [85.0, 1741.0], [86.0, 1497.6666666666667], [87.0, 2726.0], [88.0, 1910.0], [89.0, 2359.0], [90.0, 2602.0], [91.0, 1964.0], [93.0, 2395.0], [94.0, 2485.0], [95.0, 2458.6666666666665], [97.0, 2058.0], [98.0, 1845.0], [96.0, 2608.0]], "isOverall": false, "label": "Delete PROB", "isController": false}, {"data": [[53.609792284866465, 1335.2848664688436]], "isOverall": false, "label": "Delete PROB-Aggregated", "isController": false}, {"data": [[3.0, 11.0], [4.0, 8.0], [5.0, 152.0], [6.0, 115.0], [8.0, 196.25], [9.0, 55.0], [10.0, 572.0], [11.0, 211.0], [13.0, 265.75], [14.0, 440.0], [15.0, 241.33333333333331], [16.0, 947.0], [17.0, 560.0], [18.0, 413.0], [19.0, 461.0], [20.0, 768.5999999999999], [21.0, 812.25], [22.0, 359.0], [25.0, 1594.0], [26.0, 1192.5], [27.0, 1002.0], [28.0, 965.5], [29.0, 940.0], [30.0, 1147.0], [31.0, 953.0], [32.0, 1266.0], [35.0, 1887.0], [36.0, 1297.6666666666667], [37.0, 1433.5], [38.0, 1103.0], [39.0, 1787.0], [40.0, 1036.587443946188], [41.0, 908.0], [42.0, 1111.0], [43.0, 1204.0], [44.0, 1480.0], [45.0, 1745.0], [46.0, 2070.5], [47.0, 1542.0], [48.0, 1502.6666666666667], [49.0, 1542.0], [50.0, 1443.0], [51.0, 1456.5], [52.0, 1580.0], [53.0, 1342.0], [54.0, 2418.5], [55.0, 1930.5], [56.0, 2127.0], [57.0, 1560.5], [59.0, 1551.0], [60.0, 1154.75], [61.0, 1242.0], [63.0, 1357.0], [64.0, 1613.0], [65.0, 2052.0], [66.0, 1643.3333333333333], [68.0, 1446.0], [69.0, 1353.3333333333333], [70.0, 934.5], [71.0, 1352.0], [72.0, 2164.0], [74.0, 1697.3333333333333], [76.0, 2491.0], [77.0, 2126.0], [79.0, 1822.0], [80.0, 1309.009803921569], [81.0, 1196.0], [83.0, 1753.0], [84.0, 1386.5], [85.0, 1032.0], [86.0, 1830.0], [87.0, 2749.0], [88.0, 1633.0], [89.0, 1849.0], [90.0, 1849.5], [91.0, 1779.0], [92.0, 2053.5], [94.0, 2445.5], [95.0, 1963.0], [97.0, 1910.6666666666667], [100.0, 2024.0]], "isOverall": false, "label": "Get PROB ID", "isController": false}, {"data": [[53.392330383480825, 1157.0811209439537]], "isOverall": false, "label": "Get PROB ID-Aggregated", "isController": false}, {"data": [[2.0, 231.0], [3.0, 280.3333333333333], [4.0, 214.0], [5.0, 178.0], [6.0, 473.0], [7.0, 483.25], [8.0, 589.75], [9.0, 197.5], [10.0, 730.3333333333334], [11.0, 622.6666666666666], [12.0, 761.6], [13.0, 612.25], [14.0, 750.2], [15.0, 492.5], [16.0, 712.25], [17.0, 1103.5], [18.0, 775.25], [19.0, 728.3333333333334], [20.0, 1281.6451612903227], [21.0, 1609.4285714285713], [22.0, 676.25], [24.0, 1345.5], [25.0, 1833.0], [26.0, 2147.6], [27.0, 2070.75], [28.0, 1931.0], [29.0, 1731.6], [30.0, 1654.6666666666667], [31.0, 1507.5], [32.0, 2175.5], [33.0, 2510.2], [34.0, 2549.3333333333335], [35.0, 2815.25], [36.0, 2523.1428571428573], [37.0, 1726.75], [38.0, 1882.5], [39.0, 1841.0], [40.0, 1807.6355555555558], [41.0, 1823.25], [42.0, 2085.6666666666665], [43.0, 1910.5], [44.0, 2410.5], [45.0, 2544.0], [46.0, 2945.9999999999995], [47.0, 2631.75], [48.0, 3216.3333333333335], [49.0, 2789.666666666667], [50.0, 2470.0], [51.0, 2117.25], [52.0, 2436.25], [53.0, 2685.5], [54.0, 2773.3333333333335], [55.0, 2842.1666666666665], [56.0, 3067.0], [57.0, 3069.25], [58.0, 2937.5], [59.0, 2525.2], [60.0, 2070.3737864077666], [61.0, 2716.6666666666665], [62.0, 2311.0], [63.0, 2211.0], [64.0, 2667.0], [65.0, 2441.0], [66.0, 2976.571428571429], [67.0, 3363.0], [68.0, 3105.5], [69.0, 2907.714285714286], [70.0, 2548.0], [71.0, 2359.0], [72.0, 2188.0], [73.0, 2754.2], [74.0, 3000.5], [75.0, 3000.3333333333335], [76.0, 3429.6666666666665], [77.0, 3306.875], [78.0, 3363.6666666666665], [79.0, 3322.0], [80.0, 2366.096153846153], [81.0, 2336.0], [82.0, 3053.25], [83.0, 2627.0], [84.0, 2611.0], [85.0, 2901.75], [86.0, 3670.0], [87.0, 3200.0], [88.0, 2637.0], [90.0, 3215.166666666667], [91.0, 3615.8], [92.0, 3313.6], [93.0, 3606.0], [94.0, 3497.2], [95.0, 3018.3333333333335], [96.0, 3515.0], [97.0, 3242.1428571428573], [98.0, 3040.0], [99.0, 3229.5], [1.0, 400.0]], "isOverall": false, "label": "Get PROB list", "isController": false}, {"data": [[53.60729023383776, 2061.7255845942204]], "isOverall": false, "label": "Get PROB list-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1505.3, "minX": 1.52728176E12, "maxY": 1.1513426883333333E7, "series": [{"data": [[1.52728182E12, 1.128782695E7], [1.52728194E12, 1.1344681116666667E7], [1.52728176E12, 8547574.966666667], [1.52728206E12, 1628382.0666666667], [1.52728188E12, 1.1449726483333332E7], [1.527282E12, 1.1513426883333333E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.52728182E12, 4993.633333333333], [1.52728194E12, 4333.283333333334], [1.52728176E12, 3690.8], [1.52728206E12, 1505.3], [1.52728188E12, 4453.966666666666], [1.527282E12, 3983.0333333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52728206E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 432.5619047619047, "minX": 1.52728176E12, "maxY": 23757.137096774182, "series": [{"data": [[1.52728182E12, 514.8481012658226], [1.52728194E12, 630.5514705882352], [1.52728176E12, 432.5619047619047], [1.52728206E12, 1125.625], [1.52728188E12, 637.0647482014385], [1.527282E12, 755.2479999999999]], "isOverall": false, "label": "Post PROB UNREMOVE", "isController": false}, {"data": [[1.52728182E12, 7210.044303797468], [1.52728194E12, 16609.656934306575], [1.52728176E12, 3218.6638655462184], [1.52728206E12, 17904.04819277108], [1.52728188E12, 11977.568345323745], [1.527282E12, 23757.137096774182]], "isOverall": false, "label": "Post PROB", "isController": false}, {"data": [[1.52728182E12, 1226.7848101265822], [1.52728194E12, 1356.8370370370371], [1.52728176E12, 1027.7685185185182], [1.52728206E12, 2378.090909090909], [1.52728188E12, 1377.8129496402878], [1.527282E12, 1579.6991869918697]], "isOverall": false, "label": "Delete PROB", "isController": false}, {"data": [[1.52728182E12, 1011.0949367088612], [1.52728194E12, 1237.9044117647056], [1.52728176E12, 859.3818181818183], [1.52728206E12, 2185.7000000000003], [1.52728188E12, 1200.1079136690653], [1.527282E12, 1385.512]], "isOverall": false, "label": "Get PROB ID", "isController": false}, {"data": [[1.52728182E12, 1801.1269841269827], [1.52728194E12, 2218.168458781363], [1.52728176E12, 1450.58431372549], [1.52728206E12, 3326.1081081081084], [1.52728188E12, 2144.040133779264], [1.527282E12, 2518.557620817843]], "isOverall": false, "label": "Get PROB list", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.52728206E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 432.53333333333336, "minX": 1.52728176E12, "maxY": 23757.12903225806, "series": [{"data": [[1.52728182E12, 514.8481012658226], [1.52728194E12, 630.5073529411769], [1.52728176E12, 432.53333333333336], [1.52728206E12, 1125.5], [1.52728188E12, 637.0647482014385], [1.527282E12, 755.2400000000001]], "isOverall": false, "label": "Post PROB UNREMOVE", "isController": false}, {"data": [[1.52728182E12, 7210.025316455699], [1.52728194E12, 16609.64233576642], [1.52728176E12, 3218.64705882353], [1.52728206E12, 17904.04819277108], [1.52728188E12, 11977.539568345326], [1.527282E12, 23757.12903225806]], "isOverall": false, "label": "Post PROB", "isController": false}, {"data": [[1.52728182E12, 1226.772151898734], [1.52728194E12, 1356.82962962963], [1.52728176E12, 1027.7407407407409], [1.52728206E12, 2378.0], [1.52728188E12, 1377.8057553956833], [1.527282E12, 1579.6910569105685]], "isOverall": false, "label": "Delete PROB", "isController": false}, {"data": [[1.52728182E12, 1011.0949367088612], [1.52728194E12, 1237.9044117647056], [1.52728176E12, 859.3636363636361], [1.52728206E12, 2185.7000000000003], [1.52728188E12, 1200.1079136690653], [1.527282E12, 1385.4879999999998]], "isOverall": false, "label": "Get PROB ID", "isController": false}, {"data": [[1.52728182E12, 1478.8317460317464], [1.52728194E12, 1780.1505376344087], [1.52728176E12, 1199.4705882352944], [1.52728206E12, 2630.027027027027], [1.52728188E12, 1747.6020066889625], [1.527282E12, 1989.6840148698873]], "isOverall": false, "label": "Get PROB list", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.52728206E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.03597122302158274, "minX": 1.52728176E12, "maxY": 0.5019607843137254, "series": [{"data": [[1.52728182E12, 0.291139240506329], [1.52728194E12, 0.3088235294117646], [1.52728176E12, 0.22857142857142865], [1.52728206E12, 0.5], [1.52728188E12, 0.30215827338129503], [1.527282E12, 0.344]], "isOverall": false, "label": "Post PROB UNREMOVE", "isController": false}, {"data": [[1.52728182E12, 0.3797468354430379], [1.52728194E12, 0.43795620437956206], [1.52728176E12, 0.3361344537815126], [1.52728206E12, 0.27710843373493976], [1.52728188E12, 0.4748201438848921], [1.527282E12, 0.3145161290322579]], "isOverall": false, "label": "Post PROB", "isController": false}, {"data": [[1.52728182E12, 0.13924050632911406], [1.52728194E12, 0.03703703703703705], [1.52728176E12, 0.21296296296296305], [1.52728206E12, 0.2727272727272727], [1.52728188E12, 0.03597122302158274], [1.527282E12, 0.06504065040650406]], "isOverall": false, "label": "Delete PROB", "isController": false}, {"data": [[1.52728182E12, 0.2594936708860759], [1.52728194E12, 0.3088235294117648], [1.52728176E12, 0.2727272727272728], [1.52728206E12, 0.10000000000000002], [1.52728188E12, 0.31654676258992787], [1.527282E12, 0.288]], "isOverall": false, "label": "Get PROB ID", "isController": false}, {"data": [[1.52728182E12, 0.24761904761904768], [1.52728194E12, 0.2078853046594983], [1.52728176E12, 0.5019607843137254], [1.52728206E12, 0.13513513513513514], [1.52728188E12, 0.2006688963210703], [1.527282E12, 0.1784386617100372]], "isOverall": false, "label": "Get PROB list", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.52728206E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 5.0, "minX": 1.52728176E12, "maxY": 30870.0, "series": [{"data": [[1.52728182E12, 8216.0], [1.52728194E12, 18992.0], [1.52728176E12, 7916.0], [1.52728206E12, 30870.0], [1.52728188E12, 16865.0], [1.527282E12, 29242.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.52728182E12, 135.0], [1.52728194E12, 186.0], [1.52728176E12, 5.0], [1.52728206E12, 940.0], [1.52728188E12, 133.0], [1.527282E12, 166.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.52728182E12, 6652.0], [1.52728194E12, 7300.400000000001], [1.52728176E12, 2639.600000000001], [1.52728206E12, 8544.80000000001], [1.52728188E12, 7061.0], [1.527282E12, 7600.999999999999]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.52728182E12, 7713.1], [1.52728194E12, 17225.94], [1.52728176E12, 7491.5], [1.52728206E12, 26481.079999999994], [1.52728188E12, 15824.0], [1.527282E12, 25833.190000000002]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.52728182E12, 7247.25], [1.52728194E12, 15443.449999999997], [1.52728176E12, 5206.900000000001], [1.52728206E12, 16961.699999999997], [1.52728188E12, 7840.0], [1.527282E12, 16459.599999999984]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52728206E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1134.0, "minX": 2.0, "maxY": 5563.0, "series": [{"data": [[2.0, 5563.0], [11.0, 1134.0], [12.0, 1960.5], [13.0, 1725.0], [14.0, 1720.0], [15.0, 1454.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 15.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1068.0, "minX": 2.0, "maxY": 5563.0, "series": [{"data": [[2.0, 5563.0], [11.0, 1068.0], [12.0, 1711.0], [13.0, 1516.0], [14.0, 1487.0], [15.0, 1286.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 15.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.95, "minX": 1.52728176E12, "maxY": 15.733333333333333, "series": [{"data": [[1.52728182E12, 15.733333333333333], [1.52728194E12, 13.933333333333334], [1.52728176E12, 12.15], [1.52728206E12, 0.95], [1.52728188E12, 14.733333333333333], [1.527282E12, 13.116666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52728206E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 2.4833333333333334, "minX": 1.52728176E12, "maxY": 15.783333333333333, "series": [{"data": [[1.52728182E12, 15.783333333333333], [1.52728194E12, 13.716666666666667], [1.52728176E12, 11.616666666666667], [1.52728206E12, 2.4833333333333334], [1.52728188E12, 14.25], [1.527282E12, 12.766666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52728206E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.52728176E12, "maxY": 5.25, "series": [{"data": [[1.52728182E12, 2.6333333333333333], [1.52728194E12, 2.25], [1.52728176E12, 1.8], [1.52728206E12, 0.18333333333333332], [1.52728188E12, 2.316666666666667], [1.527282E12, 2.05]], "isOverall": false, "label": "Delete PROB-success", "isController": false}, {"data": [[1.52728182E12, 2.6333333333333333], [1.52728194E12, 2.2666666666666666], [1.52728176E12, 1.75], [1.52728206E12, 0.13333333333333333], [1.52728188E12, 2.316666666666667], [1.527282E12, 2.0833333333333335]], "isOverall": false, "label": "Post PROB UNREMOVE-success", "isController": false}, {"data": [[1.52728182E12, 5.25], [1.52728194E12, 4.65], [1.52728176E12, 4.25], [1.52728206E12, 0.6166666666666667], [1.52728188E12, 4.983333333333333], [1.527282E12, 4.483333333333333]], "isOverall": false, "label": "Get PROB list-success", "isController": false}, {"data": [[1.52728182E12, 2.6333333333333333], [1.52728194E12, 2.283333333333333], [1.52728176E12, 1.9833333333333334], [1.52728206E12, 1.3833333333333333], [1.52728188E12, 2.316666666666667], [1.527282E12, 2.066666666666667]], "isOverall": false, "label": "Post PROB-success", "isController": false}, {"data": [[1.52728182E12, 2.6333333333333333], [1.52728194E12, 2.2666666666666666], [1.52728176E12, 1.8333333333333333], [1.52728206E12, 0.16666666666666666], [1.52728188E12, 2.316666666666667], [1.527282E12, 2.0833333333333335]], "isOverall": false, "label": "Get PROB ID-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.52728206E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
