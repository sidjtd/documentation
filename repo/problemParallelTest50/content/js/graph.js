/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -36000000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -36000000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 10724.0, "series": [{"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 3.0], [5.5, 3.0], [5.6, 3.0], [5.7, 3.0], [5.8, 3.0], [5.9, 3.0], [6.0, 3.0], [6.1, 3.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 3.0], [8.6, 3.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 3.0], [13.5, 3.0], [13.6, 3.0], [13.7, 3.0], [13.8, 4.0], [13.9, 4.0], [14.0, 4.0], [14.1, 4.0], [14.2, 4.0], [14.3, 4.0], [14.4, 4.0], [14.5, 4.0], [14.6, 4.0], [14.7, 4.0], [14.8, 4.0], [14.9, 4.0], [15.0, 4.0], [15.1, 4.0], [15.2, 4.0], [15.3, 4.0], [15.4, 4.0], [15.5, 4.0], [15.6, 4.0], [15.7, 4.0], [15.8, 4.0], [15.9, 4.0], [16.0, 4.0], [16.1, 4.0], [16.2, 4.0], [16.3, 4.0], [16.4, 4.0], [16.5, 4.0], [16.6, 4.0], [16.7, 4.0], [16.8, 4.0], [16.9, 4.0], [17.0, 4.0], [17.1, 4.0], [17.2, 4.0], [17.3, 4.0], [17.4, 4.0], [17.5, 4.0], [17.6, 4.0], [17.7, 4.0], [17.8, 4.0], [17.9, 4.0], [18.0, 4.0], [18.1, 4.0], [18.2, 4.0], [18.3, 4.0], [18.4, 4.0], [18.5, 4.0], [18.6, 4.0], [18.7, 4.0], [18.8, 4.0], [18.9, 4.0], [19.0, 4.0], [19.1, 4.0], [19.2, 5.0], [19.3, 5.0], [19.4, 5.0], [19.5, 5.0], [19.6, 5.0], [19.7, 5.0], [19.8, 5.0], [19.9, 5.0], [20.0, 5.0], [20.1, 5.0], [20.2, 5.0], [20.3, 5.0], [20.4, 5.0], [20.5, 5.0], [20.6, 5.0], [20.7, 5.0], [20.8, 5.0], [20.9, 5.0], [21.0, 5.0], [21.1, 5.0], [21.2, 5.0], [21.3, 5.0], [21.4, 5.0], [21.5, 5.0], [21.6, 5.0], [21.7, 6.0], [21.8, 6.0], [21.9, 6.0], [22.0, 6.0], [22.1, 6.0], [22.2, 6.0], [22.3, 6.0], [22.4, 6.0], [22.5, 7.0], [22.6, 7.0], [22.7, 7.0], [22.8, 7.0], [22.9, 7.0], [23.0, 8.0], [23.1, 8.0], [23.2, 8.0], [23.3, 8.0], [23.4, 9.0], [23.5, 9.0], [23.6, 9.0], [23.7, 9.0], [23.8, 9.0], [23.9, 9.0], [24.0, 9.0], [24.1, 10.0], [24.2, 10.0], [24.3, 11.0], [24.4, 11.0], [24.5, 11.0], [24.6, 11.0], [24.7, 12.0], [24.8, 12.0], [24.9, 12.0], [25.0, 13.0], [25.1, 13.0], [25.2, 13.0], [25.3, 13.0], [25.4, 14.0], [25.5, 14.0], [25.6, 14.0], [25.7, 14.0], [25.8, 14.0], [25.9, 15.0], [26.0, 17.0], [26.1, 17.0], [26.2, 17.0], [26.3, 18.0], [26.4, 18.0], [26.5, 18.0], [26.6, 18.0], [26.7, 19.0], [26.8, 19.0], [26.9, 20.0], [27.0, 20.0], [27.1, 20.0], [27.2, 21.0], [27.3, 21.0], [27.4, 21.0], [27.5, 22.0], [27.6, 22.0], [27.7, 23.0], [27.8, 23.0], [27.9, 24.0], [28.0, 24.0], [28.1, 24.0], [28.2, 24.0], [28.3, 24.0], [28.4, 25.0], [28.5, 25.0], [28.6, 25.0], [28.7, 25.0], [28.8, 25.0], [28.9, 26.0], [29.0, 26.0], [29.1, 26.0], [29.2, 27.0], [29.3, 27.0], [29.4, 27.0], [29.5, 28.0], [29.6, 28.0], [29.7, 28.0], [29.8, 29.0], [29.9, 29.0], [30.0, 30.0], [30.1, 30.0], [30.2, 31.0], [30.3, 31.0], [30.4, 32.0], [30.5, 32.0], [30.6, 32.0], [30.7, 33.0], [30.8, 33.0], [30.9, 34.0], [31.0, 35.0], [31.1, 35.0], [31.2, 35.0], [31.3, 35.0], [31.4, 36.0], [31.5, 37.0], [31.6, 37.0], [31.7, 37.0], [31.8, 37.0], [31.9, 37.0], [32.0, 38.0], [32.1, 38.0], [32.2, 38.0], [32.3, 39.0], [32.4, 39.0], [32.5, 39.0], [32.6, 39.0], [32.7, 39.0], [32.8, 40.0], [32.9, 40.0], [33.0, 41.0], [33.1, 41.0], [33.2, 42.0], [33.3, 42.0], [33.4, 43.0], [33.5, 44.0], [33.6, 45.0], [33.7, 45.0], [33.8, 45.0], [33.9, 46.0], [34.0, 46.0], [34.1, 47.0], [34.2, 47.0], [34.3, 48.0], [34.4, 48.0], [34.5, 49.0], [34.6, 50.0], [34.7, 50.0], [34.8, 50.0], [34.9, 51.0], [35.0, 51.0], [35.1, 51.0], [35.2, 52.0], [35.3, 52.0], [35.4, 53.0], [35.5, 53.0], [35.6, 54.0], [35.7, 54.0], [35.8, 55.0], [35.9, 55.0], [36.0, 56.0], [36.1, 56.0], [36.2, 57.0], [36.3, 57.0], [36.4, 58.0], [36.5, 58.0], [36.6, 58.0], [36.7, 58.0], [36.8, 58.0], [36.9, 59.0], [37.0, 60.0], [37.1, 61.0], [37.2, 61.0], [37.3, 61.0], [37.4, 63.0], [37.5, 63.0], [37.6, 64.0], [37.7, 64.0], [37.8, 64.0], [37.9, 65.0], [38.0, 66.0], [38.1, 66.0], [38.2, 66.0], [38.3, 66.0], [38.4, 67.0], [38.5, 68.0], [38.6, 68.0], [38.7, 69.0], [38.8, 70.0], [38.9, 71.0], [39.0, 71.0], [39.1, 71.0], [39.2, 72.0], [39.3, 73.0], [39.4, 74.0], [39.5, 75.0], [39.6, 75.0], [39.7, 76.0], [39.8, 76.0], [39.9, 77.0], [40.0, 77.0], [40.1, 78.0], [40.2, 78.0], [40.3, 79.0], [40.4, 79.0], [40.5, 80.0], [40.6, 81.0], [40.7, 82.0], [40.8, 83.0], [40.9, 83.0], [41.0, 84.0], [41.1, 85.0], [41.2, 86.0], [41.3, 87.0], [41.4, 87.0], [41.5, 87.0], [41.6, 88.0], [41.7, 89.0], [41.8, 90.0], [41.9, 90.0], [42.0, 91.0], [42.1, 92.0], [42.2, 92.0], [42.3, 93.0], [42.4, 94.0], [42.5, 95.0], [42.6, 97.0], [42.7, 99.0], [42.8, 100.0], [42.9, 100.0], [43.0, 100.0], [43.1, 100.0], [43.2, 100.0], [43.3, 101.0], [43.4, 101.0], [43.5, 103.0], [43.6, 104.0], [43.7, 104.0], [43.8, 105.0], [43.9, 105.0], [44.0, 106.0], [44.1, 106.0], [44.2, 108.0], [44.3, 109.0], [44.4, 111.0], [44.5, 112.0], [44.6, 113.0], [44.7, 114.0], [44.8, 114.0], [44.9, 114.0], [45.0, 115.0], [45.1, 116.0], [45.2, 116.0], [45.3, 117.0], [45.4, 118.0], [45.5, 120.0], [45.6, 122.0], [45.7, 123.0], [45.8, 124.0], [45.9, 125.0], [46.0, 126.0], [46.1, 126.0], [46.2, 126.0], [46.3, 127.0], [46.4, 128.0], [46.5, 132.0], [46.6, 132.0], [46.7, 133.0], [46.8, 135.0], [46.9, 135.0], [47.0, 135.0], [47.1, 136.0], [47.2, 137.0], [47.3, 139.0], [47.4, 141.0], [47.5, 141.0], [47.6, 143.0], [47.7, 144.0], [47.8, 144.0], [47.9, 146.0], [48.0, 146.0], [48.1, 147.0], [48.2, 148.0], [48.3, 149.0], [48.4, 149.0], [48.5, 150.0], [48.6, 152.0], [48.7, 153.0], [48.8, 155.0], [48.9, 157.0], [49.0, 157.0], [49.1, 158.0], [49.2, 159.0], [49.3, 160.0], [49.4, 161.0], [49.5, 162.0], [49.6, 163.0], [49.7, 164.0], [49.8, 165.0], [49.9, 165.0], [50.0, 165.0], [50.1, 167.0], [50.2, 167.0], [50.3, 169.0], [50.4, 171.0], [50.5, 171.0], [50.6, 172.0], [50.7, 173.0], [50.8, 175.0], [50.9, 175.0], [51.0, 176.0], [51.1, 176.0], [51.2, 176.0], [51.3, 177.0], [51.4, 177.0], [51.5, 178.0], [51.6, 178.0], [51.7, 179.0], [51.8, 179.0], [51.9, 180.0], [52.0, 181.0], [52.1, 181.0], [52.2, 181.0], [52.3, 183.0], [52.4, 184.0], [52.5, 184.0], [52.6, 184.0], [52.7, 184.0], [52.8, 185.0], [52.9, 185.0], [53.0, 185.0], [53.1, 185.0], [53.2, 186.0], [53.3, 186.0], [53.4, 187.0], [53.5, 188.0], [53.6, 190.0], [53.7, 190.0], [53.8, 191.0], [53.9, 192.0], [54.0, 193.0], [54.1, 193.0], [54.2, 194.0], [54.3, 195.0], [54.4, 196.0], [54.5, 196.0], [54.6, 197.0], [54.7, 198.0], [54.8, 198.0], [54.9, 199.0], [55.0, 200.0], [55.1, 201.0], [55.2, 202.0], [55.3, 203.0], [55.4, 204.0], [55.5, 205.0], [55.6, 205.0], [55.7, 205.0], [55.8, 207.0], [55.9, 208.0], [56.0, 209.0], [56.1, 210.0], [56.2, 210.0], [56.3, 210.0], [56.4, 211.0], [56.5, 212.0], [56.6, 213.0], [56.7, 214.0], [56.8, 215.0], [56.9, 216.0], [57.0, 216.0], [57.1, 217.0], [57.2, 217.0], [57.3, 218.0], [57.4, 218.0], [57.5, 218.0], [57.6, 219.0], [57.7, 220.0], [57.8, 220.0], [57.9, 221.0], [58.0, 222.0], [58.1, 222.0], [58.2, 223.0], [58.3, 223.0], [58.4, 224.0], [58.5, 226.0], [58.6, 226.0], [58.7, 227.0], [58.8, 228.0], [58.9, 228.0], [59.0, 228.0], [59.1, 229.0], [59.2, 229.0], [59.3, 229.0], [59.4, 229.0], [59.5, 230.0], [59.6, 231.0], [59.7, 231.0], [59.8, 231.0], [59.9, 233.0], [60.0, 234.0], [60.1, 234.0], [60.2, 235.0], [60.3, 235.0], [60.4, 236.0], [60.5, 236.0], [60.6, 237.0], [60.7, 237.0], [60.8, 237.0], [60.9, 238.0], [61.0, 238.0], [61.1, 238.0], [61.2, 238.0], [61.3, 238.0], [61.4, 240.0], [61.5, 240.0], [61.6, 240.0], [61.7, 241.0], [61.8, 242.0], [61.9, 243.0], [62.0, 243.0], [62.1, 245.0], [62.2, 245.0], [62.3, 246.0], [62.4, 247.0], [62.5, 248.0], [62.6, 249.0], [62.7, 250.0], [62.8, 250.0], [62.9, 251.0], [63.0, 252.0], [63.1, 253.0], [63.2, 254.0], [63.3, 254.0], [63.4, 255.0], [63.5, 255.0], [63.6, 256.0], [63.7, 256.0], [63.8, 257.0], [63.9, 257.0], [64.0, 258.0], [64.1, 259.0], [64.2, 259.0], [64.3, 259.0], [64.4, 260.0], [64.5, 262.0], [64.6, 263.0], [64.7, 263.0], [64.8, 264.0], [64.9, 265.0], [65.0, 266.0], [65.1, 267.0], [65.2, 267.0], [65.3, 267.0], [65.4, 267.0], [65.5, 268.0], [65.6, 269.0], [65.7, 270.0], [65.8, 270.0], [65.9, 271.0], [66.0, 272.0], [66.1, 272.0], [66.2, 272.0], [66.3, 273.0], [66.4, 273.0], [66.5, 274.0], [66.6, 276.0], [66.7, 278.0], [66.8, 278.0], [66.9, 279.0], [67.0, 279.0], [67.1, 280.0], [67.2, 280.0], [67.3, 280.0], [67.4, 281.0], [67.5, 282.0], [67.6, 282.0], [67.7, 282.0], [67.8, 283.0], [67.9, 283.0], [68.0, 283.0], [68.1, 284.0], [68.2, 284.0], [68.3, 284.0], [68.4, 285.0], [68.5, 285.0], [68.6, 285.0], [68.7, 286.0], [68.8, 286.0], [68.9, 287.0], [69.0, 287.0], [69.1, 288.0], [69.2, 289.0], [69.3, 290.0], [69.4, 291.0], [69.5, 291.0], [69.6, 292.0], [69.7, 293.0], [69.8, 293.0], [69.9, 294.0], [70.0, 294.0], [70.1, 295.0], [70.2, 296.0], [70.3, 297.0], [70.4, 298.0], [70.5, 298.0], [70.6, 298.0], [70.7, 300.0], [70.8, 300.0], [70.9, 300.0], [71.0, 300.0], [71.1, 301.0], [71.2, 302.0], [71.3, 303.0], [71.4, 304.0], [71.5, 304.0], [71.6, 305.0], [71.7, 307.0], [71.8, 307.0], [71.9, 309.0], [72.0, 310.0], [72.1, 311.0], [72.2, 311.0], [72.3, 312.0], [72.4, 312.0], [72.5, 312.0], [72.6, 312.0], [72.7, 313.0], [72.8, 313.0], [72.9, 314.0], [73.0, 315.0], [73.1, 317.0], [73.2, 317.0], [73.3, 317.0], [73.4, 319.0], [73.5, 319.0], [73.6, 320.0], [73.7, 320.0], [73.8, 321.0], [73.9, 322.0], [74.0, 322.0], [74.1, 322.0], [74.2, 323.0], [74.3, 324.0], [74.4, 325.0], [74.5, 325.0], [74.6, 325.0], [74.7, 326.0], [74.8, 326.0], [74.9, 327.0], [75.0, 329.0], [75.1, 329.0], [75.2, 329.0], [75.3, 329.0], [75.4, 330.0], [75.5, 331.0], [75.6, 331.0], [75.7, 332.0], [75.8, 332.0], [75.9, 333.0], [76.0, 333.0], [76.1, 334.0], [76.2, 335.0], [76.3, 336.0], [76.4, 336.0], [76.5, 338.0], [76.6, 338.0], [76.7, 338.0], [76.8, 338.0], [76.9, 340.0], [77.0, 340.0], [77.1, 341.0], [77.2, 342.0], [77.3, 343.0], [77.4, 344.0], [77.5, 346.0], [77.6, 346.0], [77.7, 347.0], [77.8, 348.0], [77.9, 348.0], [78.0, 349.0], [78.1, 349.0], [78.2, 350.0], [78.3, 351.0], [78.4, 351.0], [78.5, 352.0], [78.6, 352.0], [78.7, 353.0], [78.8, 355.0], [78.9, 356.0], [79.0, 356.0], [79.1, 357.0], [79.2, 358.0], [79.3, 358.0], [79.4, 359.0], [79.5, 359.0], [79.6, 360.0], [79.7, 360.0], [79.8, 360.0], [79.9, 361.0], [80.0, 361.0], [80.1, 362.0], [80.2, 362.0], [80.3, 362.0], [80.4, 363.0], [80.5, 364.0], [80.6, 364.0], [80.7, 364.0], [80.8, 365.0], [80.9, 365.0], [81.0, 366.0], [81.1, 366.0], [81.2, 367.0], [81.3, 368.0], [81.4, 369.0], [81.5, 369.0], [81.6, 370.0], [81.7, 372.0], [81.8, 372.0], [81.9, 372.0], [82.0, 373.0], [82.1, 374.0], [82.2, 374.0], [82.3, 375.0], [82.4, 375.0], [82.5, 376.0], [82.6, 377.0], [82.7, 377.0], [82.8, 378.0], [82.9, 379.0], [83.0, 380.0], [83.1, 381.0], [83.2, 381.0], [83.3, 382.0], [83.4, 383.0], [83.5, 384.0], [83.6, 384.0], [83.7, 384.0], [83.8, 385.0], [83.9, 386.0], [84.0, 386.0], [84.1, 387.0], [84.2, 388.0], [84.3, 388.0], [84.4, 389.0], [84.5, 389.0], [84.6, 391.0], [84.7, 392.0], [84.8, 393.0], [84.9, 395.0], [85.0, 397.0], [85.1, 398.0], [85.2, 399.0], [85.3, 399.0], [85.4, 400.0], [85.5, 401.0], [85.6, 402.0], [85.7, 402.0], [85.8, 403.0], [85.9, 403.0], [86.0, 404.0], [86.1, 404.0], [86.2, 406.0], [86.3, 407.0], [86.4, 408.0], [86.5, 410.0], [86.6, 410.0], [86.7, 411.0], [86.8, 411.0], [86.9, 412.0], [87.0, 414.0], [87.1, 415.0], [87.2, 416.0], [87.3, 416.0], [87.4, 417.0], [87.5, 418.0], [87.6, 419.0], [87.7, 420.0], [87.8, 421.0], [87.9, 422.0], [88.0, 422.0], [88.1, 424.0], [88.2, 425.0], [88.3, 425.0], [88.4, 428.0], [88.5, 429.0], [88.6, 431.0], [88.7, 432.0], [88.8, 433.0], [88.9, 434.0], [89.0, 436.0], [89.1, 437.0], [89.2, 438.0], [89.3, 440.0], [89.4, 441.0], [89.5, 441.0], [89.6, 442.0], [89.7, 443.0], [89.8, 444.0], [89.9, 445.0], [90.0, 445.0], [90.1, 446.0], [90.2, 446.0], [90.3, 453.0], [90.4, 455.0], [90.5, 455.0], [90.6, 456.0], [90.7, 457.0], [90.8, 459.0], [90.9, 459.0], [91.0, 460.0], [91.1, 461.0], [91.2, 462.0], [91.3, 462.0], [91.4, 463.0], [91.5, 464.0], [91.6, 465.0], [91.7, 468.0], [91.8, 468.0], [91.9, 469.0], [92.0, 471.0], [92.1, 471.0], [92.2, 472.0], [92.3, 473.0], [92.4, 474.0], [92.5, 475.0], [92.6, 475.0], [92.7, 477.0], [92.8, 478.0], [92.9, 478.0], [93.0, 478.0], [93.1, 479.0], [93.2, 480.0], [93.3, 480.0], [93.4, 487.0], [93.5, 487.0], [93.6, 488.0], [93.7, 489.0], [93.8, 491.0], [93.9, 491.0], [94.0, 492.0], [94.1, 495.0], [94.2, 496.0], [94.3, 498.0], [94.4, 499.0], [94.5, 503.0], [94.6, 504.0], [94.7, 505.0], [94.8, 506.0], [94.9, 507.0], [95.0, 511.0], [95.1, 515.0], [95.2, 516.0], [95.3, 518.0], [95.4, 520.0], [95.5, 523.0], [95.6, 525.0], [95.7, 526.0], [95.8, 530.0], [95.9, 533.0], [96.0, 534.0], [96.1, 537.0], [96.2, 538.0], [96.3, 539.0], [96.4, 542.0], [96.5, 543.0], [96.6, 544.0], [96.7, 546.0], [96.8, 548.0], [96.9, 549.0], [97.0, 551.0], [97.1, 555.0], [97.2, 557.0], [97.3, 559.0], [97.4, 561.0], [97.5, 566.0], [97.6, 567.0], [97.7, 573.0], [97.8, 580.0], [97.9, 585.0], [98.0, 587.0], [98.1, 593.0], [98.2, 594.0], [98.3, 601.0], [98.4, 603.0], [98.5, 608.0], [98.6, 611.0], [98.7, 616.0], [98.8, 627.0], [98.9, 634.0], [99.0, 635.0], [99.1, 656.0], [99.2, 662.0], [99.3, 673.0], [99.4, 679.0], [99.5, 704.0], [99.6, 722.0], [99.7, 748.0], [99.8, 823.0], [99.9, 871.0], [100.0, 891.0]], "isOverall": false, "label": "Post PROB UNREMOVE", "isController": false}, {"data": [[0.0, 8.0], [0.1, 8.0], [0.2, 8.0], [0.3, 8.0], [0.4, 9.0], [0.5, 9.0], [0.6, 9.0], [0.7, 9.0], [0.8, 9.0], [0.9, 9.0], [1.0, 9.0], [1.1, 9.0], [1.2, 9.0], [1.3, 9.0], [1.4, 9.0], [1.5, 9.0], [1.6, 9.0], [1.7, 9.0], [1.8, 9.0], [1.9, 9.0], [2.0, 9.0], [2.1, 9.0], [2.2, 9.0], [2.3, 9.0], [2.4, 9.0], [2.5, 9.0], [2.6, 9.0], [2.7, 9.0], [2.8, 9.0], [2.9, 10.0], [3.0, 10.0], [3.1, 10.0], [3.2, 10.0], [3.3, 10.0], [3.4, 10.0], [3.5, 10.0], [3.6, 10.0], [3.7, 10.0], [3.8, 10.0], [3.9, 10.0], [4.0, 10.0], [4.1, 10.0], [4.2, 10.0], [4.3, 10.0], [4.4, 10.0], [4.5, 10.0], [4.6, 10.0], [4.7, 10.0], [4.8, 10.0], [4.9, 10.0], [5.0, 10.0], [5.1, 10.0], [5.2, 10.0], [5.3, 10.0], [5.4, 10.0], [5.5, 10.0], [5.6, 10.0], [5.7, 10.0], [5.8, 10.0], [5.9, 10.0], [6.0, 10.0], [6.1, 10.0], [6.2, 10.0], [6.3, 10.0], [6.4, 10.0], [6.5, 10.0], [6.6, 10.0], [6.7, 10.0], [6.8, 11.0], [6.9, 11.0], [7.0, 11.0], [7.1, 11.0], [7.2, 11.0], [7.3, 11.0], [7.4, 11.0], [7.5, 11.0], [7.6, 11.0], [7.7, 11.0], [7.8, 11.0], [7.9, 11.0], [8.0, 11.0], [8.1, 11.0], [8.2, 11.0], [8.3, 11.0], [8.4, 11.0], [8.5, 11.0], [8.6, 11.0], [8.7, 11.0], [8.8, 11.0], [8.9, 11.0], [9.0, 11.0], [9.1, 11.0], [9.2, 11.0], [9.3, 11.0], [9.4, 11.0], [9.5, 11.0], [9.6, 11.0], [9.7, 11.0], [9.8, 11.0], [9.9, 11.0], [10.0, 11.0], [10.1, 11.0], [10.2, 11.0], [10.3, 11.0], [10.4, 12.0], [10.5, 12.0], [10.6, 12.0], [10.7, 12.0], [10.8, 12.0], [10.9, 12.0], [11.0, 12.0], [11.1, 12.0], [11.2, 12.0], [11.3, 12.0], [11.4, 12.0], [11.5, 12.0], [11.6, 12.0], [11.7, 12.0], [11.8, 12.0], [11.9, 12.0], [12.0, 12.0], [12.1, 12.0], [12.2, 12.0], [12.3, 12.0], [12.4, 12.0], [12.5, 12.0], [12.6, 12.0], [12.7, 12.0], [12.8, 12.0], [12.9, 12.0], [13.0, 12.0], [13.1, 12.0], [13.2, 13.0], [13.3, 13.0], [13.4, 13.0], [13.5, 13.0], [13.6, 13.0], [13.7, 13.0], [13.8, 13.0], [13.9, 13.0], [14.0, 13.0], [14.1, 13.0], [14.2, 13.0], [14.3, 13.0], [14.4, 13.0], [14.5, 13.0], [14.6, 13.0], [14.7, 13.0], [14.8, 13.0], [14.9, 13.0], [15.0, 13.0], [15.1, 13.0], [15.2, 13.0], [15.3, 13.0], [15.4, 14.0], [15.5, 14.0], [15.6, 14.0], [15.7, 14.0], [15.8, 14.0], [15.9, 14.0], [16.0, 14.0], [16.1, 14.0], [16.2, 14.0], [16.3, 14.0], [16.4, 14.0], [16.5, 14.0], [16.6, 14.0], [16.7, 14.0], [16.8, 14.0], [16.9, 14.0], [17.0, 14.0], [17.1, 14.0], [17.2, 14.0], [17.3, 14.0], [17.4, 14.0], [17.5, 15.0], [17.6, 15.0], [17.7, 15.0], [17.8, 15.0], [17.9, 15.0], [18.0, 15.0], [18.1, 15.0], [18.2, 15.0], [18.3, 15.0], [18.4, 16.0], [18.5, 16.0], [18.6, 16.0], [18.7, 16.0], [18.8, 16.0], [18.9, 16.0], [19.0, 16.0], [19.1, 16.0], [19.2, 16.0], [19.3, 16.0], [19.4, 16.0], [19.5, 17.0], [19.6, 17.0], [19.7, 17.0], [19.8, 17.0], [19.9, 18.0], [20.0, 18.0], [20.1, 18.0], [20.2, 18.0], [20.3, 19.0], [20.4, 19.0], [20.5, 19.0], [20.6, 19.0], [20.7, 19.0], [20.8, 20.0], [20.9, 20.0], [21.0, 20.0], [21.1, 20.0], [21.2, 20.0], [21.3, 21.0], [21.4, 22.0], [21.5, 23.0], [21.6, 23.0], [21.7, 23.0], [21.8, 23.0], [21.9, 24.0], [22.0, 24.0], [22.1, 24.0], [22.2, 24.0], [22.3, 24.0], [22.4, 25.0], [22.5, 25.0], [22.6, 25.0], [22.7, 25.0], [22.8, 26.0], [22.9, 26.0], [23.0, 26.0], [23.1, 27.0], [23.2, 27.0], [23.3, 27.0], [23.4, 28.0], [23.5, 29.0], [23.6, 29.0], [23.7, 30.0], [23.8, 31.0], [23.9, 31.0], [24.0, 31.0], [24.1, 31.0], [24.2, 32.0], [24.3, 32.0], [24.4, 33.0], [24.5, 33.0], [24.6, 33.0], [24.7, 34.0], [24.8, 34.0], [24.9, 35.0], [25.0, 35.0], [25.1, 37.0], [25.2, 37.0], [25.3, 38.0], [25.4, 39.0], [25.5, 41.0], [25.6, 43.0], [25.7, 45.0], [25.8, 45.0], [25.9, 46.0], [26.0, 48.0], [26.1, 48.0], [26.2, 49.0], [26.3, 50.0], [26.4, 51.0], [26.5, 51.0], [26.6, 52.0], [26.7, 52.0], [26.8, 53.0], [26.9, 54.0], [27.0, 55.0], [27.1, 55.0], [27.2, 56.0], [27.3, 56.0], [27.4, 57.0], [27.5, 58.0], [27.6, 60.0], [27.7, 60.0], [27.8, 60.0], [27.9, 63.0], [28.0, 64.0], [28.1, 64.0], [28.2, 66.0], [28.3, 66.0], [28.4, 67.0], [28.5, 68.0], [28.6, 68.0], [28.7, 69.0], [28.8, 69.0], [28.9, 70.0], [29.0, 70.0], [29.1, 71.0], [29.2, 71.0], [29.3, 72.0], [29.4, 73.0], [29.5, 74.0], [29.6, 75.0], [29.7, 75.0], [29.8, 77.0], [29.9, 78.0], [30.0, 78.0], [30.1, 79.0], [30.2, 79.0], [30.3, 80.0], [30.4, 82.0], [30.5, 83.0], [30.6, 83.0], [30.7, 85.0], [30.8, 85.0], [30.9, 86.0], [31.0, 87.0], [31.1, 89.0], [31.2, 91.0], [31.3, 92.0], [31.4, 92.0], [31.5, 92.0], [31.6, 94.0], [31.7, 98.0], [31.8, 98.0], [31.9, 100.0], [32.0, 104.0], [32.1, 104.0], [32.2, 105.0], [32.3, 106.0], [32.4, 107.0], [32.5, 109.0], [32.6, 110.0], [32.7, 110.0], [32.8, 112.0], [32.9, 112.0], [33.0, 113.0], [33.1, 114.0], [33.2, 117.0], [33.3, 118.0], [33.4, 120.0], [33.5, 125.0], [33.6, 127.0], [33.7, 127.0], [33.8, 129.0], [33.9, 130.0], [34.0, 131.0], [34.1, 132.0], [34.2, 135.0], [34.3, 138.0], [34.4, 144.0], [34.5, 144.0], [34.6, 146.0], [34.7, 146.0], [34.8, 150.0], [34.9, 151.0], [35.0, 153.0], [35.1, 154.0], [35.2, 156.0], [35.3, 157.0], [35.4, 157.0], [35.5, 158.0], [35.6, 158.0], [35.7, 160.0], [35.8, 161.0], [35.9, 168.0], [36.0, 171.0], [36.1, 174.0], [36.2, 174.0], [36.3, 175.0], [36.4, 176.0], [36.5, 178.0], [36.6, 183.0], [36.7, 184.0], [36.8, 190.0], [36.9, 192.0], [37.0, 195.0], [37.1, 195.0], [37.2, 198.0], [37.3, 202.0], [37.4, 204.0], [37.5, 204.0], [37.6, 207.0], [37.7, 209.0], [37.8, 212.0], [37.9, 216.0], [38.0, 218.0], [38.1, 221.0], [38.2, 226.0], [38.3, 229.0], [38.4, 230.0], [38.5, 231.0], [38.6, 235.0], [38.7, 235.0], [38.8, 236.0], [38.9, 236.0], [39.0, 238.0], [39.1, 243.0], [39.2, 244.0], [39.3, 244.0], [39.4, 246.0], [39.5, 249.0], [39.6, 249.0], [39.7, 259.0], [39.8, 260.0], [39.9, 265.0], [40.0, 266.0], [40.1, 267.0], [40.2, 271.0], [40.3, 274.0], [40.4, 275.0], [40.5, 278.0], [40.6, 281.0], [40.7, 287.0], [40.8, 290.0], [40.9, 291.0], [41.0, 292.0], [41.1, 294.0], [41.2, 297.0], [41.3, 299.0], [41.4, 302.0], [41.5, 304.0], [41.6, 305.0], [41.7, 308.0], [41.8, 310.0], [41.9, 311.0], [42.0, 321.0], [42.1, 322.0], [42.2, 323.0], [42.3, 330.0], [42.4, 332.0], [42.5, 334.0], [42.6, 336.0], [42.7, 337.0], [42.8, 342.0], [42.9, 344.0], [43.0, 346.0], [43.1, 350.0], [43.2, 351.0], [43.3, 351.0], [43.4, 354.0], [43.5, 358.0], [43.6, 359.0], [43.7, 361.0], [43.8, 366.0], [43.9, 367.0], [44.0, 367.0], [44.1, 370.0], [44.2, 370.0], [44.3, 372.0], [44.4, 372.0], [44.5, 375.0], [44.6, 375.0], [44.7, 379.0], [44.8, 381.0], [44.9, 382.0], [45.0, 385.0], [45.1, 386.0], [45.2, 389.0], [45.3, 392.0], [45.4, 393.0], [45.5, 400.0], [45.6, 402.0], [45.7, 405.0], [45.8, 409.0], [45.9, 410.0], [46.0, 412.0], [46.1, 413.0], [46.2, 414.0], [46.3, 415.0], [46.4, 416.0], [46.5, 436.0], [46.6, 438.0], [46.7, 439.0], [46.8, 443.0], [46.9, 450.0], [47.0, 455.0], [47.1, 455.0], [47.2, 456.0], [47.3, 457.0], [47.4, 462.0], [47.5, 468.0], [47.6, 472.0], [47.7, 479.0], [47.8, 482.0], [47.9, 483.0], [48.0, 486.0], [48.1, 490.0], [48.2, 491.0], [48.3, 493.0], [48.4, 500.0], [48.5, 509.0], [48.6, 515.0], [48.7, 522.0], [48.8, 532.0], [48.9, 537.0], [49.0, 541.0], [49.1, 553.0], [49.2, 561.0], [49.3, 566.0], [49.4, 569.0], [49.5, 573.0], [49.6, 574.0], [49.7, 578.0], [49.8, 588.0], [49.9, 596.0], [50.0, 602.0], [50.1, 608.0], [50.2, 610.0], [50.3, 617.0], [50.4, 652.0], [50.5, 666.0], [50.6, 670.0], [50.7, 670.0], [50.8, 674.0], [50.9, 693.0], [51.0, 701.0], [51.1, 708.0], [51.2, 713.0], [51.3, 718.0], [51.4, 718.0], [51.5, 743.0], [51.6, 754.0], [51.7, 758.0], [51.8, 761.0], [51.9, 762.0], [52.0, 806.0], [52.1, 812.0], [52.2, 819.0], [52.3, 831.0], [52.4, 841.0], [52.5, 846.0], [52.6, 858.0], [52.7, 882.0], [52.8, 886.0], [52.9, 890.0], [53.0, 906.0], [53.1, 911.0], [53.2, 915.0], [53.3, 922.0], [53.4, 953.0], [53.5, 967.0], [53.6, 972.0], [53.7, 978.0], [53.8, 979.0], [53.9, 985.0], [54.0, 1010.0], [54.1, 1013.0], [54.2, 1025.0], [54.3, 1035.0], [54.4, 1054.0], [54.5, 1082.0], [54.6, 1089.0], [54.7, 1112.0], [54.8, 1129.0], [54.9, 1134.0], [55.0, 1145.0], [55.1, 1163.0], [55.2, 1177.0], [55.3, 1213.0], [55.4, 1265.0], [55.5, 1273.0], [55.6, 1287.0], [55.7, 1294.0], [55.8, 1301.0], [55.9, 1317.0], [56.0, 1338.0], [56.1, 1348.0], [56.2, 1367.0], [56.3, 1373.0], [56.4, 1387.0], [56.5, 1424.0], [56.6, 1473.0], [56.7, 1488.0], [56.8, 1503.0], [56.9, 1517.0], [57.0, 1531.0], [57.1, 1560.0], [57.2, 1576.0], [57.3, 1595.0], [57.4, 1629.0], [57.5, 1638.0], [57.6, 1639.0], [57.7, 1688.0], [57.8, 1752.0], [57.9, 1758.0], [58.0, 1784.0], [58.1, 1787.0], [58.2, 1826.0], [58.3, 1846.0], [58.4, 1897.0], [58.5, 1910.0], [58.6, 1916.0], [58.7, 1943.0], [58.8, 1960.0], [58.9, 2013.0], [59.0, 2026.0], [59.1, 2078.0], [59.2, 2111.0], [59.3, 2121.0], [59.4, 2152.0], [59.5, 2183.0], [59.6, 2214.0], [59.7, 2254.0], [59.8, 2263.0], [59.9, 2322.0], [60.0, 2352.0], [60.1, 2423.0], [60.2, 2442.0], [60.3, 2461.0], [60.4, 2491.0], [60.5, 2594.0], [60.6, 2661.0], [60.7, 2666.0], [60.8, 2747.0], [60.9, 2926.0], [61.0, 3055.0], [61.1, 3101.0], [61.2, 3127.0], [61.3, 3153.0], [61.4, 3193.0], [61.5, 3212.0], [61.6, 3255.0], [61.7, 3297.0], [61.8, 3355.0], [61.9, 3392.0], [62.0, 3428.0], [62.1, 3450.0], [62.2, 3469.0], [62.3, 3493.0], [62.4, 3508.0], [62.5, 3539.0], [62.6, 3568.0], [62.7, 3585.0], [62.8, 3591.0], [62.9, 3598.0], [63.0, 3600.0], [63.1, 3621.0], [63.2, 3645.0], [63.3, 3661.0], [63.4, 3672.0], [63.5, 3682.0], [63.6, 3685.0], [63.7, 3707.0], [63.8, 3757.0], [63.9, 3773.0], [64.0, 3777.0], [64.1, 3815.0], [64.2, 3824.0], [64.3, 3835.0], [64.4, 3846.0], [64.5, 3853.0], [64.6, 3861.0], [64.7, 3873.0], [64.8, 3897.0], [64.9, 3897.0], [65.0, 3906.0], [65.1, 3937.0], [65.2, 3945.0], [65.3, 3960.0], [65.4, 3960.0], [65.5, 3965.0], [65.6, 3968.0], [65.7, 3982.0], [65.8, 3991.0], [65.9, 3993.0], [66.0, 4002.0], [66.1, 4006.0], [66.2, 4008.0], [66.3, 4016.0], [66.4, 4039.0], [66.5, 4053.0], [66.6, 4061.0], [66.7, 4075.0], [66.8, 4085.0], [66.9, 4091.0], [67.0, 4094.0], [67.1, 4095.0], [67.2, 4102.0], [67.3, 4106.0], [67.4, 4128.0], [67.5, 4136.0], [67.6, 4163.0], [67.7, 4172.0], [67.8, 4175.0], [67.9, 4175.0], [68.0, 4184.0], [68.1, 4196.0], [68.2, 4197.0], [68.3, 4209.0], [68.4, 4214.0], [68.5, 4220.0], [68.6, 4230.0], [68.7, 4248.0], [68.8, 4256.0], [68.9, 4272.0], [69.0, 4285.0], [69.1, 4285.0], [69.2, 4299.0], [69.3, 4309.0], [69.4, 4328.0], [69.5, 4337.0], [69.6, 4343.0], [69.7, 4349.0], [69.8, 4368.0], [69.9, 4373.0], [70.0, 4378.0], [70.1, 4388.0], [70.2, 4391.0], [70.3, 4414.0], [70.4, 4427.0], [70.5, 4450.0], [70.6, 4455.0], [70.7, 4457.0], [70.8, 4472.0], [70.9, 4485.0], [71.0, 4494.0], [71.1, 4499.0], [71.2, 4509.0], [71.3, 4520.0], [71.4, 4523.0], [71.5, 4528.0], [71.6, 4536.0], [71.7, 4554.0], [71.8, 4582.0], [71.9, 4588.0], [72.0, 4615.0], [72.1, 4629.0], [72.2, 4637.0], [72.3, 4641.0], [72.4, 4653.0], [72.5, 4661.0], [72.6, 4682.0], [72.7, 4710.0], [72.8, 4759.0], [72.9, 4787.0], [73.0, 4837.0], [73.1, 4854.0], [73.2, 4867.0], [73.3, 4868.0], [73.4, 4955.0], [73.5, 4999.0], [73.6, 5042.0], [73.7, 5070.0], [73.8, 5080.0], [73.9, 5283.0], [74.0, 5344.0], [74.1, 5347.0], [74.2, 5466.0], [74.3, 5582.0], [74.4, 5635.0], [74.5, 5706.0], [74.6, 5788.0], [74.7, 5847.0], [74.8, 5907.0], [74.9, 5935.0], [75.0, 6081.0], [75.1, 6287.0], [75.2, 6333.0], [75.3, 6456.0], [75.4, 6565.0], [75.5, 6769.0], [75.6, 6790.0], [75.7, 6843.0], [75.8, 6886.0], [75.9, 6936.0], [76.0, 6945.0], [76.1, 6978.0], [76.2, 7009.0], [76.3, 7018.0], [76.4, 7036.0], [76.5, 7068.0], [76.6, 7089.0], [76.7, 7153.0], [76.8, 7186.0], [76.9, 7210.0], [77.0, 7227.0], [77.1, 7241.0], [77.2, 7257.0], [77.3, 7290.0], [77.4, 7347.0], [77.5, 7353.0], [77.6, 7403.0], [77.7, 7433.0], [77.8, 7443.0], [77.9, 7483.0], [78.0, 7525.0], [78.1, 7551.0], [78.2, 7581.0], [78.3, 7595.0], [78.4, 7617.0], [78.5, 7629.0], [78.6, 7644.0], [78.7, 7655.0], [78.8, 7659.0], [78.9, 7668.0], [79.0, 7680.0], [79.1, 7692.0], [79.2, 7702.0], [79.3, 7708.0], [79.4, 7720.0], [79.5, 7743.0], [79.6, 7756.0], [79.7, 7756.0], [79.8, 7757.0], [79.9, 7761.0], [80.0, 7780.0], [80.1, 7788.0], [80.2, 7797.0], [80.3, 7800.0], [80.4, 7803.0], [80.5, 7804.0], [80.6, 7814.0], [80.7, 7831.0], [80.8, 7847.0], [80.9, 7852.0], [81.0, 7857.0], [81.1, 7872.0], [81.2, 7889.0], [81.3, 7890.0], [81.4, 7898.0], [81.5, 7907.0], [81.6, 7931.0], [81.7, 7941.0], [81.8, 7958.0], [81.9, 7961.0], [82.0, 7965.0], [82.1, 7988.0], [82.2, 8009.0], [82.3, 8018.0], [82.4, 8024.0], [82.5, 8025.0], [82.6, 8029.0], [82.7, 8040.0], [82.8, 8053.0], [82.9, 8057.0], [83.0, 8093.0], [83.1, 8099.0], [83.2, 8108.0], [83.3, 8125.0], [83.4, 8129.0], [83.5, 8134.0], [83.6, 8148.0], [83.7, 8161.0], [83.8, 8179.0], [83.9, 8185.0], [84.0, 8198.0], [84.1, 8201.0], [84.2, 8205.0], [84.3, 8212.0], [84.4, 8217.0], [84.5, 8241.0], [84.6, 8243.0], [84.7, 8251.0], [84.8, 8257.0], [84.9, 8261.0], [85.0, 8266.0], [85.1, 8287.0], [85.2, 8289.0], [85.3, 8292.0], [85.4, 8302.0], [85.5, 8309.0], [85.6, 8317.0], [85.7, 8326.0], [85.8, 8333.0], [85.9, 8343.0], [86.0, 8362.0], [86.1, 8369.0], [86.2, 8389.0], [86.3, 8399.0], [86.4, 8403.0], [86.5, 8417.0], [86.6, 8418.0], [86.7, 8426.0], [86.8, 8433.0], [86.9, 8434.0], [87.0, 8446.0], [87.1, 8451.0], [87.2, 8465.0], [87.3, 8472.0], [87.4, 8477.0], [87.5, 8478.0], [87.6, 8479.0], [87.7, 8491.0], [87.8, 8496.0], [87.9, 8503.0], [88.0, 8507.0], [88.1, 8515.0], [88.2, 8519.0], [88.3, 8528.0], [88.4, 8537.0], [88.5, 8545.0], [88.6, 8552.0], [88.7, 8559.0], [88.8, 8563.0], [88.9, 8564.0], [89.0, 8572.0], [89.1, 8577.0], [89.2, 8591.0], [89.3, 8599.0], [89.4, 8610.0], [89.5, 8626.0], [89.6, 8635.0], [89.7, 8659.0], [89.8, 8662.0], [89.9, 8664.0], [90.0, 8681.0], [90.1, 8685.0], [90.2, 8690.0], [90.3, 8695.0], [90.4, 8703.0], [90.5, 8713.0], [90.6, 8724.0], [90.7, 8724.0], [90.8, 8726.0], [90.9, 8728.0], [91.0, 8732.0], [91.1, 8749.0], [91.2, 8766.0], [91.3, 8782.0], [91.4, 8788.0], [91.5, 8792.0], [91.6, 8803.0], [91.7, 8810.0], [91.8, 8823.0], [91.9, 8828.0], [92.0, 8838.0], [92.1, 8867.0], [92.2, 8868.0], [92.3, 8872.0], [92.4, 8878.0], [92.5, 8891.0], [92.6, 8908.0], [92.7, 8921.0], [92.8, 8948.0], [92.9, 8952.0], [93.0, 8961.0], [93.1, 8966.0], [93.2, 8968.0], [93.3, 8975.0], [93.4, 8993.0], [93.5, 8998.0], [93.6, 9004.0], [93.7, 9017.0], [93.8, 9034.0], [93.9, 9044.0], [94.0, 9056.0], [94.1, 9064.0], [94.2, 9082.0], [94.3, 9091.0], [94.4, 9119.0], [94.5, 9129.0], [94.6, 9150.0], [94.7, 9167.0], [94.8, 9172.0], [94.9, 9180.0], [95.0, 9198.0], [95.1, 9208.0], [95.2, 9217.0], [95.3, 9235.0], [95.4, 9242.0], [95.5, 9259.0], [95.6, 9270.0], [95.7, 9290.0], [95.8, 9290.0], [95.9, 9296.0], [96.0, 9299.0], [96.1, 9303.0], [96.2, 9312.0], [96.3, 9312.0], [96.4, 9335.0], [96.5, 9352.0], [96.6, 9364.0], [96.7, 9397.0], [96.8, 9410.0], [96.9, 9419.0], [97.0, 9424.0], [97.1, 9464.0], [97.2, 9479.0], [97.3, 9494.0], [97.4, 9510.0], [97.5, 9522.0], [97.6, 9571.0], [97.7, 9586.0], [97.8, 9591.0], [97.9, 9600.0], [98.0, 9663.0], [98.1, 9686.0], [98.2, 9689.0], [98.3, 9696.0], [98.4, 9744.0], [98.5, 9755.0], [98.6, 9773.0], [98.7, 9802.0], [98.8, 9844.0], [98.9, 9859.0], [99.0, 9870.0], [99.1, 9898.0], [99.2, 9939.0], [99.3, 9962.0], [99.4, 10040.0], [99.5, 10100.0], [99.6, 10137.0], [99.7, 10171.0], [99.8, 10286.0], [99.9, 10505.0]], "isOverall": false, "label": "Post PROB", "isController": false}, {"data": [[0.0, 4.0], [0.1, 4.0], [0.2, 5.0], [0.3, 5.0], [0.4, 5.0], [0.5, 5.0], [0.6, 5.0], [0.7, 5.0], [0.8, 5.0], [0.9, 5.0], [1.0, 5.0], [1.1, 5.0], [1.2, 5.0], [1.3, 5.0], [1.4, 5.0], [1.5, 5.0], [1.6, 5.0], [1.7, 5.0], [1.8, 5.0], [1.9, 6.0], [2.0, 6.0], [2.1, 6.0], [2.2, 6.0], [2.3, 6.0], [2.4, 6.0], [2.5, 6.0], [2.6, 6.0], [2.7, 6.0], [2.8, 6.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 6.0], [3.3, 6.0], [3.4, 6.0], [3.5, 6.0], [3.6, 6.0], [3.7, 6.0], [3.8, 6.0], [3.9, 6.0], [4.0, 6.0], [4.1, 6.0], [4.2, 6.0], [4.3, 6.0], [4.4, 6.0], [4.5, 6.0], [4.6, 6.0], [4.7, 6.0], [4.8, 6.0], [4.9, 6.0], [5.0, 6.0], [5.1, 6.0], [5.2, 6.0], [5.3, 6.0], [5.4, 6.0], [5.5, 6.0], [5.6, 6.0], [5.7, 6.0], [5.8, 6.0], [5.9, 6.0], [6.0, 6.0], [6.1, 6.0], [6.2, 7.0], [6.3, 7.0], [6.4, 7.0], [6.5, 7.0], [6.6, 7.0], [6.7, 7.0], [6.8, 7.0], [6.9, 7.0], [7.0, 7.0], [7.1, 7.0], [7.2, 7.0], [7.3, 7.0], [7.4, 7.0], [7.5, 7.0], [7.6, 7.0], [7.7, 7.0], [7.8, 7.0], [7.9, 7.0], [8.0, 7.0], [8.1, 7.0], [8.2, 7.0], [8.3, 7.0], [8.4, 7.0], [8.5, 7.0], [8.6, 7.0], [8.7, 7.0], [8.8, 7.0], [8.9, 7.0], [9.0, 7.0], [9.1, 7.0], [9.2, 7.0], [9.3, 7.0], [9.4, 7.0], [9.5, 7.0], [9.6, 7.0], [9.7, 7.0], [9.8, 7.0], [9.9, 7.0], [10.0, 7.0], [10.1, 7.0], [10.2, 7.0], [10.3, 7.0], [10.4, 7.0], [10.5, 7.0], [10.6, 7.0], [10.7, 7.0], [10.8, 7.0], [10.9, 7.0], [11.0, 8.0], [11.1, 8.0], [11.2, 8.0], [11.3, 8.0], [11.4, 8.0], [11.5, 8.0], [11.6, 8.0], [11.7, 8.0], [11.8, 8.0], [11.9, 8.0], [12.0, 8.0], [12.1, 8.0], [12.2, 8.0], [12.3, 8.0], [12.4, 8.0], [12.5, 8.0], [12.6, 8.0], [12.7, 8.0], [12.8, 8.0], [12.9, 8.0], [13.0, 8.0], [13.1, 8.0], [13.2, 8.0], [13.3, 8.0], [13.4, 8.0], [13.5, 8.0], [13.6, 8.0], [13.7, 8.0], [13.8, 8.0], [13.9, 8.0], [14.0, 8.0], [14.1, 8.0], [14.2, 8.0], [14.3, 8.0], [14.4, 8.0], [14.5, 8.0], [14.6, 8.0], [14.7, 8.0], [14.8, 8.0], [14.9, 8.0], [15.0, 8.0], [15.1, 8.0], [15.2, 8.0], [15.3, 8.0], [15.4, 8.0], [15.5, 9.0], [15.6, 9.0], [15.7, 9.0], [15.8, 9.0], [15.9, 9.0], [16.0, 9.0], [16.1, 9.0], [16.2, 9.0], [16.3, 9.0], [16.4, 9.0], [16.5, 9.0], [16.6, 9.0], [16.7, 9.0], [16.8, 9.0], [16.9, 9.0], [17.0, 9.0], [17.1, 9.0], [17.2, 9.0], [17.3, 9.0], [17.4, 9.0], [17.5, 9.0], [17.6, 9.0], [17.7, 9.0], [17.8, 9.0], [17.9, 9.0], [18.0, 9.0], [18.1, 9.0], [18.2, 9.0], [18.3, 9.0], [18.4, 9.0], [18.5, 9.0], [18.6, 9.0], [18.7, 9.0], [18.8, 9.0], [18.9, 9.0], [19.0, 9.0], [19.1, 9.0], [19.2, 9.0], [19.3, 9.0], [19.4, 9.0], [19.5, 10.0], [19.6, 10.0], [19.7, 10.0], [19.8, 10.0], [19.9, 10.0], [20.0, 10.0], [20.1, 10.0], [20.2, 10.0], [20.3, 10.0], [20.4, 10.0], [20.5, 10.0], [20.6, 10.0], [20.7, 11.0], [20.8, 11.0], [20.9, 11.0], [21.0, 11.0], [21.1, 11.0], [21.2, 11.0], [21.3, 11.0], [21.4, 11.0], [21.5, 11.0], [21.6, 12.0], [21.7, 12.0], [21.8, 12.0], [21.9, 12.0], [22.0, 12.0], [22.1, 12.0], [22.2, 12.0], [22.3, 12.0], [22.4, 13.0], [22.5, 13.0], [22.6, 13.0], [22.7, 13.0], [22.8, 13.0], [22.9, 13.0], [23.0, 14.0], [23.1, 14.0], [23.2, 14.0], [23.3, 14.0], [23.4, 14.0], [23.5, 15.0], [23.6, 15.0], [23.7, 16.0], [23.8, 16.0], [23.9, 16.0], [24.0, 16.0], [24.1, 17.0], [24.2, 17.0], [24.3, 17.0], [24.4, 17.0], [24.5, 17.0], [24.6, 18.0], [24.7, 18.0], [24.8, 19.0], [24.9, 19.0], [25.0, 20.0], [25.1, 20.0], [25.2, 21.0], [25.3, 21.0], [25.4, 22.0], [25.5, 22.0], [25.6, 23.0], [25.7, 23.0], [25.8, 24.0], [25.9, 25.0], [26.0, 25.0], [26.1, 26.0], [26.2, 26.0], [26.3, 27.0], [26.4, 28.0], [26.5, 28.0], [26.6, 29.0], [26.7, 29.0], [26.8, 29.0], [26.9, 30.0], [27.0, 30.0], [27.1, 31.0], [27.2, 32.0], [27.3, 32.0], [27.4, 32.0], [27.5, 33.0], [27.6, 33.0], [27.7, 33.0], [27.8, 34.0], [27.9, 34.0], [28.0, 34.0], [28.1, 34.0], [28.2, 35.0], [28.3, 35.0], [28.4, 36.0], [28.5, 36.0], [28.6, 37.0], [28.7, 37.0], [28.8, 37.0], [28.9, 38.0], [29.0, 39.0], [29.1, 39.0], [29.2, 40.0], [29.3, 41.0], [29.4, 41.0], [29.5, 42.0], [29.6, 42.0], [29.7, 43.0], [29.8, 43.0], [29.9, 44.0], [30.0, 44.0], [30.1, 45.0], [30.2, 46.0], [30.3, 46.0], [30.4, 47.0], [30.5, 48.0], [30.6, 48.0], [30.7, 48.0], [30.8, 50.0], [30.9, 50.0], [31.0, 51.0], [31.1, 52.0], [31.2, 53.0], [31.3, 54.0], [31.4, 54.0], [31.5, 55.0], [31.6, 56.0], [31.7, 58.0], [31.8, 58.0], [31.9, 60.0], [32.0, 60.0], [32.1, 61.0], [32.2, 61.0], [32.3, 62.0], [32.4, 63.0], [32.5, 63.0], [32.6, 64.0], [32.7, 65.0], [32.8, 66.0], [32.9, 66.0], [33.0, 67.0], [33.1, 68.0], [33.2, 70.0], [33.3, 71.0], [33.4, 71.0], [33.5, 72.0], [33.6, 73.0], [33.7, 74.0], [33.8, 75.0], [33.9, 77.0], [34.0, 79.0], [34.1, 80.0], [34.2, 81.0], [34.3, 83.0], [34.4, 84.0], [34.5, 85.0], [34.6, 86.0], [34.7, 87.0], [34.8, 88.0], [34.9, 89.0], [35.0, 90.0], [35.1, 92.0], [35.2, 93.0], [35.3, 93.0], [35.4, 96.0], [35.5, 97.0], [35.6, 98.0], [35.7, 99.0], [35.8, 99.0], [35.9, 100.0], [36.0, 100.0], [36.1, 102.0], [36.2, 103.0], [36.3, 104.0], [36.4, 106.0], [36.5, 108.0], [36.6, 111.0], [36.7, 113.0], [36.8, 114.0], [36.9, 114.0], [37.0, 115.0], [37.1, 119.0], [37.2, 121.0], [37.3, 121.0], [37.4, 124.0], [37.5, 128.0], [37.6, 128.0], [37.7, 130.0], [37.8, 131.0], [37.9, 131.0], [38.0, 134.0], [38.1, 134.0], [38.2, 136.0], [38.3, 137.0], [38.4, 138.0], [38.5, 138.0], [38.6, 139.0], [38.7, 139.0], [38.8, 140.0], [38.9, 141.0], [39.0, 141.0], [39.1, 142.0], [39.2, 144.0], [39.3, 145.0], [39.4, 145.0], [39.5, 149.0], [39.6, 150.0], [39.7, 151.0], [39.8, 152.0], [39.9, 158.0], [40.0, 160.0], [40.1, 160.0], [40.2, 163.0], [40.3, 165.0], [40.4, 167.0], [40.5, 170.0], [40.6, 171.0], [40.7, 179.0], [40.8, 179.0], [40.9, 181.0], [41.0, 186.0], [41.1, 186.0], [41.2, 187.0], [41.3, 188.0], [41.4, 191.0], [41.5, 193.0], [41.6, 193.0], [41.7, 195.0], [41.8, 196.0], [41.9, 199.0], [42.0, 200.0], [42.1, 201.0], [42.2, 201.0], [42.3, 203.0], [42.4, 205.0], [42.5, 206.0], [42.6, 209.0], [42.7, 209.0], [42.8, 211.0], [42.9, 213.0], [43.0, 214.0], [43.1, 216.0], [43.2, 219.0], [43.3, 223.0], [43.4, 224.0], [43.5, 231.0], [43.6, 236.0], [43.7, 241.0], [43.8, 243.0], [43.9, 249.0], [44.0, 250.0], [44.1, 253.0], [44.2, 255.0], [44.3, 257.0], [44.4, 257.0], [44.5, 262.0], [44.6, 263.0], [44.7, 264.0], [44.8, 272.0], [44.9, 272.0], [45.0, 273.0], [45.1, 282.0], [45.2, 283.0], [45.3, 284.0], [45.4, 288.0], [45.5, 289.0], [45.6, 291.0], [45.7, 295.0], [45.8, 296.0], [45.9, 297.0], [46.0, 303.0], [46.1, 305.0], [46.2, 309.0], [46.3, 310.0], [46.4, 310.0], [46.5, 311.0], [46.6, 318.0], [46.7, 319.0], [46.8, 320.0], [46.9, 324.0], [47.0, 328.0], [47.1, 328.0], [47.2, 329.0], [47.3, 329.0], [47.4, 334.0], [47.5, 335.0], [47.6, 339.0], [47.7, 341.0], [47.8, 347.0], [47.9, 352.0], [48.0, 358.0], [48.1, 362.0], [48.2, 368.0], [48.3, 370.0], [48.4, 374.0], [48.5, 374.0], [48.6, 376.0], [48.7, 378.0], [48.8, 380.0], [48.9, 382.0], [49.0, 383.0], [49.1, 388.0], [49.2, 392.0], [49.3, 400.0], [49.4, 401.0], [49.5, 403.0], [49.6, 405.0], [49.7, 406.0], [49.8, 408.0], [49.9, 411.0], [50.0, 417.0], [50.1, 418.0], [50.2, 421.0], [50.3, 422.0], [50.4, 427.0], [50.5, 431.0], [50.6, 433.0], [50.7, 437.0], [50.8, 438.0], [50.9, 441.0], [51.0, 443.0], [51.1, 445.0], [51.2, 446.0], [51.3, 453.0], [51.4, 456.0], [51.5, 461.0], [51.6, 462.0], [51.7, 466.0], [51.8, 467.0], [51.9, 470.0], [52.0, 472.0], [52.1, 473.0], [52.2, 474.0], [52.3, 475.0], [52.4, 478.0], [52.5, 479.0], [52.6, 479.0], [52.7, 483.0], [52.8, 486.0], [52.9, 487.0], [53.0, 490.0], [53.1, 493.0], [53.2, 493.0], [53.3, 494.0], [53.4, 495.0], [53.5, 498.0], [53.6, 501.0], [53.7, 503.0], [53.8, 508.0], [53.9, 511.0], [54.0, 514.0], [54.1, 515.0], [54.2, 516.0], [54.3, 517.0], [54.4, 518.0], [54.5, 523.0], [54.6, 525.0], [54.7, 527.0], [54.8, 528.0], [54.9, 532.0], [55.0, 535.0], [55.1, 538.0], [55.2, 538.0], [55.3, 541.0], [55.4, 545.0], [55.5, 546.0], [55.6, 549.0], [55.7, 551.0], [55.8, 552.0], [55.9, 553.0], [56.0, 557.0], [56.1, 559.0], [56.2, 562.0], [56.3, 565.0], [56.4, 567.0], [56.5, 568.0], [56.6, 569.0], [56.7, 570.0], [56.8, 572.0], [56.9, 572.0], [57.0, 574.0], [57.1, 574.0], [57.2, 577.0], [57.3, 581.0], [57.4, 583.0], [57.5, 584.0], [57.6, 586.0], [57.7, 588.0], [57.8, 592.0], [57.9, 593.0], [58.0, 594.0], [58.1, 596.0], [58.2, 599.0], [58.3, 602.0], [58.4, 603.0], [58.5, 608.0], [58.6, 611.0], [58.7, 614.0], [58.8, 616.0], [58.9, 617.0], [59.0, 618.0], [59.1, 618.0], [59.2, 620.0], [59.3, 621.0], [59.4, 621.0], [59.5, 622.0], [59.6, 627.0], [59.7, 630.0], [59.8, 631.0], [59.9, 631.0], [60.0, 632.0], [60.1, 635.0], [60.2, 636.0], [60.3, 639.0], [60.4, 643.0], [60.5, 644.0], [60.6, 646.0], [60.7, 646.0], [60.8, 647.0], [60.9, 648.0], [61.0, 648.0], [61.1, 650.0], [61.2, 650.0], [61.3, 651.0], [61.4, 651.0], [61.5, 653.0], [61.6, 658.0], [61.7, 658.0], [61.8, 659.0], [61.9, 662.0], [62.0, 663.0], [62.1, 664.0], [62.2, 665.0], [62.3, 668.0], [62.4, 669.0], [62.5, 671.0], [62.6, 672.0], [62.7, 673.0], [62.8, 675.0], [62.9, 675.0], [63.0, 676.0], [63.1, 679.0], [63.2, 679.0], [63.3, 681.0], [63.4, 683.0], [63.5, 685.0], [63.6, 688.0], [63.7, 690.0], [63.8, 692.0], [63.9, 695.0], [64.0, 699.0], [64.1, 703.0], [64.2, 704.0], [64.3, 704.0], [64.4, 705.0], [64.5, 706.0], [64.6, 708.0], [64.7, 713.0], [64.8, 714.0], [64.9, 716.0], [65.0, 717.0], [65.1, 719.0], [65.2, 721.0], [65.3, 722.0], [65.4, 722.0], [65.5, 724.0], [65.6, 726.0], [65.7, 728.0], [65.8, 729.0], [65.9, 732.0], [66.0, 733.0], [66.1, 737.0], [66.2, 738.0], [66.3, 738.0], [66.4, 739.0], [66.5, 740.0], [66.6, 743.0], [66.7, 744.0], [66.8, 746.0], [66.9, 746.0], [67.0, 747.0], [67.1, 749.0], [67.2, 753.0], [67.3, 754.0], [67.4, 755.0], [67.5, 757.0], [67.6, 760.0], [67.7, 762.0], [67.8, 763.0], [67.9, 764.0], [68.0, 765.0], [68.1, 766.0], [68.2, 768.0], [68.3, 769.0], [68.4, 770.0], [68.5, 771.0], [68.6, 773.0], [68.7, 775.0], [68.8, 776.0], [68.9, 776.0], [69.0, 777.0], [69.1, 777.0], [69.2, 779.0], [69.3, 780.0], [69.4, 781.0], [69.5, 782.0], [69.6, 783.0], [69.7, 784.0], [69.8, 787.0], [69.9, 787.0], [70.0, 789.0], [70.1, 790.0], [70.2, 791.0], [70.3, 793.0], [70.4, 794.0], [70.5, 796.0], [70.6, 796.0], [70.7, 797.0], [70.8, 797.0], [70.9, 798.0], [71.0, 799.0], [71.1, 802.0], [71.2, 803.0], [71.3, 805.0], [71.4, 805.0], [71.5, 807.0], [71.6, 808.0], [71.7, 811.0], [71.8, 811.0], [71.9, 812.0], [72.0, 814.0], [72.1, 815.0], [72.2, 816.0], [72.3, 819.0], [72.4, 819.0], [72.5, 820.0], [72.6, 821.0], [72.7, 823.0], [72.8, 824.0], [72.9, 827.0], [73.0, 829.0], [73.1, 832.0], [73.2, 832.0], [73.3, 834.0], [73.4, 836.0], [73.5, 838.0], [73.6, 840.0], [73.7, 841.0], [73.8, 841.0], [73.9, 843.0], [74.0, 847.0], [74.1, 849.0], [74.2, 850.0], [74.3, 852.0], [74.4, 854.0], [74.5, 855.0], [74.6, 856.0], [74.7, 856.0], [74.8, 856.0], [74.9, 859.0], [75.0, 861.0], [75.1, 865.0], [75.2, 865.0], [75.3, 867.0], [75.4, 867.0], [75.5, 867.0], [75.6, 868.0], [75.7, 869.0], [75.8, 869.0], [75.9, 870.0], [76.0, 872.0], [76.1, 873.0], [76.2, 873.0], [76.3, 875.0], [76.4, 877.0], [76.5, 877.0], [76.6, 878.0], [76.7, 881.0], [76.8, 882.0], [76.9, 884.0], [77.0, 884.0], [77.1, 885.0], [77.2, 888.0], [77.3, 890.0], [77.4, 890.0], [77.5, 890.0], [77.6, 892.0], [77.7, 893.0], [77.8, 895.0], [77.9, 895.0], [78.0, 897.0], [78.1, 899.0], [78.2, 904.0], [78.3, 905.0], [78.4, 905.0], [78.5, 906.0], [78.6, 909.0], [78.7, 910.0], [78.8, 911.0], [78.9, 913.0], [79.0, 914.0], [79.1, 916.0], [79.2, 917.0], [79.3, 918.0], [79.4, 921.0], [79.5, 927.0], [79.6, 928.0], [79.7, 929.0], [79.8, 929.0], [79.9, 930.0], [80.0, 931.0], [80.1, 933.0], [80.2, 934.0], [80.3, 935.0], [80.4, 936.0], [80.5, 937.0], [80.6, 940.0], [80.7, 941.0], [80.8, 942.0], [80.9, 945.0], [81.0, 946.0], [81.1, 948.0], [81.2, 949.0], [81.3, 951.0], [81.4, 952.0], [81.5, 954.0], [81.6, 956.0], [81.7, 958.0], [81.8, 959.0], [81.9, 960.0], [82.0, 961.0], [82.1, 962.0], [82.2, 965.0], [82.3, 966.0], [82.4, 968.0], [82.5, 969.0], [82.6, 971.0], [82.7, 972.0], [82.8, 974.0], [82.9, 975.0], [83.0, 978.0], [83.1, 979.0], [83.2, 982.0], [83.3, 982.0], [83.4, 987.0], [83.5, 990.0], [83.6, 992.0], [83.7, 996.0], [83.8, 998.0], [83.9, 1000.0], [84.0, 1001.0], [84.1, 1002.0], [84.2, 1007.0], [84.3, 1007.0], [84.4, 1010.0], [84.5, 1010.0], [84.6, 1012.0], [84.7, 1014.0], [84.8, 1015.0], [84.9, 1017.0], [85.0, 1019.0], [85.1, 1019.0], [85.2, 1021.0], [85.3, 1027.0], [85.4, 1029.0], [85.5, 1030.0], [85.6, 1031.0], [85.7, 1032.0], [85.8, 1032.0], [85.9, 1034.0], [86.0, 1036.0], [86.1, 1038.0], [86.2, 1039.0], [86.3, 1042.0], [86.4, 1042.0], [86.5, 1046.0], [86.6, 1048.0], [86.7, 1052.0], [86.8, 1052.0], [86.9, 1058.0], [87.0, 1060.0], [87.1, 1061.0], [87.2, 1067.0], [87.3, 1068.0], [87.4, 1069.0], [87.5, 1072.0], [87.6, 1076.0], [87.7, 1078.0], [87.8, 1079.0], [87.9, 1081.0], [88.0, 1082.0], [88.1, 1085.0], [88.2, 1088.0], [88.3, 1088.0], [88.4, 1091.0], [88.5, 1092.0], [88.6, 1095.0], [88.7, 1097.0], [88.8, 1101.0], [88.9, 1103.0], [89.0, 1104.0], [89.1, 1107.0], [89.2, 1110.0], [89.3, 1112.0], [89.4, 1113.0], [89.5, 1113.0], [89.6, 1116.0], [89.7, 1118.0], [89.8, 1119.0], [89.9, 1121.0], [90.0, 1124.0], [90.1, 1125.0], [90.2, 1127.0], [90.3, 1127.0], [90.4, 1129.0], [90.5, 1132.0], [90.6, 1133.0], [90.7, 1138.0], [90.8, 1139.0], [90.9, 1143.0], [91.0, 1146.0], [91.1, 1152.0], [91.2, 1159.0], [91.3, 1160.0], [91.4, 1163.0], [91.5, 1164.0], [91.6, 1165.0], [91.7, 1166.0], [91.8, 1168.0], [91.9, 1171.0], [92.0, 1173.0], [92.1, 1176.0], [92.2, 1179.0], [92.3, 1181.0], [92.4, 1184.0], [92.5, 1188.0], [92.6, 1188.0], [92.7, 1189.0], [92.8, 1194.0], [92.9, 1199.0], [93.0, 1201.0], [93.1, 1204.0], [93.2, 1208.0], [93.3, 1209.0], [93.4, 1211.0], [93.5, 1214.0], [93.6, 1216.0], [93.7, 1221.0], [93.8, 1223.0], [93.9, 1226.0], [94.0, 1230.0], [94.1, 1235.0], [94.2, 1240.0], [94.3, 1241.0], [94.4, 1242.0], [94.5, 1245.0], [94.6, 1245.0], [94.7, 1249.0], [94.8, 1250.0], [94.9, 1255.0], [95.0, 1256.0], [95.1, 1267.0], [95.2, 1268.0], [95.3, 1271.0], [95.4, 1275.0], [95.5, 1276.0], [95.6, 1279.0], [95.7, 1281.0], [95.8, 1289.0], [95.9, 1293.0], [96.0, 1296.0], [96.1, 1324.0], [96.2, 1327.0], [96.3, 1330.0], [96.4, 1335.0], [96.5, 1339.0], [96.6, 1344.0], [96.7, 1351.0], [96.8, 1357.0], [96.9, 1357.0], [97.0, 1364.0], [97.1, 1385.0], [97.2, 1391.0], [97.3, 1393.0], [97.4, 1405.0], [97.5, 1409.0], [97.6, 1411.0], [97.7, 1425.0], [97.8, 1427.0], [97.9, 1428.0], [98.0, 1442.0], [98.1, 1448.0], [98.2, 1469.0], [98.3, 1480.0], [98.4, 1499.0], [98.5, 1504.0], [98.6, 1520.0], [98.7, 1523.0], [98.8, 1529.0], [98.9, 1533.0], [99.0, 1545.0], [99.1, 1559.0], [99.2, 1565.0], [99.3, 1574.0], [99.4, 1583.0], [99.5, 1609.0], [99.6, 1628.0], [99.7, 1680.0], [99.8, 1702.0], [99.9, 1742.0], [100.0, 1999.0]], "isOverall": false, "label": "Delete PROB", "isController": false}, {"data": [[0.0, 3.0], [0.1, 3.0], [0.2, 3.0], [0.3, 4.0], [0.4, 4.0], [0.5, 4.0], [0.6, 4.0], [0.7, 4.0], [0.8, 4.0], [0.9, 4.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 4.0], [2.2, 4.0], [2.3, 4.0], [2.4, 4.0], [2.5, 4.0], [2.6, 4.0], [2.7, 4.0], [2.8, 4.0], [2.9, 4.0], [3.0, 4.0], [3.1, 4.0], [3.2, 4.0], [3.3, 4.0], [3.4, 4.0], [3.5, 4.0], [3.6, 4.0], [3.7, 4.0], [3.8, 4.0], [3.9, 5.0], [4.0, 5.0], [4.1, 5.0], [4.2, 5.0], [4.3, 5.0], [4.4, 5.0], [4.5, 5.0], [4.6, 5.0], [4.7, 5.0], [4.8, 5.0], [4.9, 5.0], [5.0, 5.0], [5.1, 5.0], [5.2, 5.0], [5.3, 5.0], [5.4, 5.0], [5.5, 5.0], [5.6, 5.0], [5.7, 5.0], [5.8, 5.0], [5.9, 5.0], [6.0, 5.0], [6.1, 5.0], [6.2, 5.0], [6.3, 5.0], [6.4, 5.0], [6.5, 5.0], [6.6, 5.0], [6.7, 5.0], [6.8, 5.0], [6.9, 5.0], [7.0, 5.0], [7.1, 5.0], [7.2, 5.0], [7.3, 5.0], [7.4, 5.0], [7.5, 5.0], [7.6, 5.0], [7.7, 5.0], [7.8, 5.0], [7.9, 5.0], [8.0, 5.0], [8.1, 5.0], [8.2, 5.0], [8.3, 5.0], [8.4, 5.0], [8.5, 5.0], [8.6, 5.0], [8.7, 5.0], [8.8, 5.0], [8.9, 5.0], [9.0, 5.0], [9.1, 5.0], [9.2, 5.0], [9.3, 5.0], [9.4, 5.0], [9.5, 6.0], [9.6, 6.0], [9.7, 6.0], [9.8, 6.0], [9.9, 6.0], [10.0, 6.0], [10.1, 6.0], [10.2, 6.0], [10.3, 6.0], [10.4, 6.0], [10.5, 6.0], [10.6, 6.0], [10.7, 6.0], [10.8, 6.0], [10.9, 6.0], [11.0, 6.0], [11.1, 6.0], [11.2, 6.0], [11.3, 6.0], [11.4, 6.0], [11.5, 6.0], [11.6, 6.0], [11.7, 6.0], [11.8, 6.0], [11.9, 6.0], [12.0, 6.0], [12.1, 6.0], [12.2, 6.0], [12.3, 6.0], [12.4, 6.0], [12.5, 6.0], [12.6, 6.0], [12.7, 6.0], [12.8, 6.0], [12.9, 6.0], [13.0, 6.0], [13.1, 6.0], [13.2, 6.0], [13.3, 6.0], [13.4, 6.0], [13.5, 6.0], [13.6, 6.0], [13.7, 6.0], [13.8, 6.0], [13.9, 6.0], [14.0, 6.0], [14.1, 6.0], [14.2, 6.0], [14.3, 6.0], [14.4, 6.0], [14.5, 7.0], [14.6, 7.0], [14.7, 7.0], [14.8, 7.0], [14.9, 7.0], [15.0, 7.0], [15.1, 7.0], [15.2, 7.0], [15.3, 7.0], [15.4, 7.0], [15.5, 7.0], [15.6, 7.0], [15.7, 7.0], [15.8, 7.0], [15.9, 7.0], [16.0, 7.0], [16.1, 7.0], [16.2, 7.0], [16.3, 7.0], [16.4, 7.0], [16.5, 7.0], [16.6, 7.0], [16.7, 7.0], [16.8, 7.0], [16.9, 7.0], [17.0, 7.0], [17.1, 7.0], [17.2, 7.0], [17.3, 7.0], [17.4, 7.0], [17.5, 8.0], [17.6, 8.0], [17.7, 8.0], [17.8, 8.0], [17.9, 8.0], [18.0, 8.0], [18.1, 8.0], [18.2, 8.0], [18.3, 8.0], [18.4, 8.0], [18.5, 8.0], [18.6, 8.0], [18.7, 8.0], [18.8, 9.0], [18.9, 9.0], [19.0, 9.0], [19.1, 9.0], [19.2, 9.0], [19.3, 9.0], [19.4, 9.0], [19.5, 9.0], [19.6, 10.0], [19.7, 10.0], [19.8, 10.0], [19.9, 10.0], [20.0, 10.0], [20.1, 11.0], [20.2, 11.0], [20.3, 11.0], [20.4, 12.0], [20.5, 12.0], [20.6, 12.0], [20.7, 13.0], [20.8, 13.0], [20.9, 13.0], [21.0, 13.0], [21.1, 13.0], [21.2, 13.0], [21.3, 14.0], [21.4, 14.0], [21.5, 14.0], [21.6, 14.0], [21.7, 14.0], [21.8, 15.0], [21.9, 15.0], [22.0, 15.0], [22.1, 15.0], [22.2, 16.0], [22.3, 16.0], [22.4, 16.0], [22.5, 17.0], [22.6, 17.0], [22.7, 17.0], [22.8, 18.0], [22.9, 18.0], [23.0, 19.0], [23.1, 19.0], [23.2, 20.0], [23.3, 20.0], [23.4, 21.0], [23.5, 21.0], [23.6, 21.0], [23.7, 22.0], [23.8, 22.0], [23.9, 22.0], [24.0, 22.0], [24.1, 23.0], [24.2, 23.0], [24.3, 24.0], [24.4, 25.0], [24.5, 25.0], [24.6, 26.0], [24.7, 26.0], [24.8, 27.0], [24.9, 27.0], [25.0, 28.0], [25.1, 29.0], [25.2, 29.0], [25.3, 29.0], [25.4, 29.0], [25.5, 30.0], [25.6, 31.0], [25.7, 31.0], [25.8, 31.0], [25.9, 32.0], [26.0, 32.0], [26.1, 33.0], [26.2, 33.0], [26.3, 34.0], [26.4, 34.0], [26.5, 35.0], [26.6, 35.0], [26.7, 36.0], [26.8, 36.0], [26.9, 38.0], [27.0, 41.0], [27.1, 42.0], [27.2, 42.0], [27.3, 43.0], [27.4, 44.0], [27.5, 44.0], [27.6, 45.0], [27.7, 46.0], [27.8, 48.0], [27.9, 49.0], [28.0, 50.0], [28.1, 50.0], [28.2, 51.0], [28.3, 51.0], [28.4, 52.0], [28.5, 53.0], [28.6, 53.0], [28.7, 53.0], [28.8, 55.0], [28.9, 56.0], [29.0, 57.0], [29.1, 57.0], [29.2, 58.0], [29.3, 59.0], [29.4, 62.0], [29.5, 62.0], [29.6, 62.0], [29.7, 63.0], [29.8, 63.0], [29.9, 64.0], [30.0, 66.0], [30.1, 68.0], [30.2, 69.0], [30.3, 72.0], [30.4, 73.0], [30.5, 73.0], [30.6, 73.0], [30.7, 74.0], [30.8, 74.0], [30.9, 77.0], [31.0, 78.0], [31.1, 80.0], [31.2, 81.0], [31.3, 84.0], [31.4, 85.0], [31.5, 85.0], [31.6, 86.0], [31.7, 86.0], [31.8, 91.0], [31.9, 92.0], [32.0, 93.0], [32.1, 93.0], [32.2, 95.0], [32.3, 97.0], [32.4, 98.0], [32.5, 99.0], [32.6, 100.0], [32.7, 101.0], [32.8, 101.0], [32.9, 101.0], [33.0, 102.0], [33.1, 103.0], [33.2, 105.0], [33.3, 106.0], [33.4, 107.0], [33.5, 109.0], [33.6, 109.0], [33.7, 110.0], [33.8, 111.0], [33.9, 115.0], [34.0, 115.0], [34.1, 115.0], [34.2, 117.0], [34.3, 118.0], [34.4, 119.0], [34.5, 121.0], [34.6, 123.0], [34.7, 125.0], [34.8, 126.0], [34.9, 127.0], [35.0, 128.0], [35.1, 130.0], [35.2, 130.0], [35.3, 132.0], [35.4, 133.0], [35.5, 135.0], [35.6, 135.0], [35.7, 136.0], [35.8, 139.0], [35.9, 140.0], [36.0, 141.0], [36.1, 145.0], [36.2, 150.0], [36.3, 150.0], [36.4, 151.0], [36.5, 152.0], [36.6, 152.0], [36.7, 153.0], [36.8, 153.0], [36.9, 158.0], [37.0, 159.0], [37.1, 163.0], [37.2, 164.0], [37.3, 167.0], [37.4, 169.0], [37.5, 170.0], [37.6, 171.0], [37.7, 174.0], [37.8, 175.0], [37.9, 176.0], [38.0, 180.0], [38.1, 180.0], [38.2, 180.0], [38.3, 181.0], [38.4, 184.0], [38.5, 184.0], [38.6, 185.0], [38.7, 189.0], [38.8, 192.0], [38.9, 194.0], [39.0, 196.0], [39.1, 197.0], [39.2, 200.0], [39.3, 200.0], [39.4, 203.0], [39.5, 206.0], [39.6, 207.0], [39.7, 209.0], [39.8, 210.0], [39.9, 213.0], [40.0, 215.0], [40.1, 218.0], [40.2, 218.0], [40.3, 220.0], [40.4, 221.0], [40.5, 226.0], [40.6, 226.0], [40.7, 227.0], [40.8, 229.0], [40.9, 230.0], [41.0, 234.0], [41.1, 238.0], [41.2, 239.0], [41.3, 241.0], [41.4, 244.0], [41.5, 244.0], [41.6, 245.0], [41.7, 246.0], [41.8, 246.0], [41.9, 247.0], [42.0, 248.0], [42.1, 249.0], [42.2, 250.0], [42.3, 252.0], [42.4, 254.0], [42.5, 255.0], [42.6, 262.0], [42.7, 262.0], [42.8, 263.0], [42.9, 264.0], [43.0, 265.0], [43.1, 267.0], [43.2, 267.0], [43.3, 269.0], [43.4, 270.0], [43.5, 271.0], [43.6, 272.0], [43.7, 273.0], [43.8, 275.0], [43.9, 276.0], [44.0, 278.0], [44.1, 280.0], [44.2, 285.0], [44.3, 287.0], [44.4, 289.0], [44.5, 291.0], [44.6, 292.0], [44.7, 295.0], [44.8, 296.0], [44.9, 296.0], [45.0, 297.0], [45.1, 298.0], [45.2, 302.0], [45.3, 304.0], [45.4, 307.0], [45.5, 307.0], [45.6, 311.0], [45.7, 312.0], [45.8, 314.0], [45.9, 315.0], [46.0, 317.0], [46.1, 320.0], [46.2, 321.0], [46.3, 322.0], [46.4, 324.0], [46.5, 326.0], [46.6, 326.0], [46.7, 327.0], [46.8, 330.0], [46.9, 330.0], [47.0, 332.0], [47.1, 336.0], [47.2, 339.0], [47.3, 341.0], [47.4, 341.0], [47.5, 343.0], [47.6, 344.0], [47.7, 346.0], [47.8, 347.0], [47.9, 348.0], [48.0, 349.0], [48.1, 351.0], [48.2, 353.0], [48.3, 355.0], [48.4, 356.0], [48.5, 357.0], [48.6, 361.0], [48.7, 363.0], [48.8, 364.0], [48.9, 366.0], [49.0, 366.0], [49.1, 369.0], [49.2, 371.0], [49.3, 372.0], [49.4, 376.0], [49.5, 377.0], [49.6, 379.0], [49.7, 382.0], [49.8, 382.0], [49.9, 383.0], [50.0, 387.0], [50.1, 387.0], [50.2, 388.0], [50.3, 389.0], [50.4, 392.0], [50.5, 392.0], [50.6, 392.0], [50.7, 392.0], [50.8, 394.0], [50.9, 396.0], [51.0, 397.0], [51.1, 397.0], [51.2, 399.0], [51.3, 400.0], [51.4, 405.0], [51.5, 405.0], [51.6, 406.0], [51.7, 406.0], [51.8, 407.0], [51.9, 409.0], [52.0, 411.0], [52.1, 412.0], [52.2, 413.0], [52.3, 413.0], [52.4, 414.0], [52.5, 415.0], [52.6, 419.0], [52.7, 420.0], [52.8, 422.0], [52.9, 423.0], [53.0, 425.0], [53.1, 426.0], [53.2, 427.0], [53.3, 429.0], [53.4, 429.0], [53.5, 430.0], [53.6, 432.0], [53.7, 432.0], [53.8, 434.0], [53.9, 434.0], [54.0, 435.0], [54.1, 436.0], [54.2, 438.0], [54.3, 439.0], [54.4, 440.0], [54.5, 442.0], [54.6, 445.0], [54.7, 448.0], [54.8, 450.0], [54.9, 451.0], [55.0, 452.0], [55.1, 454.0], [55.2, 456.0], [55.3, 457.0], [55.4, 458.0], [55.5, 459.0], [55.6, 460.0], [55.7, 461.0], [55.8, 464.0], [55.9, 464.0], [56.0, 466.0], [56.1, 467.0], [56.2, 469.0], [56.3, 471.0], [56.4, 472.0], [56.5, 473.0], [56.6, 473.0], [56.7, 474.0], [56.8, 476.0], [56.9, 477.0], [57.0, 477.0], [57.1, 478.0], [57.2, 480.0], [57.3, 483.0], [57.4, 483.0], [57.5, 488.0], [57.6, 488.0], [57.7, 488.0], [57.8, 489.0], [57.9, 490.0], [58.0, 490.0], [58.1, 490.0], [58.2, 493.0], [58.3, 493.0], [58.4, 494.0], [58.5, 495.0], [58.6, 496.0], [58.7, 500.0], [58.8, 500.0], [58.9, 501.0], [59.0, 502.0], [59.1, 503.0], [59.2, 503.0], [59.3, 504.0], [59.4, 505.0], [59.5, 505.0], [59.6, 506.0], [59.7, 506.0], [59.8, 506.0], [59.9, 507.0], [60.0, 507.0], [60.1, 510.0], [60.2, 511.0], [60.3, 513.0], [60.4, 514.0], [60.5, 514.0], [60.6, 516.0], [60.7, 517.0], [60.8, 518.0], [60.9, 518.0], [61.0, 520.0], [61.1, 521.0], [61.2, 521.0], [61.3, 521.0], [61.4, 522.0], [61.5, 523.0], [61.6, 523.0], [61.7, 523.0], [61.8, 524.0], [61.9, 527.0], [62.0, 529.0], [62.1, 529.0], [62.2, 531.0], [62.3, 532.0], [62.4, 533.0], [62.5, 535.0], [62.6, 536.0], [62.7, 536.0], [62.8, 536.0], [62.9, 538.0], [63.0, 538.0], [63.1, 540.0], [63.2, 540.0], [63.3, 541.0], [63.4, 541.0], [63.5, 542.0], [63.6, 543.0], [63.7, 543.0], [63.8, 544.0], [63.9, 544.0], [64.0, 545.0], [64.1, 546.0], [64.2, 546.0], [64.3, 548.0], [64.4, 549.0], [64.5, 551.0], [64.6, 552.0], [64.7, 553.0], [64.8, 554.0], [64.9, 554.0], [65.0, 555.0], [65.1, 556.0], [65.2, 556.0], [65.3, 556.0], [65.4, 558.0], [65.5, 559.0], [65.6, 559.0], [65.7, 561.0], [65.8, 562.0], [65.9, 563.0], [66.0, 564.0], [66.1, 566.0], [66.2, 566.0], [66.3, 567.0], [66.4, 569.0], [66.5, 569.0], [66.6, 570.0], [66.7, 573.0], [66.8, 574.0], [66.9, 574.0], [67.0, 575.0], [67.1, 575.0], [67.2, 576.0], [67.3, 576.0], [67.4, 577.0], [67.5, 577.0], [67.6, 580.0], [67.7, 581.0], [67.8, 583.0], [67.9, 584.0], [68.0, 585.0], [68.1, 586.0], [68.2, 586.0], [68.3, 587.0], [68.4, 588.0], [68.5, 589.0], [68.6, 589.0], [68.7, 590.0], [68.8, 592.0], [68.9, 593.0], [69.0, 595.0], [69.1, 596.0], [69.2, 596.0], [69.3, 597.0], [69.4, 598.0], [69.5, 600.0], [69.6, 601.0], [69.7, 601.0], [69.8, 603.0], [69.9, 605.0], [70.0, 606.0], [70.1, 606.0], [70.2, 607.0], [70.3, 610.0], [70.4, 611.0], [70.5, 612.0], [70.6, 615.0], [70.7, 616.0], [70.8, 617.0], [70.9, 618.0], [71.0, 619.0], [71.1, 619.0], [71.2, 620.0], [71.3, 621.0], [71.4, 621.0], [71.5, 621.0], [71.6, 621.0], [71.7, 622.0], [71.8, 624.0], [71.9, 625.0], [72.0, 626.0], [72.1, 626.0], [72.2, 627.0], [72.3, 627.0], [72.4, 628.0], [72.5, 628.0], [72.6, 629.0], [72.7, 630.0], [72.8, 632.0], [72.9, 632.0], [73.0, 634.0], [73.1, 635.0], [73.2, 637.0], [73.3, 638.0], [73.4, 639.0], [73.5, 641.0], [73.6, 644.0], [73.7, 644.0], [73.8, 646.0], [73.9, 648.0], [74.0, 648.0], [74.1, 649.0], [74.2, 650.0], [74.3, 652.0], [74.4, 652.0], [74.5, 654.0], [74.6, 654.0], [74.7, 655.0], [74.8, 655.0], [74.9, 657.0], [75.0, 657.0], [75.1, 657.0], [75.2, 658.0], [75.3, 658.0], [75.4, 660.0], [75.5, 660.0], [75.6, 662.0], [75.7, 662.0], [75.8, 663.0], [75.9, 664.0], [76.0, 665.0], [76.1, 666.0], [76.2, 667.0], [76.3, 670.0], [76.4, 671.0], [76.5, 674.0], [76.6, 675.0], [76.7, 676.0], [76.8, 676.0], [76.9, 679.0], [77.0, 679.0], [77.1, 680.0], [77.2, 680.0], [77.3, 681.0], [77.4, 681.0], [77.5, 683.0], [77.6, 684.0], [77.7, 687.0], [77.8, 687.0], [77.9, 688.0], [78.0, 689.0], [78.1, 689.0], [78.2, 690.0], [78.3, 691.0], [78.4, 692.0], [78.5, 694.0], [78.6, 695.0], [78.7, 696.0], [78.8, 697.0], [78.9, 697.0], [79.0, 699.0], [79.1, 699.0], [79.2, 700.0], [79.3, 702.0], [79.4, 704.0], [79.5, 705.0], [79.6, 707.0], [79.7, 708.0], [79.8, 709.0], [79.9, 710.0], [80.0, 711.0], [80.1, 713.0], [80.2, 714.0], [80.3, 715.0], [80.4, 717.0], [80.5, 718.0], [80.6, 719.0], [80.7, 721.0], [80.8, 723.0], [80.9, 726.0], [81.0, 728.0], [81.1, 729.0], [81.2, 729.0], [81.3, 731.0], [81.4, 731.0], [81.5, 734.0], [81.6, 734.0], [81.7, 735.0], [81.8, 736.0], [81.9, 737.0], [82.0, 738.0], [82.1, 739.0], [82.2, 740.0], [82.3, 741.0], [82.4, 742.0], [82.5, 742.0], [82.6, 742.0], [82.7, 744.0], [82.8, 747.0], [82.9, 747.0], [83.0, 748.0], [83.1, 750.0], [83.2, 751.0], [83.3, 754.0], [83.4, 755.0], [83.5, 759.0], [83.6, 759.0], [83.7, 760.0], [83.8, 762.0], [83.9, 764.0], [84.0, 766.0], [84.1, 767.0], [84.2, 768.0], [84.3, 770.0], [84.4, 771.0], [84.5, 772.0], [84.6, 773.0], [84.7, 773.0], [84.8, 774.0], [84.9, 775.0], [85.0, 776.0], [85.1, 777.0], [85.2, 778.0], [85.3, 778.0], [85.4, 780.0], [85.5, 784.0], [85.6, 788.0], [85.7, 789.0], [85.8, 792.0], [85.9, 793.0], [86.0, 794.0], [86.1, 796.0], [86.2, 801.0], [86.3, 801.0], [86.4, 803.0], [86.5, 804.0], [86.6, 806.0], [86.7, 807.0], [86.8, 809.0], [86.9, 810.0], [87.0, 811.0], [87.1, 812.0], [87.2, 813.0], [87.3, 814.0], [87.4, 816.0], [87.5, 818.0], [87.6, 820.0], [87.7, 820.0], [87.8, 821.0], [87.9, 822.0], [88.0, 823.0], [88.1, 825.0], [88.2, 826.0], [88.3, 827.0], [88.4, 830.0], [88.5, 832.0], [88.6, 834.0], [88.7, 836.0], [88.8, 837.0], [88.9, 838.0], [89.0, 840.0], [89.1, 840.0], [89.2, 845.0], [89.3, 847.0], [89.4, 849.0], [89.5, 851.0], [89.6, 852.0], [89.7, 854.0], [89.8, 855.0], [89.9, 857.0], [90.0, 859.0], [90.1, 860.0], [90.2, 860.0], [90.3, 865.0], [90.4, 866.0], [90.5, 866.0], [90.6, 867.0], [90.7, 869.0], [90.8, 871.0], [90.9, 872.0], [91.0, 875.0], [91.1, 875.0], [91.2, 878.0], [91.3, 879.0], [91.4, 881.0], [91.5, 884.0], [91.6, 885.0], [91.7, 885.0], [91.8, 890.0], [91.9, 893.0], [92.0, 896.0], [92.1, 896.0], [92.2, 899.0], [92.3, 900.0], [92.4, 901.0], [92.5, 901.0], [92.6, 902.0], [92.7, 903.0], [92.8, 907.0], [92.9, 911.0], [93.0, 912.0], [93.1, 913.0], [93.2, 921.0], [93.3, 926.0], [93.4, 928.0], [93.5, 931.0], [93.6, 932.0], [93.7, 935.0], [93.8, 937.0], [93.9, 938.0], [94.0, 942.0], [94.1, 948.0], [94.2, 957.0], [94.3, 961.0], [94.4, 965.0], [94.5, 966.0], [94.6, 967.0], [94.7, 971.0], [94.8, 972.0], [94.9, 977.0], [95.0, 978.0], [95.1, 979.0], [95.2, 982.0], [95.3, 989.0], [95.4, 990.0], [95.5, 993.0], [95.6, 994.0], [95.7, 995.0], [95.8, 997.0], [95.9, 1004.0], [96.0, 1005.0], [96.1, 1007.0], [96.2, 1022.0], [96.3, 1030.0], [96.4, 1031.0], [96.5, 1037.0], [96.6, 1039.0], [96.7, 1046.0], [96.8, 1046.0], [96.9, 1058.0], [97.0, 1061.0], [97.1, 1068.0], [97.2, 1074.0], [97.3, 1083.0], [97.4, 1089.0], [97.5, 1092.0], [97.6, 1102.0], [97.7, 1105.0], [97.8, 1119.0], [97.9, 1123.0], [98.0, 1135.0], [98.1, 1154.0], [98.2, 1156.0], [98.3, 1158.0], [98.4, 1169.0], [98.5, 1198.0], [98.6, 1202.0], [98.7, 1211.0], [98.8, 1223.0], [98.9, 1229.0], [99.0, 1238.0], [99.1, 1243.0], [99.2, 1251.0], [99.3, 1256.0], [99.4, 1273.0], [99.5, 1286.0], [99.6, 1367.0], [99.7, 1376.0], [99.8, 1582.0], [99.9, 1623.0], [100.0, 1673.0]], "isOverall": false, "label": "Get PROB ID", "isController": false}, {"data": [[0.0, 4.0], [0.1, 5.0], [0.2, 6.0], [0.3, 6.0], [0.4, 6.0], [0.5, 7.0], [0.6, 7.0], [0.7, 7.0], [0.8, 7.0], [0.9, 7.0], [1.0, 8.0], [1.1, 8.0], [1.2, 8.0], [1.3, 8.0], [1.4, 8.0], [1.5, 9.0], [1.6, 9.0], [1.7, 9.0], [1.8, 9.0], [1.9, 9.0], [2.0, 9.0], [2.1, 9.0], [2.2, 10.0], [2.3, 10.0], [2.4, 10.0], [2.5, 10.0], [2.6, 10.0], [2.7, 11.0], [2.8, 11.0], [2.9, 11.0], [3.0, 11.0], [3.1, 11.0], [3.2, 11.0], [3.3, 12.0], [3.4, 12.0], [3.5, 12.0], [3.6, 12.0], [3.7, 12.0], [3.8, 13.0], [3.9, 13.0], [4.0, 13.0], [4.1, 13.0], [4.2, 13.0], [4.3, 13.0], [4.4, 13.0], [4.5, 14.0], [4.6, 14.0], [4.7, 14.0], [4.8, 14.0], [4.9, 14.0], [5.0, 14.0], [5.1, 15.0], [5.2, 15.0], [5.3, 15.0], [5.4, 15.0], [5.5, 15.0], [5.6, 15.0], [5.7, 16.0], [5.8, 16.0], [5.9, 16.0], [6.0, 16.0], [6.1, 17.0], [6.2, 17.0], [6.3, 17.0], [6.4, 17.0], [6.5, 17.0], [6.6, 17.0], [6.7, 18.0], [6.8, 18.0], [6.9, 18.0], [7.0, 18.0], [7.1, 18.0], [7.2, 18.0], [7.3, 18.0], [7.4, 19.0], [7.5, 19.0], [7.6, 19.0], [7.7, 19.0], [7.8, 19.0], [7.9, 19.0], [8.0, 19.0], [8.1, 20.0], [8.2, 20.0], [8.3, 20.0], [8.4, 20.0], [8.5, 20.0], [8.6, 21.0], [8.7, 21.0], [8.8, 21.0], [8.9, 21.0], [9.0, 21.0], [9.1, 21.0], [9.2, 21.0], [9.3, 22.0], [9.4, 22.0], [9.5, 22.0], [9.6, 22.0], [9.7, 22.0], [9.8, 23.0], [9.9, 23.0], [10.0, 23.0], [10.1, 23.0], [10.2, 23.0], [10.3, 23.0], [10.4, 24.0], [10.5, 24.0], [10.6, 24.0], [10.7, 24.0], [10.8, 24.0], [10.9, 24.0], [11.0, 25.0], [11.1, 25.0], [11.2, 25.0], [11.3, 25.0], [11.4, 26.0], [11.5, 26.0], [11.6, 26.0], [11.7, 26.0], [11.8, 26.0], [11.9, 27.0], [12.0, 27.0], [12.1, 27.0], [12.2, 27.0], [12.3, 27.0], [12.4, 27.0], [12.5, 27.0], [12.6, 27.0], [12.7, 27.0], [12.8, 28.0], [12.9, 28.0], [13.0, 28.0], [13.1, 28.0], [13.2, 28.0], [13.3, 29.0], [13.4, 29.0], [13.5, 29.0], [13.6, 29.0], [13.7, 30.0], [13.8, 30.0], [13.9, 30.0], [14.0, 30.0], [14.1, 31.0], [14.2, 31.0], [14.3, 31.0], [14.4, 31.0], [14.5, 31.0], [14.6, 31.0], [14.7, 32.0], [14.8, 32.0], [14.9, 32.0], [15.0, 32.0], [15.1, 33.0], [15.2, 33.0], [15.3, 33.0], [15.4, 33.0], [15.5, 33.0], [15.6, 34.0], [15.7, 34.0], [15.8, 34.0], [15.9, 34.0], [16.0, 35.0], [16.1, 35.0], [16.2, 35.0], [16.3, 35.0], [16.4, 36.0], [16.5, 36.0], [16.6, 36.0], [16.7, 37.0], [16.8, 37.0], [16.9, 37.0], [17.0, 38.0], [17.1, 38.0], [17.2, 38.0], [17.3, 39.0], [17.4, 39.0], [17.5, 39.0], [17.6, 39.0], [17.7, 40.0], [17.8, 40.0], [17.9, 41.0], [18.0, 41.0], [18.1, 42.0], [18.2, 42.0], [18.3, 43.0], [18.4, 43.0], [18.5, 44.0], [18.6, 44.0], [18.7, 45.0], [18.8, 45.0], [18.9, 46.0], [19.0, 46.0], [19.1, 46.0], [19.2, 47.0], [19.3, 47.0], [19.4, 48.0], [19.5, 48.0], [19.6, 49.0], [19.7, 49.0], [19.8, 50.0], [19.9, 51.0], [20.0, 51.0], [20.1, 51.0], [20.2, 52.0], [20.3, 52.0], [20.4, 53.0], [20.5, 54.0], [20.6, 54.0], [20.7, 55.0], [20.8, 56.0], [20.9, 56.0], [21.0, 57.0], [21.1, 57.0], [21.2, 58.0], [21.3, 59.0], [21.4, 59.0], [21.5, 60.0], [21.6, 60.0], [21.7, 61.0], [21.8, 61.0], [21.9, 61.0], [22.0, 62.0], [22.1, 62.0], [22.2, 63.0], [22.3, 64.0], [22.4, 65.0], [22.5, 65.0], [22.6, 66.0], [22.7, 66.0], [22.8, 67.0], [22.9, 68.0], [23.0, 68.0], [23.1, 68.0], [23.2, 69.0], [23.3, 70.0], [23.4, 70.0], [23.5, 71.0], [23.6, 73.0], [23.7, 73.0], [23.8, 74.0], [23.9, 75.0], [24.0, 77.0], [24.1, 77.0], [24.2, 78.0], [24.3, 78.0], [24.4, 79.0], [24.5, 79.0], [24.6, 81.0], [24.7, 82.0], [24.8, 83.0], [24.9, 84.0], [25.0, 85.0], [25.1, 86.0], [25.2, 86.0], [25.3, 87.0], [25.4, 88.0], [25.5, 89.0], [25.6, 90.0], [25.7, 91.0], [25.8, 92.0], [25.9, 92.0], [26.0, 93.0], [26.1, 93.0], [26.2, 94.0], [26.3, 94.0], [26.4, 95.0], [26.5, 95.0], [26.6, 97.0], [26.7, 99.0], [26.8, 100.0], [26.9, 101.0], [27.0, 102.0], [27.1, 104.0], [27.2, 104.0], [27.3, 106.0], [27.4, 107.0], [27.5, 108.0], [27.6, 109.0], [27.7, 110.0], [27.8, 111.0], [27.9, 112.0], [28.0, 114.0], [28.1, 115.0], [28.2, 117.0], [28.3, 118.0], [28.4, 118.0], [28.5, 119.0], [28.6, 121.0], [28.7, 122.0], [28.8, 123.0], [28.9, 125.0], [29.0, 125.0], [29.1, 126.0], [29.2, 127.0], [29.3, 128.0], [29.4, 129.0], [29.5, 131.0], [29.6, 132.0], [29.7, 132.0], [29.8, 134.0], [29.9, 134.0], [30.0, 135.0], [30.1, 136.0], [30.2, 136.0], [30.3, 138.0], [30.4, 139.0], [30.5, 140.0], [30.6, 141.0], [30.7, 143.0], [30.8, 144.0], [30.9, 147.0], [31.0, 148.0], [31.1, 149.0], [31.2, 151.0], [31.3, 152.0], [31.4, 154.0], [31.5, 156.0], [31.6, 156.0], [31.7, 157.0], [31.8, 159.0], [31.9, 160.0], [32.0, 161.0], [32.1, 161.0], [32.2, 163.0], [32.3, 164.0], [32.4, 165.0], [32.5, 167.0], [32.6, 170.0], [32.7, 170.0], [32.8, 172.0], [32.9, 173.0], [33.0, 174.0], [33.1, 176.0], [33.2, 178.0], [33.3, 180.0], [33.4, 181.0], [33.5, 183.0], [33.6, 187.0], [33.7, 188.0], [33.8, 189.0], [33.9, 190.0], [34.0, 192.0], [34.1, 193.0], [34.2, 194.0], [34.3, 197.0], [34.4, 198.0], [34.5, 199.0], [34.6, 201.0], [34.7, 202.0], [34.8, 204.0], [34.9, 205.0], [35.0, 206.0], [35.1, 208.0], [35.2, 209.0], [35.3, 211.0], [35.4, 211.0], [35.5, 212.0], [35.6, 212.0], [35.7, 215.0], [35.8, 216.0], [35.9, 219.0], [36.0, 221.0], [36.1, 223.0], [36.2, 224.0], [36.3, 225.0], [36.4, 227.0], [36.5, 228.0], [36.6, 230.0], [36.7, 231.0], [36.8, 233.0], [36.9, 235.0], [37.0, 235.0], [37.1, 238.0], [37.2, 239.0], [37.3, 245.0], [37.4, 247.0], [37.5, 248.0], [37.6, 251.0], [37.7, 254.0], [37.8, 258.0], [37.9, 261.0], [38.0, 264.0], [38.1, 265.0], [38.2, 266.0], [38.3, 270.0], [38.4, 273.0], [38.5, 275.0], [38.6, 277.0], [38.7, 280.0], [38.8, 281.0], [38.9, 283.0], [39.0, 286.0], [39.1, 288.0], [39.2, 289.0], [39.3, 291.0], [39.4, 293.0], [39.5, 297.0], [39.6, 301.0], [39.7, 307.0], [39.8, 312.0], [39.9, 315.0], [40.0, 316.0], [40.1, 319.0], [40.2, 321.0], [40.3, 324.0], [40.4, 326.0], [40.5, 329.0], [40.6, 332.0], [40.7, 334.0], [40.8, 337.0], [40.9, 340.0], [41.0, 344.0], [41.1, 345.0], [41.2, 347.0], [41.3, 348.0], [41.4, 350.0], [41.5, 355.0], [41.6, 360.0], [41.7, 362.0], [41.8, 363.0], [41.9, 367.0], [42.0, 368.0], [42.1, 373.0], [42.2, 376.0], [42.3, 380.0], [42.4, 386.0], [42.5, 387.0], [42.6, 393.0], [42.7, 396.0], [42.8, 398.0], [42.9, 407.0], [43.0, 408.0], [43.1, 413.0], [43.2, 419.0], [43.3, 423.0], [43.4, 433.0], [43.5, 435.0], [43.6, 441.0], [43.7, 445.0], [43.8, 447.0], [43.9, 451.0], [44.0, 454.0], [44.1, 458.0], [44.2, 462.0], [44.3, 467.0], [44.4, 469.0], [44.5, 471.0], [44.6, 476.0], [44.7, 478.0], [44.8, 482.0], [44.9, 486.0], [45.0, 490.0], [45.1, 492.0], [45.2, 496.0], [45.3, 502.0], [45.4, 511.0], [45.5, 520.0], [45.6, 523.0], [45.7, 525.0], [45.8, 530.0], [45.9, 537.0], [46.0, 543.0], [46.1, 546.0], [46.2, 549.0], [46.3, 550.0], [46.4, 552.0], [46.5, 557.0], [46.6, 561.0], [46.7, 562.0], [46.8, 565.0], [46.9, 568.0], [47.0, 573.0], [47.1, 581.0], [47.2, 582.0], [47.3, 586.0], [47.4, 587.0], [47.5, 590.0], [47.6, 594.0], [47.7, 598.0], [47.8, 602.0], [47.9, 603.0], [48.0, 605.0], [48.1, 609.0], [48.2, 611.0], [48.3, 615.0], [48.4, 618.0], [48.5, 623.0], [48.6, 626.0], [48.7, 628.0], [48.8, 630.0], [48.9, 632.0], [49.0, 635.0], [49.1, 638.0], [49.2, 642.0], [49.3, 644.0], [49.4, 646.0], [49.5, 647.0], [49.6, 649.0], [49.7, 652.0], [49.8, 653.0], [49.9, 656.0], [50.0, 658.0], [50.1, 659.0], [50.2, 660.0], [50.3, 662.0], [50.4, 664.0], [50.5, 666.0], [50.6, 669.0], [50.7, 675.0], [50.8, 676.0], [50.9, 677.0], [51.0, 678.0], [51.1, 679.0], [51.2, 681.0], [51.3, 684.0], [51.4, 687.0], [51.5, 688.0], [51.6, 691.0], [51.7, 693.0], [51.8, 694.0], [51.9, 697.0], [52.0, 699.0], [52.1, 704.0], [52.2, 705.0], [52.3, 707.0], [52.4, 708.0], [52.5, 710.0], [52.6, 714.0], [52.7, 716.0], [52.8, 720.0], [52.9, 721.0], [53.0, 723.0], [53.1, 725.0], [53.2, 726.0], [53.3, 728.0], [53.4, 729.0], [53.5, 731.0], [53.6, 732.0], [53.7, 733.0], [53.8, 735.0], [53.9, 735.0], [54.0, 738.0], [54.1, 741.0], [54.2, 743.0], [54.3, 746.0], [54.4, 746.0], [54.5, 749.0], [54.6, 752.0], [54.7, 753.0], [54.8, 755.0], [54.9, 757.0], [55.0, 759.0], [55.1, 760.0], [55.2, 762.0], [55.3, 764.0], [55.4, 765.0], [55.5, 767.0], [55.6, 769.0], [55.7, 770.0], [55.8, 772.0], [55.9, 774.0], [56.0, 774.0], [56.1, 777.0], [56.2, 779.0], [56.3, 780.0], [56.4, 782.0], [56.5, 784.0], [56.6, 785.0], [56.7, 787.0], [56.8, 788.0], [56.9, 789.0], [57.0, 790.0], [57.1, 792.0], [57.2, 793.0], [57.3, 794.0], [57.4, 796.0], [57.5, 798.0], [57.6, 799.0], [57.7, 801.0], [57.8, 803.0], [57.9, 804.0], [58.0, 805.0], [58.1, 807.0], [58.2, 808.0], [58.3, 808.0], [58.4, 811.0], [58.5, 813.0], [58.6, 815.0], [58.7, 817.0], [58.8, 819.0], [58.9, 819.0], [59.0, 820.0], [59.1, 821.0], [59.2, 823.0], [59.3, 825.0], [59.4, 827.0], [59.5, 828.0], [59.6, 829.0], [59.7, 831.0], [59.8, 832.0], [59.9, 833.0], [60.0, 833.0], [60.1, 835.0], [60.2, 836.0], [60.3, 837.0], [60.4, 839.0], [60.5, 841.0], [60.6, 842.0], [60.7, 842.0], [60.8, 845.0], [60.9, 846.0], [61.0, 847.0], [61.1, 848.0], [61.2, 851.0], [61.3, 853.0], [61.4, 854.0], [61.5, 854.0], [61.6, 855.0], [61.7, 858.0], [61.8, 859.0], [61.9, 862.0], [62.0, 863.0], [62.1, 864.0], [62.2, 868.0], [62.3, 870.0], [62.4, 873.0], [62.5, 874.0], [62.6, 878.0], [62.7, 879.0], [62.8, 880.0], [62.9, 883.0], [63.0, 884.0], [63.1, 885.0], [63.2, 887.0], [63.3, 888.0], [63.4, 891.0], [63.5, 894.0], [63.6, 896.0], [63.7, 898.0], [63.8, 898.0], [63.9, 900.0], [64.0, 901.0], [64.1, 901.0], [64.2, 905.0], [64.3, 905.0], [64.4, 906.0], [64.5, 907.0], [64.6, 907.0], [64.7, 908.0], [64.8, 910.0], [64.9, 910.0], [65.0, 911.0], [65.1, 913.0], [65.2, 914.0], [65.3, 915.0], [65.4, 915.0], [65.5, 916.0], [65.6, 918.0], [65.7, 919.0], [65.8, 920.0], [65.9, 922.0], [66.0, 924.0], [66.1, 926.0], [66.2, 927.0], [66.3, 928.0], [66.4, 931.0], [66.5, 935.0], [66.6, 936.0], [66.7, 938.0], [66.8, 939.0], [66.9, 941.0], [67.0, 943.0], [67.1, 945.0], [67.2, 946.0], [67.3, 947.0], [67.4, 948.0], [67.5, 950.0], [67.6, 951.0], [67.7, 953.0], [67.8, 955.0], [67.9, 956.0], [68.0, 958.0], [68.1, 959.0], [68.2, 960.0], [68.3, 961.0], [68.4, 963.0], [68.5, 964.0], [68.6, 967.0], [68.7, 969.0], [68.8, 971.0], [68.9, 971.0], [69.0, 972.0], [69.1, 976.0], [69.2, 978.0], [69.3, 979.0], [69.4, 982.0], [69.5, 984.0], [69.6, 985.0], [69.7, 987.0], [69.8, 989.0], [69.9, 992.0], [70.0, 995.0], [70.1, 998.0], [70.2, 1000.0], [70.3, 1001.0], [70.4, 1002.0], [70.5, 1007.0], [70.6, 1008.0], [70.7, 1010.0], [70.8, 1011.0], [70.9, 1012.0], [71.0, 1015.0], [71.1, 1017.0], [71.2, 1017.0], [71.3, 1020.0], [71.4, 1023.0], [71.5, 1025.0], [71.6, 1026.0], [71.7, 1027.0], [71.8, 1031.0], [71.9, 1031.0], [72.0, 1033.0], [72.1, 1035.0], [72.2, 1036.0], [72.3, 1038.0], [72.4, 1040.0], [72.5, 1041.0], [72.6, 1043.0], [72.7, 1046.0], [72.8, 1047.0], [72.9, 1049.0], [73.0, 1049.0], [73.1, 1050.0], [73.2, 1051.0], [73.3, 1052.0], [73.4, 1053.0], [73.5, 1055.0], [73.6, 1057.0], [73.7, 1058.0], [73.8, 1060.0], [73.9, 1060.0], [74.0, 1061.0], [74.1, 1063.0], [74.2, 1065.0], [74.3, 1066.0], [74.4, 1067.0], [74.5, 1069.0], [74.6, 1071.0], [74.7, 1073.0], [74.8, 1074.0], [74.9, 1076.0], [75.0, 1078.0], [75.1, 1080.0], [75.2, 1081.0], [75.3, 1083.0], [75.4, 1084.0], [75.5, 1085.0], [75.6, 1087.0], [75.7, 1088.0], [75.8, 1089.0], [75.9, 1091.0], [76.0, 1095.0], [76.1, 1096.0], [76.2, 1098.0], [76.3, 1102.0], [76.4, 1104.0], [76.5, 1105.0], [76.6, 1108.0], [76.7, 1109.0], [76.8, 1111.0], [76.9, 1113.0], [77.0, 1115.0], [77.1, 1116.0], [77.2, 1117.0], [77.3, 1120.0], [77.4, 1122.0], [77.5, 1123.0], [77.6, 1126.0], [77.7, 1128.0], [77.8, 1129.0], [77.9, 1130.0], [78.0, 1132.0], [78.1, 1133.0], [78.2, 1135.0], [78.3, 1135.0], [78.4, 1138.0], [78.5, 1143.0], [78.6, 1144.0], [78.7, 1145.0], [78.8, 1148.0], [78.9, 1150.0], [79.0, 1152.0], [79.1, 1154.0], [79.2, 1156.0], [79.3, 1157.0], [79.4, 1159.0], [79.5, 1162.0], [79.6, 1165.0], [79.7, 1167.0], [79.8, 1168.0], [79.9, 1169.0], [80.0, 1170.0], [80.1, 1171.0], [80.2, 1174.0], [80.3, 1176.0], [80.4, 1179.0], [80.5, 1180.0], [80.6, 1182.0], [80.7, 1184.0], [80.8, 1186.0], [80.9, 1187.0], [81.0, 1189.0], [81.1, 1191.0], [81.2, 1191.0], [81.3, 1193.0], [81.4, 1197.0], [81.5, 1201.0], [81.6, 1202.0], [81.7, 1204.0], [81.8, 1205.0], [81.9, 1207.0], [82.0, 1211.0], [82.1, 1212.0], [82.2, 1213.0], [82.3, 1214.0], [82.4, 1217.0], [82.5, 1219.0], [82.6, 1221.0], [82.7, 1222.0], [82.8, 1224.0], [82.9, 1225.0], [83.0, 1228.0], [83.1, 1229.0], [83.2, 1232.0], [83.3, 1234.0], [83.4, 1237.0], [83.5, 1238.0], [83.6, 1239.0], [83.7, 1240.0], [83.8, 1241.0], [83.9, 1244.0], [84.0, 1246.0], [84.1, 1247.0], [84.2, 1249.0], [84.3, 1252.0], [84.4, 1253.0], [84.5, 1255.0], [84.6, 1256.0], [84.7, 1258.0], [84.8, 1259.0], [84.9, 1263.0], [85.0, 1265.0], [85.1, 1266.0], [85.2, 1267.0], [85.3, 1269.0], [85.4, 1270.0], [85.5, 1274.0], [85.6, 1275.0], [85.7, 1277.0], [85.8, 1277.0], [85.9, 1280.0], [86.0, 1284.0], [86.1, 1286.0], [86.2, 1288.0], [86.3, 1289.0], [86.4, 1291.0], [86.5, 1294.0], [86.6, 1295.0], [86.7, 1298.0], [86.8, 1300.0], [86.9, 1301.0], [87.0, 1304.0], [87.1, 1306.0], [87.2, 1309.0], [87.3, 1310.0], [87.4, 1311.0], [87.5, 1313.0], [87.6, 1313.0], [87.7, 1314.0], [87.8, 1316.0], [87.9, 1316.0], [88.0, 1319.0], [88.1, 1321.0], [88.2, 1322.0], [88.3, 1324.0], [88.4, 1326.0], [88.5, 1328.0], [88.6, 1329.0], [88.7, 1330.0], [88.8, 1331.0], [88.9, 1334.0], [89.0, 1336.0], [89.1, 1338.0], [89.2, 1341.0], [89.3, 1344.0], [89.4, 1347.0], [89.5, 1349.0], [89.6, 1352.0], [89.7, 1355.0], [89.8, 1356.0], [89.9, 1363.0], [90.0, 1369.0], [90.1, 1373.0], [90.2, 1376.0], [90.3, 1380.0], [90.4, 1385.0], [90.5, 1390.0], [90.6, 1394.0], [90.7, 1395.0], [90.8, 1397.0], [90.9, 1400.0], [91.0, 1402.0], [91.1, 1405.0], [91.2, 1412.0], [91.3, 1415.0], [91.4, 1416.0], [91.5, 1421.0], [91.6, 1425.0], [91.7, 1430.0], [91.8, 1431.0], [91.9, 1434.0], [92.0, 1437.0], [92.1, 1440.0], [92.2, 1446.0], [92.3, 1450.0], [92.4, 1453.0], [92.5, 1456.0], [92.6, 1459.0], [92.7, 1462.0], [92.8, 1464.0], [92.9, 1468.0], [93.0, 1473.0], [93.1, 1478.0], [93.2, 1481.0], [93.3, 1483.0], [93.4, 1484.0], [93.5, 1487.0], [93.6, 1494.0], [93.7, 1497.0], [93.8, 1500.0], [93.9, 1502.0], [94.0, 1505.0], [94.1, 1510.0], [94.2, 1513.0], [94.3, 1520.0], [94.4, 1522.0], [94.5, 1527.0], [94.6, 1530.0], [94.7, 1534.0], [94.8, 1541.0], [94.9, 1545.0], [95.0, 1548.0], [95.1, 1551.0], [95.2, 1555.0], [95.3, 1557.0], [95.4, 1565.0], [95.5, 1570.0], [95.6, 1572.0], [95.7, 1582.0], [95.8, 1584.0], [95.9, 1586.0], [96.0, 1591.0], [96.1, 1595.0], [96.2, 1599.0], [96.3, 1606.0], [96.4, 1611.0], [96.5, 1615.0], [96.6, 1623.0], [96.7, 1627.0], [96.8, 1634.0], [96.9, 1637.0], [97.0, 1641.0], [97.1, 1642.0], [97.2, 1643.0], [97.3, 1650.0], [97.4, 1653.0], [97.5, 1659.0], [97.6, 1668.0], [97.7, 1675.0], [97.8, 1682.0], [97.9, 1688.0], [98.0, 1696.0], [98.1, 1707.0], [98.2, 1708.0], [98.3, 1715.0], [98.4, 1723.0], [98.5, 1737.0], [98.6, 1747.0], [98.7, 1768.0], [98.8, 1771.0], [98.9, 1793.0], [99.0, 1815.0], [99.1, 1825.0], [99.2, 1848.0], [99.3, 1861.0], [99.4, 1876.0], [99.5, 1889.0], [99.6, 1906.0], [99.7, 1935.0], [99.8, 1984.0], [99.9, 2036.0]], "isOverall": false, "label": "Get PROB list", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1035.0, "series": [{"data": [[0.0, 814.0], [300.0, 279.0], [600.0, 24.0], [700.0, 6.0], [100.0, 232.0], [200.0, 298.0], [400.0, 173.0], [800.0, 4.0], [500.0, 72.0]], "isOverall": false, "label": "Post PROB UNREMOVE", "isController": false}, {"data": [[0.0, 620.0], [100.0, 104.0], [200.0, 80.0], [300.0, 81.0], [400.0, 56.0], [500.0, 31.0], [600.0, 20.0], [700.0, 19.0], [800.0, 20.0], [900.0, 19.0], [1000.0, 13.0], [1100.0, 13.0], [1200.0, 9.0], [1300.0, 13.0], [1400.0, 7.0], [1500.0, 11.0], [1600.0, 7.0], [1700.0, 9.0], [1800.0, 5.0], [1900.0, 9.0], [2000.0, 6.0], [2100.0, 6.0], [2200.0, 7.0], [2300.0, 4.0], [2400.0, 7.0], [2500.0, 2.0], [2600.0, 4.0], [2700.0, 2.0], [2800.0, 1.0], [2900.0, 2.0], [3000.0, 2.0], [3100.0, 6.0], [3200.0, 6.0], [3300.0, 4.0], [3400.0, 9.0], [3500.0, 11.0], [3600.0, 14.0], [3700.0, 8.0], [3800.0, 16.0], [3900.0, 21.0], [4000.0, 22.0], [4300.0, 20.0], [4100.0, 22.0], [4200.0, 19.0], [4400.0, 17.0], [4500.0, 16.0], [4600.0, 14.0], [4800.0, 7.0], [4700.0, 6.0], [4900.0, 4.0], [5000.0, 6.0], [5100.0, 1.0], [5300.0, 3.0], [5200.0, 1.0], [5400.0, 3.0], [5500.0, 2.0], [5600.0, 2.0], [5700.0, 3.0], [5800.0, 3.0], [5900.0, 3.0], [6000.0, 2.0], [6300.0, 3.0], [6200.0, 2.0], [6500.0, 2.0], [6400.0, 2.0], [6800.0, 5.0], [6700.0, 3.0], [6900.0, 5.0], [7000.0, 9.0], [7100.0, 4.0], [7200.0, 10.0], [7300.0, 5.0], [7400.0, 6.0], [7500.0, 8.0], [7600.0, 17.0], [7800.0, 23.0], [7700.0, 21.0], [7900.0, 13.0], [8000.0, 20.0], [8100.0, 18.0], [8200.0, 25.0], [8300.0, 20.0], [8400.0, 28.0], [8500.0, 29.0], [8700.0, 24.0], [8600.0, 20.0], [8800.0, 19.0], [9000.0, 16.0], [8900.0, 19.0], [9100.0, 14.0], [9200.0, 19.0], [9400.0, 11.0], [9300.0, 14.0], [9600.0, 8.0], [9700.0, 7.0], [9500.0, 11.0], [10200.0, 3.0], [9800.0, 9.0], [9900.0, 4.0], [10000.0, 3.0], [10100.0, 5.0], [10500.0, 1.0], [10700.0, 1.0]], "isOverall": false, "label": "Post PROB", "isController": false}, {"data": [[0.0, 683.0], [600.0, 111.0], [700.0, 133.0], [200.0, 75.0], [800.0, 135.0], [900.0, 109.0], [1000.0, 94.0], [1100.0, 79.0], [300.0, 64.0], [1200.0, 59.0], [1300.0, 25.0], [1400.0, 21.0], [1500.0, 20.0], [100.0, 117.0], [400.0, 82.0], [1600.0, 6.0], [1700.0, 3.0], [1900.0, 1.0], [500.0, 88.0]], "isOverall": false, "label": "Delete PROB", "isController": false}, {"data": [[0.0, 621.0], [600.0, 185.0], [700.0, 134.0], [200.0, 113.0], [800.0, 116.0], [900.0, 69.0], [1000.0, 33.0], [1100.0, 19.0], [300.0, 117.0], [1200.0, 18.0], [1300.0, 4.0], [1400.0, 1.0], [1500.0, 1.0], [100.0, 127.0], [400.0, 142.0], [1600.0, 3.0], [500.0, 206.0]], "isOverall": false, "label": "Get PROB ID", "isController": false}, {"data": [[0.0, 1035.0], [2100.0, 1.0], [600.0, 164.0], [700.0, 218.0], [200.0, 193.0], [800.0, 239.0], [900.0, 243.0], [1000.0, 237.0], [1100.0, 201.0], [300.0, 125.0], [1200.0, 205.0], [1300.0, 157.0], [1400.0, 113.0], [1500.0, 94.0], [100.0, 300.0], [400.0, 95.0], [1600.0, 69.0], [1700.0, 36.0], [1800.0, 25.0], [1900.0, 9.0], [500.0, 97.0], [2000.0, 6.0]], "isOverall": false, "label": "Get PROB list", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 10700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1114.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 6632.0, "series": [{"data": [[1.0, 3778.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[0.0, 6632.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 1114.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 9.329554043839755, "minX": 1.52712366E12, "maxY": 50.0, "series": [{"data": [[1.52712396E12, 50.0], [1.52712366E12, 9.329554043839755], [1.52712378E12, 25.674311926605498], [1.52712372E12, 16.632029795158267], [1.5271239E12, 45.839348903043174], [1.52712384E12, 35.77398469688057], [1.52712402E12, 49.106425702811244]], "isOverall": false, "label": "jp@gc Ultima Thread - Patient Problem", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52712402E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 3.0, "minX": 1.0, "maxY": 8459.957805907177, "series": [{"data": [[2.0, 6.0], [3.0, 3.0], [4.0, 5.0], [5.0, 4.0], [6.0, 4.6], [7.0, 3.8333333333333335], [8.0, 3.571428571428571], [9.0, 4.5], [10.0, 4.524999999999997], [11.0, 16.0], [12.0, 4.7], [13.0, 5.166666666666666], [14.0, 21.799999999999997], [15.0, 13.357142857142858], [16.0, 9.083333333333334], [17.0, 12.916666666666668], [18.0, 27.5], [19.0, 16.533333333333335], [20.0, 62.367521367521356], [21.0, 98.33333333333333], [22.0, 127.89999999999999], [23.0, 126.2], [24.0, 261.59999999999997], [25.0, 110.16666666666667], [26.0, 269.0], [27.0, 232.0], [28.0, 210.72727272727275], [29.0, 335.5], [30.0, 248.79687499999991], [31.0, 312.7142857142857], [32.0, 306.875], [33.0, 316.0], [34.0, 271.6666666666667], [35.0, 344.0], [36.0, 453.6666666666667], [37.0, 271.0], [38.0, 262.0], [39.0, 416.5714285714286], [40.0, 294.4563106796119], [41.0, 275.2], [42.0, 376.42857142857144], [43.0, 396.0], [44.0, 171.5], [45.0, 274.2], [46.0, 427.0], [47.0, 373.7142857142857], [48.0, 294.33333333333337], [49.0, 372.0], [50.0, 345.8649789029537]], "isOverall": false, "label": "Post PROB UNREMOVE", "isController": false}, {"data": [[30.36487907465823, 191.66508937960026]], "isOverall": false, "label": "Post PROB UNREMOVE-Aggregated", "isController": false}, {"data": [[2.0, 14.0], [3.0, 16.666666666666668], [4.0, 14.0], [5.0, 13.0], [6.0, 14.666666666666668], [7.0, 14.285714285714286], [8.0, 12.571428571428571], [9.0, 13.25], [10.0, 16.589285714285715], [11.0, 21.77777777777778], [12.0, 17.4], [13.0, 31.500000000000004], [14.0, 38.083333333333336], [15.0, 31.91666666666667], [16.0, 34.42857142857143], [17.0, 67.0], [18.0, 56.76470588235294], [19.0, 67.64285714285714], [20.0, 206.949295774648], [21.0, 494.7272727272727], [22.0, 623.5555555555555], [23.0, 739.6], [24.0, 1299.5714285714284], [25.0, 1488.0], [26.0, 1751.111111111111], [27.0, 1986.3999999999999], [28.0, 1817.5], [29.0, 2593.714285714286], [30.0, 698.4639999999997], [31.0, 1314.6666666666667], [32.0, 2650.75], [33.0, 2742.5555555555557], [34.0, 2162.75], [35.0, 2252.1666666666665], [36.0, 2404.714285714286], [37.0, 2587.5], [38.0, 2562.0], [39.0, 3848.777777777778], [40.0, 4052.2709359605924], [41.0, 4474.0], [42.0, 4713.428571428571], [43.0, 4934.2], [44.0, 4637.0], [45.0, 4880.4], [46.0, 6317.375], [47.0, 5243.4], [48.0, 5851.4], [49.0, 5744.0], [50.0, 8459.957805907177], [1.0, 83.0]], "isOverall": false, "label": "Post PROB", "isController": false}, {"data": [[30.129496402877685, 2924.424460431652]], "isOverall": false, "label": "Post PROB-Aggregated", "isController": false}, {"data": [[2.0, 12.5], [3.0, 10.5], [4.0, 7.333333333333333], [5.0, 8.25], [6.0, 8.75], [7.0, 9.714285714285715], [8.0, 8.333333333333332], [9.0, 10.285714285714286], [10.0, 11.039007092198577], [11.0, 11.0], [12.0, 41.91666666666667], [13.0, 39.66666666666667], [14.0, 35.916666666666664], [15.0, 30.000000000000004], [16.0, 21.75], [17.0, 32.5], [18.0, 21.7], [19.0, 19.8], [20.0, 151.1145251396647], [21.0, 192.33333333333334], [22.0, 154.8], [23.0, 312.09090909090907], [24.0, 116.2], [25.0, 227.08333333333331], [26.0, 555.5], [27.0, 187.45454545454544], [28.0, 365.46153846153845], [29.0, 345.25000000000006], [30.0, 454.89599999999984], [31.0, 753.25], [32.0, 722.4000000000001], [33.0, 602.75], [34.0, 616.625], [35.0, 648.7142857142858], [36.0, 792.5714285714287], [37.0, 764.5714285714287], [38.0, 725.2857142857143], [39.0, 783.0], [40.0, 759.1930693069305], [41.0, 901.7142857142858], [42.0, 876.1666666666666], [43.0, 1001.0], [44.0, 885.2], [45.0, 1001.3333333333334], [46.0, 1038.25], [47.0, 1044.3333333333335], [48.0, 1084.1666666666665], [49.0, 1107.0], [50.0, 1005.7721518987339], [1.0, 16.0]], "isOverall": false, "label": "Delete PROB", "isController": false}, {"data": [[30.324934383202056, 484.55223097112867]], "isOverall": false, "label": "Delete PROB-Aggregated", "isController": false}, {"data": [[2.0, 8.5], [3.0, 8.333333333333334], [4.0, 7.0], [5.0, 6.25], [6.0, 5.8], [7.0, 6.333333333333334], [8.0, 6.999999999999999], [9.0, 7.0], [10.0, 7.751773049645386], [11.0, 23.0], [12.0, 21.363636363636363], [13.0, 11.333333333333334], [14.0, 28.1], [15.0, 10.0], [16.0, 15.4], [17.0, 21.058823529411768], [18.0, 53.36363636363637], [19.0, 50.57142857142857], [20.0, 135.26478873239446], [21.0, 433.44444444444446], [22.0, 205.625], [23.0, 286.6], [24.0, 438.8333333333333], [25.0, 495.4], [26.0, 622.6666666666666], [27.0, 347.2], [28.0, 570.3333333333334], [29.0, 640.090909090909], [30.0, 585.7777777777778], [31.0, 550.2857142857143], [32.0, 548.4285714285714], [33.0, 544.1666666666666], [34.0, 445.0], [35.0, 512.0], [36.0, 632.5], [37.0, 535.2857142857142], [38.0, 498.75], [39.0, 593.1], [40.0, 525.8137254901957], [41.0, 590.6], [42.0, 575.0], [43.0, 715.3333333333334], [44.0, 534.9999999999999], [45.0, 757.5], [46.0, 710.25], [47.0, 707.2], [48.0, 684.0], [49.0, 804.25], [50.0, 711.2890295358657], [1.0, 11.0]], "isOverall": false, "label": "Get PROB ID", "isController": false}, {"data": [[30.280251440544774, 394.2566788894714]], "isOverall": false, "label": "Get PROB ID-Aggregated", "isController": false}, {"data": [[2.0, 6.25], [3.0, 7.666666666666667], [4.0, 6.625], [5.0, 7.5], [6.0, 7.454545454545454], [7.0, 11.076923076923077], [8.0, 9.0], [9.0, 9.437499999999998], [10.0, 23.573476702508927], [11.0, 52.73684210526316], [12.0, 69.18181818181819], [13.0, 43.565217391304344], [14.0, 61.54545454545453], [15.0, 47.69230769230769], [16.0, 49.080000000000005], [17.0, 70.86666666666667], [18.0, 73.48387096774195], [19.0, 76.86666666666666], [20.0, 207.10384068278813], [21.0, 469.3], [22.0, 279.0], [23.0, 310.11111111111114], [24.0, 501.04761904761915], [25.0, 440.05], [26.0, 832.1428571428571], [27.0, 443.40000000000003], [28.0, 505.0], [29.0, 749.9583333333334], [30.0, 885.0178571428571], [31.0, 893.7857142857143], [32.0, 819.375], [33.0, 785.5], [34.0, 802.875], [35.0, 803.3571428571428], [36.0, 921.5], [37.0, 871.1666666666666], [38.0, 768.0], [39.0, 924.5999999999999], [40.0, 883.4645476772616], [41.0, 1034.75], [42.0, 1085.6363636363637], [43.0, 1141.0000000000002], [44.0, 1004.7499999999997], [45.0, 1149.1666666666665], [46.0, 1306.5384615384614], [47.0, 1202.2857142857142], [48.0, 1180.5454545454543], [49.0, 1213.7272727272727], [50.0, 1228.2161594963266], [1.0, 42.0]], "isOverall": false, "label": "Get PROB list", "isController": false}, {"data": [[30.26178146038328, 642.6841015018116]], "isOverall": false, "label": "Get PROB list-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 50.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 5537.45, "minX": 1.52712366E12, "maxY": 1.147294925E7, "series": [{"data": [[1.52712396E12, 1.143258075E7], [1.52712366E12, 851163.2333333333], [1.52712378E12, 1.04757124E7], [1.52712372E12, 6766736.983333333], [1.5271239E12, 1.147294925E7], [1.52712384E12, 1.136798385E7], [1.52712402E12, 9925611.783333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.52712396E12, 6472.266666666666], [1.52712366E12, 6982.566666666667], [1.52712378E12, 11495.7], [1.52712372E12, 14176.216666666667], [1.5271239E12, 7421.583333333333], [1.52712384E12, 8890.683333333332], [1.52712402E12, 5537.45]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52712402E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 4.088372093023256, "minX": 1.52712366E12, "maxY": 8633.555555555551, "series": [{"data": [[1.52712396E12, 344.3399014778327], [1.52712366E12, 4.088372093023256], [1.52712378E12, 182.53203342618374], [1.52712372E12, 33.02242152466367], [1.5271239E12, 299.3813559322034], [1.52712384E12, 286.4964539007095], [1.52712402E12, 385.4906832298139]], "isOverall": false, "label": "Post PROB UNREMOVE", "isController": false}, {"data": [[1.52712396E12, 8305.985365853658], [1.52712366E12, 14.748878923766812], [1.52712378E12, 420.164383561644], [1.52712372E12, 112.7450110864744], [1.5271239E12, 6044.470085470084], [1.52712384E12, 2632.824372759856], [1.52712402E12, 8633.555555555551]], "isOverall": false, "label": "Post PROB", "isController": false}, {"data": [[1.52712396E12, 1034.1862745098038], [1.52712366E12, 9.566820276497701], [1.52712378E12, 308.8895027624308], [1.52712372E12, 76.72706935123038], [1.5271239E12, 857.0772532188843], [1.52712384E12, 667.8571428571429], [1.52712402E12, 1093.8765432098764]], "isOverall": false, "label": "Delete PROB", "isController": false}, {"data": [[1.52712396E12, 707.0196078431374], [1.52712366E12, 7.2533936651583675], [1.52712378E12, 435.27197802197827], [1.52712372E12, 64.88036117381489], [1.5271239E12, 596.0815450643777], [1.52712384E12, 543.8368794326238], [1.52712402E12, 786.2407407407409]], "isOverall": false, "label": "Get PROB ID", "isController": false}, {"data": [[1.52712396E12, 1234.4174757281558], [1.52712366E12, 16.496644295302012], [1.52712378E12, 603.1219178082188], [1.52712372E12, 111.88641425389746], [1.5271239E12, 1012.9329140461215], [1.52712384E12, 865.1614583333334], [1.52712402E12, 1378.3757763975152]], "isOverall": false, "label": "Get PROB list", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.52712402E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 4.046511627906975, "minX": 1.52712366E12, "maxY": 8633.539682539686, "series": [{"data": [[1.52712396E12, 344.3349753694582], [1.52712366E12, 4.046511627906975], [1.52712378E12, 182.52924791086343], [1.52712372E12, 33.00896860986545], [1.5271239E12, 299.3813559322034], [1.52712384E12, 286.4929078014185], [1.52712402E12, 385.4844720496895]], "isOverall": false, "label": "Post PROB UNREMOVE", "isController": false}, {"data": [[1.52712396E12, 8305.980487804882], [1.52712366E12, 14.717488789237663], [1.52712378E12, 420.1534246575341], [1.52712372E12, 112.74057649667414], [1.5271239E12, 6044.470085470084], [1.52712384E12, 2632.817204301075], [1.52712402E12, 8633.539682539686]], "isOverall": false, "label": "Post PROB", "isController": false}, {"data": [[1.52712396E12, 1034.18137254902], [1.52712366E12, 9.548387096774198], [1.52712378E12, 308.88121546961327], [1.52712372E12, 76.71812080536913], [1.5271239E12, 857.0729613733901], [1.52712384E12, 667.8500000000005], [1.52712402E12, 1093.864197530864]], "isOverall": false, "label": "Delete PROB", "isController": false}, {"data": [[1.52712396E12, 707.0147058823528], [1.52712366E12, 7.244343891402714], [1.52712378E12, 435.2664835164837], [1.52712372E12, 64.86681715575624], [1.5271239E12, 596.0729613733905], [1.52712384E12, 543.8262411347519], [1.52712402E12, 786.2345679012348]], "isOverall": false, "label": "Get PROB ID", "isController": false}, {"data": [[1.52712396E12, 1020.0509708737859], [1.52712366E12, 16.362416107382565], [1.52712378E12, 522.7630136986303], [1.52712372E12, 105.47995545657015], [1.5271239E12, 852.6352201257856], [1.52712384E12, 731.5572916666669], [1.52712402E12, 1115.136645962733]], "isOverall": false, "label": "Get PROB list", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.52712402E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.004291845493562233, "minX": 1.52712366E12, "maxY": 0.2345679012345679, "series": [{"data": [[1.52712396E12, 0.024630541871921176], [1.52712366E12, 0.060465116279069794], [1.52712378E12, 0.06128133704735379], [1.52712372E12, 0.05605381165919279], [1.5271239E12, 0.046610169491525424], [1.52712384E12, 0.1347517730496454], [1.52712402E12, 0.031055900621118012]], "isOverall": false, "label": "Post PROB UNREMOVE", "isController": false}, {"data": [[1.52712396E12, 0.2], [1.52712366E12, 0.07623318385650231], [1.52712378E12, 0.12602739726027395], [1.52712372E12, 0.08425720620842578], [1.5271239E12, 0.2051282051282052], [1.52712384E12, 0.1326164874551971], [1.52712402E12, 0.12698412698412698]], "isOverall": false, "label": "Post PROB", "isController": false}, {"data": [[1.52712396E12, 0.1813725490196078], [1.52712366E12, 0.059907834101382486], [1.52712378E12, 0.1270718232044199], [1.52712372E12, 0.08501118568232667], [1.5271239E12, 0.16309012875536483], [1.52712384E12, 0.0892857142857143], [1.52712402E12, 0.2345679012345679]], "isOverall": false, "label": "Delete PROB", "isController": false}, {"data": [[1.52712396E12, 0.019607843137254898], [1.52712366E12, 0.08597285067873307], [1.52712378E12, 0.08516483516483514], [1.52712372E12, 0.05869074492099326], [1.5271239E12, 0.004291845493562233], [1.52712384E12, 0.02836879432624113], [1.52712402E12, 0.024691358024691364]], "isOverall": false, "label": "Get PROB ID", "isController": false}, {"data": [[1.52712396E12, 0.18203883495145629], [1.52712366E12, 0.19239373601789703], [1.52712378E12, 0.06712328767123284], [1.52712372E12, 0.06347438752783971], [1.5271239E12, 0.1341719077568135], [1.52712384E12, 0.10243055555555565], [1.52712402E12, 0.20186335403726705]], "isOverall": false, "label": "Get PROB list", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.52712402E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.52712366E12, "maxY": 10724.0, "series": [{"data": [[1.52712396E12, 9479.0], [1.52712366E12, 83.0], [1.52712378E12, 2111.0], [1.52712372E12, 695.0], [1.5271239E12, 8446.0], [1.52712384E12, 4852.0], [1.52712402E12, 10724.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.52712396E12, 75.0], [1.52712366E12, 2.0], [1.52712378E12, 2.0], [1.52712372E12, 1.0], [1.5271239E12, 50.0], [1.52712384E12, 2.0], [1.52712402E12, 64.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.52712396E12, 1289.0], [1.52712366E12, 21.600000000000136], [1.52712378E12, 574.0], [1.52712372E12, 188.0999999999999], [1.5271239E12, 1104.0], [1.52712384E12, 906.1999999999998], [1.52712402E12, 1473.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.52712396E12, 8396.759999999995], [1.52712366E12, 35.0], [1.52712378E12, 1456.2199999999993], [1.52712372E12, 432.5499999999993], [1.5271239E12, 6978.0], [1.52712384E12, 3846.0], [1.52712402E12, 9063.04]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.52712396E12, 3734.6000000000167], [1.52712366E12, 25.0], [1.52712378E12, 856.1999999999971], [1.52712372E12, 272.0], [1.5271239E12, 1629.0], [1.52712384E12, 1238.5999999999995], [1.52712402E12, 4438.999999999989]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52712402E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 10.0, "minX": 16.0, "maxY": 1181.5, "series": [{"data": [[16.0, 1181.5], [36.0, 320.5], [20.0, 1051.5], [22.0, 10.0], [44.0, 43.0], [23.0, 866.0], [28.0, 718.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 44.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 10.0, "minX": 16.0, "maxY": 1037.5, "series": [{"data": [[16.0, 1037.5], [36.0, 305.0], [20.0, 942.0], [22.0, 10.0], [44.0, 42.0], [23.0, 784.0], [28.0, 653.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 44.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 15.883333333333333, "minX": 1.52712366E12, "maxY": 44.9, "series": [{"data": [[1.52712396E12, 20.583333333333332], [1.52712366E12, 22.05], [1.52712378E12, 36.43333333333333], [1.52712372E12, 44.9], [1.5271239E12, 23.583333333333332], [1.52712384E12, 28.633333333333333], [1.52712402E12, 15.883333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52712402E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 16.6, "minX": 1.52712366E12, "maxY": 44.75, "series": [{"data": [[1.52712396E12, 20.466666666666665], [1.52712366E12, 22.05], [1.52712378E12, 36.333333333333336], [1.52712372E12, 44.75], [1.5271239E12, 23.55], [1.52712384E12, 28.316666666666666], [1.52712402E12, 16.6]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52712402E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 2.683333333333333, "minX": 1.52712366E12, "maxY": 14.966666666666667, "series": [{"data": [[1.52712396E12, 3.4], [1.52712366E12, 3.6166666666666667], [1.52712378E12, 6.033333333333333], [1.52712372E12, 7.45], [1.5271239E12, 3.8833333333333333], [1.52712384E12, 4.666666666666667], [1.52712402E12, 2.7]], "isOverall": false, "label": "Delete PROB-success", "isController": false}, {"data": [[1.52712396E12, 3.3833333333333333], [1.52712366E12, 3.5833333333333335], [1.52712378E12, 5.983333333333333], [1.52712372E12, 7.433333333333334], [1.5271239E12, 3.933333333333333], [1.52712384E12, 4.7], [1.52712402E12, 2.683333333333333]], "isOverall": false, "label": "Post PROB UNREMOVE-success", "isController": false}, {"data": [[1.52712396E12, 6.866666666666666], [1.52712366E12, 7.45], [1.52712378E12, 12.166666666666666], [1.52712372E12, 14.966666666666667], [1.5271239E12, 7.95], [1.52712384E12, 9.6], [1.52712402E12, 5.366666666666666]], "isOverall": false, "label": "Get PROB list-success", "isController": false}, {"data": [[1.52712396E12, 3.4166666666666665], [1.52712366E12, 3.716666666666667], [1.52712378E12, 6.083333333333333], [1.52712372E12, 7.516666666666667], [1.5271239E12, 3.9], [1.52712384E12, 4.65], [1.52712402E12, 3.15]], "isOverall": false, "label": "Post PROB-success", "isController": false}, {"data": [[1.52712396E12, 3.4], [1.52712366E12, 3.683333333333333], [1.52712378E12, 6.066666666666666], [1.52712372E12, 7.383333333333334], [1.5271239E12, 3.8833333333333333], [1.52712384E12, 4.7], [1.52712402E12, 2.7]], "isOverall": false, "label": "Get PROB ID-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.52712402E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
