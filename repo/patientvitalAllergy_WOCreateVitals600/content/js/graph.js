/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -36000000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -36000000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 108.0, "series": [{"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 2.0], [22.5, 2.0], [22.6, 2.0], [22.7, 2.0], [22.8, 2.0], [22.9, 2.0], [23.0, 2.0], [23.1, 2.0], [23.2, 2.0], [23.3, 2.0], [23.4, 2.0], [23.5, 2.0], [23.6, 2.0], [23.7, 2.0], [23.8, 2.0], [23.9, 2.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 2.0], [29.6, 2.0], [29.7, 2.0], [29.8, 2.0], [29.9, 2.0], [30.0, 2.0], [30.1, 2.0], [30.2, 2.0], [30.3, 2.0], [30.4, 2.0], [30.5, 2.0], [30.6, 2.0], [30.7, 2.0], [30.8, 2.0], [30.9, 2.0], [31.0, 2.0], [31.1, 2.0], [31.2, 2.0], [31.3, 2.0], [31.4, 2.0], [31.5, 2.0], [31.6, 2.0], [31.7, 2.0], [31.8, 2.0], [31.9, 2.0], [32.0, 2.0], [32.1, 2.0], [32.2, 2.0], [32.3, 2.0], [32.4, 2.0], [32.5, 2.0], [32.6, 2.0], [32.7, 2.0], [32.8, 2.0], [32.9, 2.0], [33.0, 2.0], [33.1, 2.0], [33.2, 2.0], [33.3, 2.0], [33.4, 2.0], [33.5, 2.0], [33.6, 2.0], [33.7, 2.0], [33.8, 2.0], [33.9, 2.0], [34.0, 2.0], [34.1, 2.0], [34.2, 2.0], [34.3, 2.0], [34.4, 2.0], [34.5, 2.0], [34.6, 2.0], [34.7, 2.0], [34.8, 2.0], [34.9, 2.0], [35.0, 2.0], [35.1, 2.0], [35.2, 2.0], [35.3, 2.0], [35.4, 2.0], [35.5, 2.0], [35.6, 2.0], [35.7, 2.0], [35.8, 2.0], [35.9, 2.0], [36.0, 2.0], [36.1, 2.0], [36.2, 2.0], [36.3, 2.0], [36.4, 2.0], [36.5, 2.0], [36.6, 2.0], [36.7, 2.0], [36.8, 2.0], [36.9, 2.0], [37.0, 2.0], [37.1, 2.0], [37.2, 2.0], [37.3, 2.0], [37.4, 2.0], [37.5, 2.0], [37.6, 2.0], [37.7, 2.0], [37.8, 2.0], [37.9, 2.0], [38.0, 2.0], [38.1, 2.0], [38.2, 2.0], [38.3, 2.0], [38.4, 2.0], [38.5, 2.0], [38.6, 2.0], [38.7, 2.0], [38.8, 2.0], [38.9, 2.0], [39.0, 2.0], [39.1, 2.0], [39.2, 2.0], [39.3, 2.0], [39.4, 2.0], [39.5, 2.0], [39.6, 2.0], [39.7, 2.0], [39.8, 2.0], [39.9, 2.0], [40.0, 2.0], [40.1, 2.0], [40.2, 2.0], [40.3, 2.0], [40.4, 2.0], [40.5, 2.0], [40.6, 2.0], [40.7, 2.0], [40.8, 2.0], [40.9, 2.0], [41.0, 2.0], [41.1, 2.0], [41.2, 2.0], [41.3, 2.0], [41.4, 2.0], [41.5, 2.0], [41.6, 2.0], [41.7, 2.0], [41.8, 2.0], [41.9, 2.0], [42.0, 2.0], [42.1, 2.0], [42.2, 2.0], [42.3, 2.0], [42.4, 2.0], [42.5, 2.0], [42.6, 2.0], [42.7, 2.0], [42.8, 2.0], [42.9, 2.0], [43.0, 2.0], [43.1, 2.0], [43.2, 2.0], [43.3, 2.0], [43.4, 2.0], [43.5, 2.0], [43.6, 2.0], [43.7, 2.0], [43.8, 2.0], [43.9, 2.0], [44.0, 2.0], [44.1, 2.0], [44.2, 2.0], [44.3, 2.0], [44.4, 2.0], [44.5, 2.0], [44.6, 2.0], [44.7, 2.0], [44.8, 2.0], [44.9, 2.0], [45.0, 2.0], [45.1, 2.0], [45.2, 2.0], [45.3, 2.0], [45.4, 2.0], [45.5, 2.0], [45.6, 2.0], [45.7, 2.0], [45.8, 2.0], [45.9, 2.0], [46.0, 2.0], [46.1, 2.0], [46.2, 2.0], [46.3, 2.0], [46.4, 2.0], [46.5, 2.0], [46.6, 2.0], [46.7, 2.0], [46.8, 2.0], [46.9, 2.0], [47.0, 2.0], [47.1, 2.0], [47.2, 2.0], [47.3, 2.0], [47.4, 2.0], [47.5, 2.0], [47.6, 2.0], [47.7, 2.0], [47.8, 2.0], [47.9, 2.0], [48.0, 2.0], [48.1, 2.0], [48.2, 2.0], [48.3, 2.0], [48.4, 2.0], [48.5, 2.0], [48.6, 2.0], [48.7, 2.0], [48.8, 2.0], [48.9, 2.0], [49.0, 2.0], [49.1, 2.0], [49.2, 2.0], [49.3, 2.0], [49.4, 2.0], [49.5, 2.0], [49.6, 2.0], [49.7, 2.0], [49.8, 2.0], [49.9, 2.0], [50.0, 2.0], [50.1, 2.0], [50.2, 2.0], [50.3, 2.0], [50.4, 2.0], [50.5, 2.0], [50.6, 2.0], [50.7, 2.0], [50.8, 2.0], [50.9, 2.0], [51.0, 2.0], [51.1, 2.0], [51.2, 2.0], [51.3, 2.0], [51.4, 2.0], [51.5, 2.0], [51.6, 2.0], [51.7, 2.0], [51.8, 2.0], [51.9, 2.0], [52.0, 2.0], [52.1, 2.0], [52.2, 2.0], [52.3, 2.0], [52.4, 2.0], [52.5, 2.0], [52.6, 2.0], [52.7, 2.0], [52.8, 2.0], [52.9, 2.0], [53.0, 2.0], [53.1, 2.0], [53.2, 2.0], [53.3, 2.0], [53.4, 2.0], [53.5, 2.0], [53.6, 2.0], [53.7, 2.0], [53.8, 2.0], [53.9, 2.0], [54.0, 2.0], [54.1, 2.0], [54.2, 2.0], [54.3, 2.0], [54.4, 2.0], [54.5, 2.0], [54.6, 2.0], [54.7, 2.0], [54.8, 2.0], [54.9, 2.0], [55.0, 2.0], [55.1, 2.0], [55.2, 2.0], [55.3, 2.0], [55.4, 2.0], [55.5, 2.0], [55.6, 2.0], [55.7, 2.0], [55.8, 2.0], [55.9, 2.0], [56.0, 2.0], [56.1, 2.0], [56.2, 2.0], [56.3, 2.0], [56.4, 2.0], [56.5, 2.0], [56.6, 2.0], [56.7, 2.0], [56.8, 2.0], [56.9, 2.0], [57.0, 2.0], [57.1, 2.0], [57.2, 2.0], [57.3, 2.0], [57.4, 2.0], [57.5, 2.0], [57.6, 2.0], [57.7, 2.0], [57.8, 2.0], [57.9, 2.0], [58.0, 2.0], [58.1, 2.0], [58.2, 2.0], [58.3, 2.0], [58.4, 2.0], [58.5, 2.0], [58.6, 2.0], [58.7, 2.0], [58.8, 2.0], [58.9, 2.0], [59.0, 2.0], [59.1, 2.0], [59.2, 2.0], [59.3, 2.0], [59.4, 2.0], [59.5, 2.0], [59.6, 2.0], [59.7, 2.0], [59.8, 2.0], [59.9, 2.0], [60.0, 2.0], [60.1, 2.0], [60.2, 2.0], [60.3, 2.0], [60.4, 2.0], [60.5, 2.0], [60.6, 2.0], [60.7, 2.0], [60.8, 2.0], [60.9, 2.0], [61.0, 2.0], [61.1, 2.0], [61.2, 2.0], [61.3, 2.0], [61.4, 2.0], [61.5, 2.0], [61.6, 2.0], [61.7, 2.0], [61.8, 2.0], [61.9, 2.0], [62.0, 2.0], [62.1, 2.0], [62.2, 2.0], [62.3, 2.0], [62.4, 2.0], [62.5, 2.0], [62.6, 2.0], [62.7, 2.0], [62.8, 2.0], [62.9, 2.0], [63.0, 2.0], [63.1, 2.0], [63.2, 2.0], [63.3, 2.0], [63.4, 2.0], [63.5, 2.0], [63.6, 2.0], [63.7, 2.0], [63.8, 2.0], [63.9, 2.0], [64.0, 2.0], [64.1, 2.0], [64.2, 2.0], [64.3, 2.0], [64.4, 2.0], [64.5, 2.0], [64.6, 2.0], [64.7, 2.0], [64.8, 2.0], [64.9, 2.0], [65.0, 2.0], [65.1, 2.0], [65.2, 2.0], [65.3, 2.0], [65.4, 2.0], [65.5, 2.0], [65.6, 2.0], [65.7, 2.0], [65.8, 2.0], [65.9, 2.0], [66.0, 2.0], [66.1, 2.0], [66.2, 2.0], [66.3, 2.0], [66.4, 2.0], [66.5, 2.0], [66.6, 2.0], [66.7, 2.0], [66.8, 2.0], [66.9, 2.0], [67.0, 2.0], [67.1, 2.0], [67.2, 2.0], [67.3, 2.0], [67.4, 2.0], [67.5, 2.0], [67.6, 2.0], [67.7, 2.0], [67.8, 2.0], [67.9, 2.0], [68.0, 2.0], [68.1, 2.0], [68.2, 2.0], [68.3, 2.0], [68.4, 2.0], [68.5, 2.0], [68.6, 2.0], [68.7, 2.0], [68.8, 2.0], [68.9, 2.0], [69.0, 2.0], [69.1, 2.0], [69.2, 2.0], [69.3, 2.0], [69.4, 2.0], [69.5, 2.0], [69.6, 2.0], [69.7, 2.0], [69.8, 2.0], [69.9, 2.0], [70.0, 2.0], [70.1, 2.0], [70.2, 2.0], [70.3, 2.0], [70.4, 2.0], [70.5, 2.0], [70.6, 2.0], [70.7, 2.0], [70.8, 2.0], [70.9, 2.0], [71.0, 2.0], [71.1, 2.0], [71.2, 2.0], [71.3, 2.0], [71.4, 2.0], [71.5, 2.0], [71.6, 2.0], [71.7, 2.0], [71.8, 2.0], [71.9, 2.0], [72.0, 2.0], [72.1, 2.0], [72.2, 2.0], [72.3, 2.0], [72.4, 2.0], [72.5, 2.0], [72.6, 2.0], [72.7, 2.0], [72.8, 2.0], [72.9, 2.0], [73.0, 2.0], [73.1, 2.0], [73.2, 2.0], [73.3, 2.0], [73.4, 2.0], [73.5, 2.0], [73.6, 2.0], [73.7, 2.0], [73.8, 2.0], [73.9, 2.0], [74.0, 2.0], [74.1, 2.0], [74.2, 2.0], [74.3, 2.0], [74.4, 2.0], [74.5, 2.0], [74.6, 2.0], [74.7, 2.0], [74.8, 2.0], [74.9, 2.0], [75.0, 2.0], [75.1, 2.0], [75.2, 2.0], [75.3, 2.0], [75.4, 2.0], [75.5, 2.0], [75.6, 2.0], [75.7, 2.0], [75.8, 2.0], [75.9, 2.0], [76.0, 2.0], [76.1, 2.0], [76.2, 2.0], [76.3, 2.0], [76.4, 2.0], [76.5, 2.0], [76.6, 2.0], [76.7, 2.0], [76.8, 2.0], [76.9, 2.0], [77.0, 2.0], [77.1, 2.0], [77.2, 2.0], [77.3, 2.0], [77.4, 2.0], [77.5, 2.0], [77.6, 2.0], [77.7, 2.0], [77.8, 2.0], [77.9, 2.0], [78.0, 2.0], [78.1, 2.0], [78.2, 2.0], [78.3, 2.0], [78.4, 2.0], [78.5, 2.0], [78.6, 2.0], [78.7, 2.0], [78.8, 2.0], [78.9, 2.0], [79.0, 2.0], [79.1, 2.0], [79.2, 2.0], [79.3, 2.0], [79.4, 2.0], [79.5, 2.0], [79.6, 2.0], [79.7, 3.0], [79.8, 3.0], [79.9, 3.0], [80.0, 3.0], [80.1, 3.0], [80.2, 3.0], [80.3, 3.0], [80.4, 3.0], [80.5, 3.0], [80.6, 3.0], [80.7, 3.0], [80.8, 3.0], [80.9, 3.0], [81.0, 3.0], [81.1, 3.0], [81.2, 3.0], [81.3, 3.0], [81.4, 3.0], [81.5, 3.0], [81.6, 3.0], [81.7, 3.0], [81.8, 3.0], [81.9, 3.0], [82.0, 3.0], [82.1, 3.0], [82.2, 3.0], [82.3, 3.0], [82.4, 3.0], [82.5, 3.0], [82.6, 3.0], [82.7, 3.0], [82.8, 3.0], [82.9, 3.0], [83.0, 3.0], [83.1, 3.0], [83.2, 3.0], [83.3, 3.0], [83.4, 3.0], [83.5, 3.0], [83.6, 3.0], [83.7, 3.0], [83.8, 3.0], [83.9, 3.0], [84.0, 3.0], [84.1, 3.0], [84.2, 3.0], [84.3, 3.0], [84.4, 3.0], [84.5, 3.0], [84.6, 3.0], [84.7, 3.0], [84.8, 3.0], [84.9, 3.0], [85.0, 3.0], [85.1, 3.0], [85.2, 3.0], [85.3, 3.0], [85.4, 3.0], [85.5, 3.0], [85.6, 3.0], [85.7, 3.0], [85.8, 3.0], [85.9, 3.0], [86.0, 3.0], [86.1, 3.0], [86.2, 3.0], [86.3, 3.0], [86.4, 3.0], [86.5, 3.0], [86.6, 3.0], [86.7, 3.0], [86.8, 3.0], [86.9, 3.0], [87.0, 3.0], [87.1, 3.0], [87.2, 3.0], [87.3, 3.0], [87.4, 3.0], [87.5, 3.0], [87.6, 3.0], [87.7, 3.0], [87.8, 3.0], [87.9, 3.0], [88.0, 3.0], [88.1, 3.0], [88.2, 3.0], [88.3, 3.0], [88.4, 3.0], [88.5, 3.0], [88.6, 3.0], [88.7, 3.0], [88.8, 3.0], [88.9, 3.0], [89.0, 3.0], [89.1, 3.0], [89.2, 3.0], [89.3, 3.0], [89.4, 3.0], [89.5, 3.0], [89.6, 3.0], [89.7, 3.0], [89.8, 3.0], [89.9, 3.0], [90.0, 3.0], [90.1, 3.0], [90.2, 3.0], [90.3, 3.0], [90.4, 3.0], [90.5, 3.0], [90.6, 3.0], [90.7, 3.0], [90.8, 3.0], [90.9, 3.0], [91.0, 3.0], [91.1, 3.0], [91.2, 3.0], [91.3, 3.0], [91.4, 3.0], [91.5, 3.0], [91.6, 3.0], [91.7, 3.0], [91.8, 3.0], [91.9, 3.0], [92.0, 3.0], [92.1, 3.0], [92.2, 3.0], [92.3, 3.0], [92.4, 3.0], [92.5, 3.0], [92.6, 3.0], [92.7, 3.0], [92.8, 3.0], [92.9, 3.0], [93.0, 3.0], [93.1, 3.0], [93.2, 3.0], [93.3, 3.0], [93.4, 3.0], [93.5, 3.0], [93.6, 3.0], [93.7, 3.0], [93.8, 3.0], [93.9, 3.0], [94.0, 3.0], [94.1, 3.0], [94.2, 3.0], [94.3, 3.0], [94.4, 3.0], [94.5, 3.0], [94.6, 3.0], [94.7, 3.0], [94.8, 3.0], [94.9, 3.0], [95.0, 3.0], [95.1, 3.0], [95.2, 3.0], [95.3, 4.0], [95.4, 4.0], [95.5, 4.0], [95.6, 4.0], [95.7, 4.0], [95.8, 4.0], [95.9, 4.0], [96.0, 4.0], [96.1, 4.0], [96.2, 4.0], [96.3, 4.0], [96.4, 4.0], [96.5, 4.0], [96.6, 4.0], [96.7, 4.0], [96.8, 4.0], [96.9, 4.0], [97.0, 4.0], [97.1, 5.0], [97.2, 5.0], [97.3, 5.0], [97.4, 5.0], [97.5, 5.0], [97.6, 5.0], [97.7, 5.0], [97.8, 5.0], [97.9, 5.0], [98.0, 6.0], [98.1, 6.0], [98.2, 6.0], [98.3, 6.0], [98.4, 6.0], [98.5, 7.0], [98.6, 7.0], [98.7, 8.0], [98.8, 8.0], [98.9, 8.0], [99.0, 9.0], [99.1, 10.0], [99.2, 11.0], [99.3, 12.0], [99.4, 14.0], [99.5, 20.0], [99.6, 30.0], [99.7, 39.0], [99.8, 46.0], [99.9, 50.0]], "isOverall": false, "label": "Delete ALLERGY", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 2.0], [22.5, 2.0], [22.6, 2.0], [22.7, 3.0], [22.8, 3.0], [22.9, 3.0], [23.0, 3.0], [23.1, 3.0], [23.2, 3.0], [23.3, 3.0], [23.4, 3.0], [23.5, 3.0], [23.6, 3.0], [23.7, 3.0], [23.8, 3.0], [23.9, 3.0], [24.0, 3.0], [24.1, 3.0], [24.2, 3.0], [24.3, 3.0], [24.4, 3.0], [24.5, 3.0], [24.6, 3.0], [24.7, 3.0], [24.8, 3.0], [24.9, 3.0], [25.0, 3.0], [25.1, 3.0], [25.2, 3.0], [25.3, 3.0], [25.4, 3.0], [25.5, 3.0], [25.6, 3.0], [25.7, 3.0], [25.8, 3.0], [25.9, 3.0], [26.0, 3.0], [26.1, 3.0], [26.2, 3.0], [26.3, 3.0], [26.4, 3.0], [26.5, 3.0], [26.6, 3.0], [26.7, 3.0], [26.8, 3.0], [26.9, 3.0], [27.0, 3.0], [27.1, 3.0], [27.2, 3.0], [27.3, 3.0], [27.4, 3.0], [27.5, 3.0], [27.6, 3.0], [27.7, 3.0], [27.8, 3.0], [27.9, 3.0], [28.0, 3.0], [28.1, 3.0], [28.2, 3.0], [28.3, 3.0], [28.4, 3.0], [28.5, 3.0], [28.6, 3.0], [28.7, 3.0], [28.8, 3.0], [28.9, 3.0], [29.0, 3.0], [29.1, 3.0], [29.2, 3.0], [29.3, 3.0], [29.4, 3.0], [29.5, 3.0], [29.6, 3.0], [29.7, 3.0], [29.8, 3.0], [29.9, 3.0], [30.0, 3.0], [30.1, 3.0], [30.2, 3.0], [30.3, 3.0], [30.4, 3.0], [30.5, 3.0], [30.6, 3.0], [30.7, 3.0], [30.8, 3.0], [30.9, 3.0], [31.0, 3.0], [31.1, 3.0], [31.2, 3.0], [31.3, 3.0], [31.4, 3.0], [31.5, 3.0], [31.6, 3.0], [31.7, 3.0], [31.8, 3.0], [31.9, 3.0], [32.0, 3.0], [32.1, 3.0], [32.2, 3.0], [32.3, 3.0], [32.4, 3.0], [32.5, 3.0], [32.6, 3.0], [32.7, 3.0], [32.8, 3.0], [32.9, 3.0], [33.0, 3.0], [33.1, 3.0], [33.2, 3.0], [33.3, 3.0], [33.4, 3.0], [33.5, 3.0], [33.6, 3.0], [33.7, 3.0], [33.8, 3.0], [33.9, 3.0], [34.0, 3.0], [34.1, 3.0], [34.2, 3.0], [34.3, 3.0], [34.4, 3.0], [34.5, 3.0], [34.6, 3.0], [34.7, 3.0], [34.8, 3.0], [34.9, 3.0], [35.0, 3.0], [35.1, 3.0], [35.2, 3.0], [35.3, 3.0], [35.4, 3.0], [35.5, 3.0], [35.6, 3.0], [35.7, 3.0], [35.8, 3.0], [35.9, 3.0], [36.0, 3.0], [36.1, 3.0], [36.2, 3.0], [36.3, 3.0], [36.4, 3.0], [36.5, 3.0], [36.6, 3.0], [36.7, 3.0], [36.8, 3.0], [36.9, 3.0], [37.0, 3.0], [37.1, 3.0], [37.2, 3.0], [37.3, 3.0], [37.4, 3.0], [37.5, 3.0], [37.6, 3.0], [37.7, 3.0], [37.8, 3.0], [37.9, 3.0], [38.0, 3.0], [38.1, 3.0], [38.2, 3.0], [38.3, 3.0], [38.4, 3.0], [38.5, 3.0], [38.6, 3.0], [38.7, 3.0], [38.8, 3.0], [38.9, 3.0], [39.0, 3.0], [39.1, 3.0], [39.2, 3.0], [39.3, 3.0], [39.4, 3.0], [39.5, 3.0], [39.6, 3.0], [39.7, 3.0], [39.8, 3.0], [39.9, 3.0], [40.0, 3.0], [40.1, 3.0], [40.2, 3.0], [40.3, 3.0], [40.4, 3.0], [40.5, 3.0], [40.6, 3.0], [40.7, 3.0], [40.8, 3.0], [40.9, 3.0], [41.0, 3.0], [41.1, 3.0], [41.2, 3.0], [41.3, 3.0], [41.4, 3.0], [41.5, 3.0], [41.6, 3.0], [41.7, 3.0], [41.8, 3.0], [41.9, 3.0], [42.0, 3.0], [42.1, 3.0], [42.2, 3.0], [42.3, 3.0], [42.4, 3.0], [42.5, 3.0], [42.6, 3.0], [42.7, 3.0], [42.8, 3.0], [42.9, 3.0], [43.0, 3.0], [43.1, 3.0], [43.2, 3.0], [43.3, 3.0], [43.4, 3.0], [43.5, 3.0], [43.6, 3.0], [43.7, 3.0], [43.8, 3.0], [43.9, 3.0], [44.0, 3.0], [44.1, 3.0], [44.2, 3.0], [44.3, 3.0], [44.4, 3.0], [44.5, 3.0], [44.6, 3.0], [44.7, 3.0], [44.8, 3.0], [44.9, 3.0], [45.0, 3.0], [45.1, 3.0], [45.2, 3.0], [45.3, 3.0], [45.4, 3.0], [45.5, 3.0], [45.6, 3.0], [45.7, 3.0], [45.8, 3.0], [45.9, 3.0], [46.0, 3.0], [46.1, 3.0], [46.2, 3.0], [46.3, 3.0], [46.4, 3.0], [46.5, 3.0], [46.6, 3.0], [46.7, 3.0], [46.8, 3.0], [46.9, 3.0], [47.0, 3.0], [47.1, 3.0], [47.2, 3.0], [47.3, 3.0], [47.4, 3.0], [47.5, 3.0], [47.6, 3.0], [47.7, 3.0], [47.8, 3.0], [47.9, 3.0], [48.0, 3.0], [48.1, 3.0], [48.2, 3.0], [48.3, 3.0], [48.4, 3.0], [48.5, 3.0], [48.6, 3.0], [48.7, 3.0], [48.8, 3.0], [48.9, 3.0], [49.0, 3.0], [49.1, 3.0], [49.2, 3.0], [49.3, 3.0], [49.4, 3.0], [49.5, 3.0], [49.6, 3.0], [49.7, 3.0], [49.8, 3.0], [49.9, 3.0], [50.0, 3.0], [50.1, 3.0], [50.2, 3.0], [50.3, 3.0], [50.4, 3.0], [50.5, 3.0], [50.6, 3.0], [50.7, 3.0], [50.8, 3.0], [50.9, 3.0], [51.0, 3.0], [51.1, 3.0], [51.2, 3.0], [51.3, 3.0], [51.4, 3.0], [51.5, 3.0], [51.6, 3.0], [51.7, 3.0], [51.8, 3.0], [51.9, 3.0], [52.0, 3.0], [52.1, 3.0], [52.2, 3.0], [52.3, 3.0], [52.4, 3.0], [52.5, 3.0], [52.6, 3.0], [52.7, 3.0], [52.8, 3.0], [52.9, 3.0], [53.0, 3.0], [53.1, 3.0], [53.2, 3.0], [53.3, 3.0], [53.4, 3.0], [53.5, 3.0], [53.6, 3.0], [53.7, 3.0], [53.8, 3.0], [53.9, 3.0], [54.0, 3.0], [54.1, 3.0], [54.2, 3.0], [54.3, 3.0], [54.4, 3.0], [54.5, 3.0], [54.6, 3.0], [54.7, 3.0], [54.8, 3.0], [54.9, 3.0], [55.0, 3.0], [55.1, 3.0], [55.2, 3.0], [55.3, 3.0], [55.4, 3.0], [55.5, 3.0], [55.6, 3.0], [55.7, 3.0], [55.8, 3.0], [55.9, 3.0], [56.0, 3.0], [56.1, 3.0], [56.2, 3.0], [56.3, 3.0], [56.4, 3.0], [56.5, 3.0], [56.6, 3.0], [56.7, 3.0], [56.8, 3.0], [56.9, 3.0], [57.0, 3.0], [57.1, 3.0], [57.2, 3.0], [57.3, 3.0], [57.4, 3.0], [57.5, 3.0], [57.6, 3.0], [57.7, 3.0], [57.8, 3.0], [57.9, 3.0], [58.0, 3.0], [58.1, 3.0], [58.2, 3.0], [58.3, 3.0], [58.4, 3.0], [58.5, 3.0], [58.6, 3.0], [58.7, 3.0], [58.8, 3.0], [58.9, 3.0], [59.0, 3.0], [59.1, 3.0], [59.2, 3.0], [59.3, 3.0], [59.4, 3.0], [59.5, 3.0], [59.6, 3.0], [59.7, 3.0], [59.8, 3.0], [59.9, 3.0], [60.0, 3.0], [60.1, 3.0], [60.2, 3.0], [60.3, 3.0], [60.4, 3.0], [60.5, 3.0], [60.6, 3.0], [60.7, 3.0], [60.8, 3.0], [60.9, 3.0], [61.0, 3.0], [61.1, 3.0], [61.2, 3.0], [61.3, 3.0], [61.4, 3.0], [61.5, 3.0], [61.6, 3.0], [61.7, 3.0], [61.8, 3.0], [61.9, 3.0], [62.0, 3.0], [62.1, 3.0], [62.2, 3.0], [62.3, 3.0], [62.4, 3.0], [62.5, 3.0], [62.6, 3.0], [62.7, 3.0], [62.8, 3.0], [62.9, 3.0], [63.0, 3.0], [63.1, 3.0], [63.2, 3.0], [63.3, 3.0], [63.4, 3.0], [63.5, 3.0], [63.6, 3.0], [63.7, 3.0], [63.8, 3.0], [63.9, 3.0], [64.0, 3.0], [64.1, 3.0], [64.2, 3.0], [64.3, 3.0], [64.4, 3.0], [64.5, 3.0], [64.6, 3.0], [64.7, 3.0], [64.8, 3.0], [64.9, 3.0], [65.0, 3.0], [65.1, 3.0], [65.2, 3.0], [65.3, 3.0], [65.4, 3.0], [65.5, 3.0], [65.6, 3.0], [65.7, 3.0], [65.8, 3.0], [65.9, 3.0], [66.0, 3.0], [66.1, 3.0], [66.2, 3.0], [66.3, 3.0], [66.4, 3.0], [66.5, 3.0], [66.6, 3.0], [66.7, 3.0], [66.8, 3.0], [66.9, 3.0], [67.0, 3.0], [67.1, 3.0], [67.2, 3.0], [67.3, 3.0], [67.4, 3.0], [67.5, 3.0], [67.6, 3.0], [67.7, 3.0], [67.8, 3.0], [67.9, 3.0], [68.0, 3.0], [68.1, 3.0], [68.2, 3.0], [68.3, 3.0], [68.4, 3.0], [68.5, 3.0], [68.6, 3.0], [68.7, 3.0], [68.8, 3.0], [68.9, 3.0], [69.0, 3.0], [69.1, 3.0], [69.2, 3.0], [69.3, 3.0], [69.4, 3.0], [69.5, 3.0], [69.6, 3.0], [69.7, 3.0], [69.8, 3.0], [69.9, 3.0], [70.0, 3.0], [70.1, 3.0], [70.2, 3.0], [70.3, 3.0], [70.4, 3.0], [70.5, 3.0], [70.6, 3.0], [70.7, 3.0], [70.8, 3.0], [70.9, 3.0], [71.0, 3.0], [71.1, 3.0], [71.2, 3.0], [71.3, 3.0], [71.4, 3.0], [71.5, 3.0], [71.6, 3.0], [71.7, 3.0], [71.8, 3.0], [71.9, 3.0], [72.0, 3.0], [72.1, 3.0], [72.2, 3.0], [72.3, 3.0], [72.4, 3.0], [72.5, 3.0], [72.6, 3.0], [72.7, 3.0], [72.8, 3.0], [72.9, 3.0], [73.0, 3.0], [73.1, 3.0], [73.2, 3.0], [73.3, 3.0], [73.4, 3.0], [73.5, 3.0], [73.6, 3.0], [73.7, 3.0], [73.8, 3.0], [73.9, 3.0], [74.0, 3.0], [74.1, 3.0], [74.2, 3.0], [74.3, 3.0], [74.4, 3.0], [74.5, 3.0], [74.6, 3.0], [74.7, 3.0], [74.8, 3.0], [74.9, 3.0], [75.0, 3.0], [75.1, 3.0], [75.2, 3.0], [75.3, 3.0], [75.4, 3.0], [75.5, 4.0], [75.6, 4.0], [75.7, 4.0], [75.8, 4.0], [75.9, 4.0], [76.0, 4.0], [76.1, 4.0], [76.2, 4.0], [76.3, 4.0], [76.4, 4.0], [76.5, 4.0], [76.6, 4.0], [76.7, 4.0], [76.8, 4.0], [76.9, 4.0], [77.0, 4.0], [77.1, 4.0], [77.2, 4.0], [77.3, 4.0], [77.4, 4.0], [77.5, 4.0], [77.6, 4.0], [77.7, 4.0], [77.8, 4.0], [77.9, 4.0], [78.0, 4.0], [78.1, 4.0], [78.2, 4.0], [78.3, 4.0], [78.4, 4.0], [78.5, 4.0], [78.6, 4.0], [78.7, 4.0], [78.8, 4.0], [78.9, 4.0], [79.0, 4.0], [79.1, 4.0], [79.2, 4.0], [79.3, 4.0], [79.4, 4.0], [79.5, 4.0], [79.6, 4.0], [79.7, 4.0], [79.8, 4.0], [79.9, 4.0], [80.0, 4.0], [80.1, 4.0], [80.2, 4.0], [80.3, 4.0], [80.4, 4.0], [80.5, 4.0], [80.6, 4.0], [80.7, 4.0], [80.8, 4.0], [80.9, 4.0], [81.0, 4.0], [81.1, 4.0], [81.2, 4.0], [81.3, 4.0], [81.4, 4.0], [81.5, 4.0], [81.6, 4.0], [81.7, 4.0], [81.8, 4.0], [81.9, 4.0], [82.0, 4.0], [82.1, 4.0], [82.2, 4.0], [82.3, 4.0], [82.4, 4.0], [82.5, 4.0], [82.6, 4.0], [82.7, 4.0], [82.8, 4.0], [82.9, 4.0], [83.0, 4.0], [83.1, 4.0], [83.2, 4.0], [83.3, 4.0], [83.4, 4.0], [83.5, 4.0], [83.6, 4.0], [83.7, 4.0], [83.8, 4.0], [83.9, 4.0], [84.0, 4.0], [84.1, 4.0], [84.2, 4.0], [84.3, 4.0], [84.4, 4.0], [84.5, 4.0], [84.6, 4.0], [84.7, 4.0], [84.8, 4.0], [84.9, 4.0], [85.0, 4.0], [85.1, 4.0], [85.2, 4.0], [85.3, 4.0], [85.4, 4.0], [85.5, 4.0], [85.6, 4.0], [85.7, 4.0], [85.8, 4.0], [85.9, 4.0], [86.0, 4.0], [86.1, 4.0], [86.2, 4.0], [86.3, 4.0], [86.4, 4.0], [86.5, 4.0], [86.6, 4.0], [86.7, 4.0], [86.8, 4.0], [86.9, 4.0], [87.0, 4.0], [87.1, 4.0], [87.2, 4.0], [87.3, 4.0], [87.4, 4.0], [87.5, 4.0], [87.6, 4.0], [87.7, 4.0], [87.8, 4.0], [87.9, 4.0], [88.0, 4.0], [88.1, 4.0], [88.2, 4.0], [88.3, 4.0], [88.4, 4.0], [88.5, 4.0], [88.6, 4.0], [88.7, 4.0], [88.8, 4.0], [88.9, 4.0], [89.0, 4.0], [89.1, 4.0], [89.2, 4.0], [89.3, 4.0], [89.4, 4.0], [89.5, 4.0], [89.6, 4.0], [89.7, 4.0], [89.8, 4.0], [89.9, 4.0], [90.0, 4.0], [90.1, 4.0], [90.2, 4.0], [90.3, 4.0], [90.4, 4.0], [90.5, 4.0], [90.6, 4.0], [90.7, 4.0], [90.8, 4.0], [90.9, 4.0], [91.0, 4.0], [91.1, 4.0], [91.2, 4.0], [91.3, 4.0], [91.4, 4.0], [91.5, 4.0], [91.6, 4.0], [91.7, 4.0], [91.8, 4.0], [91.9, 4.0], [92.0, 4.0], [92.1, 4.0], [92.2, 4.0], [92.3, 4.0], [92.4, 4.0], [92.5, 4.0], [92.6, 4.0], [92.7, 4.0], [92.8, 4.0], [92.9, 4.0], [93.0, 5.0], [93.1, 5.0], [93.2, 5.0], [93.3, 5.0], [93.4, 5.0], [93.5, 5.0], [93.6, 5.0], [93.7, 5.0], [93.8, 5.0], [93.9, 5.0], [94.0, 5.0], [94.1, 5.0], [94.2, 5.0], [94.3, 5.0], [94.4, 5.0], [94.5, 5.0], [94.6, 5.0], [94.7, 5.0], [94.8, 5.0], [94.9, 5.0], [95.0, 5.0], [95.1, 5.0], [95.2, 5.0], [95.3, 5.0], [95.4, 5.0], [95.5, 5.0], [95.6, 5.0], [95.7, 5.0], [95.8, 5.0], [95.9, 5.0], [96.0, 5.0], [96.1, 5.0], [96.2, 6.0], [96.3, 6.0], [96.4, 6.0], [96.5, 6.0], [96.6, 6.0], [96.7, 6.0], [96.8, 6.0], [96.9, 6.0], [97.0, 6.0], [97.1, 6.0], [97.2, 6.0], [97.3, 7.0], [97.4, 7.0], [97.5, 7.0], [97.6, 7.0], [97.7, 7.0], [97.8, 7.0], [97.9, 7.0], [98.0, 8.0], [98.1, 8.0], [98.2, 8.0], [98.3, 8.0], [98.4, 8.0], [98.5, 9.0], [98.6, 9.0], [98.7, 10.0], [98.8, 10.0], [98.9, 11.0], [99.0, 11.0], [99.1, 12.0], [99.2, 14.0], [99.3, 16.0], [99.4, 20.0], [99.5, 29.0], [99.6, 35.0], [99.7, 43.0], [99.8, 47.0], [99.9, 51.0], [100.0, 108.0]], "isOverall": false, "label": "Post ALLERGY", "isController": false}, {"data": [[0.0, 0.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 1.0], [5.9, 1.0], [6.0, 1.0], [6.1, 1.0], [6.2, 1.0], [6.3, 1.0], [6.4, 1.0], [6.5, 1.0], [6.6, 1.0], [6.7, 1.0], [6.8, 1.0], [6.9, 1.0], [7.0, 1.0], [7.1, 1.0], [7.2, 1.0], [7.3, 1.0], [7.4, 1.0], [7.5, 1.0], [7.6, 1.0], [7.7, 1.0], [7.8, 1.0], [7.9, 1.0], [8.0, 1.0], [8.1, 1.0], [8.2, 1.0], [8.3, 1.0], [8.4, 1.0], [8.5, 1.0], [8.6, 1.0], [8.7, 1.0], [8.8, 1.0], [8.9, 1.0], [9.0, 1.0], [9.1, 1.0], [9.2, 1.0], [9.3, 1.0], [9.4, 1.0], [9.5, 1.0], [9.6, 1.0], [9.7, 1.0], [9.8, 1.0], [9.9, 1.0], [10.0, 1.0], [10.1, 1.0], [10.2, 1.0], [10.3, 1.0], [10.4, 1.0], [10.5, 1.0], [10.6, 1.0], [10.7, 1.0], [10.8, 1.0], [10.9, 1.0], [11.0, 1.0], [11.1, 1.0], [11.2, 1.0], [11.3, 1.0], [11.4, 1.0], [11.5, 1.0], [11.6, 1.0], [11.7, 1.0], [11.8, 1.0], [11.9, 1.0], [12.0, 1.0], [12.1, 1.0], [12.2, 1.0], [12.3, 1.0], [12.4, 1.0], [12.5, 1.0], [12.6, 1.0], [12.7, 1.0], [12.8, 1.0], [12.9, 1.0], [13.0, 1.0], [13.1, 1.0], [13.2, 1.0], [13.3, 1.0], [13.4, 1.0], [13.5, 1.0], [13.6, 1.0], [13.7, 1.0], [13.8, 1.0], [13.9, 1.0], [14.0, 1.0], [14.1, 1.0], [14.2, 1.0], [14.3, 1.0], [14.4, 1.0], [14.5, 1.0], [14.6, 1.0], [14.7, 1.0], [14.8, 1.0], [14.9, 1.0], [15.0, 1.0], [15.1, 1.0], [15.2, 1.0], [15.3, 1.0], [15.4, 1.0], [15.5, 1.0], [15.6, 1.0], [15.7, 1.0], [15.8, 1.0], [15.9, 1.0], [16.0, 1.0], [16.1, 1.0], [16.2, 1.0], [16.3, 1.0], [16.4, 1.0], [16.5, 1.0], [16.6, 1.0], [16.7, 1.0], [16.8, 1.0], [16.9, 1.0], [17.0, 1.0], [17.1, 1.0], [17.2, 1.0], [17.3, 1.0], [17.4, 1.0], [17.5, 1.0], [17.6, 1.0], [17.7, 1.0], [17.8, 1.0], [17.9, 1.0], [18.0, 1.0], [18.1, 1.0], [18.2, 1.0], [18.3, 1.0], [18.4, 1.0], [18.5, 1.0], [18.6, 1.0], [18.7, 1.0], [18.8, 1.0], [18.9, 1.0], [19.0, 1.0], [19.1, 1.0], [19.2, 1.0], [19.3, 1.0], [19.4, 1.0], [19.5, 1.0], [19.6, 1.0], [19.7, 1.0], [19.8, 1.0], [19.9, 1.0], [20.0, 1.0], [20.1, 1.0], [20.2, 1.0], [20.3, 1.0], [20.4, 1.0], [20.5, 1.0], [20.6, 1.0], [20.7, 1.0], [20.8, 1.0], [20.9, 1.0], [21.0, 1.0], [21.1, 1.0], [21.2, 1.0], [21.3, 1.0], [21.4, 1.0], [21.5, 1.0], [21.6, 1.0], [21.7, 1.0], [21.8, 1.0], [21.9, 1.0], [22.0, 1.0], [22.1, 1.0], [22.2, 1.0], [22.3, 1.0], [22.4, 1.0], [22.5, 1.0], [22.6, 1.0], [22.7, 1.0], [22.8, 1.0], [22.9, 1.0], [23.0, 1.0], [23.1, 1.0], [23.2, 1.0], [23.3, 1.0], [23.4, 1.0], [23.5, 1.0], [23.6, 1.0], [23.7, 1.0], [23.8, 1.0], [23.9, 1.0], [24.0, 1.0], [24.1, 1.0], [24.2, 1.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 2.0], [29.6, 2.0], [29.7, 2.0], [29.8, 2.0], [29.9, 2.0], [30.0, 2.0], [30.1, 2.0], [30.2, 2.0], [30.3, 2.0], [30.4, 2.0], [30.5, 2.0], [30.6, 2.0], [30.7, 2.0], [30.8, 2.0], [30.9, 2.0], [31.0, 2.0], [31.1, 2.0], [31.2, 2.0], [31.3, 2.0], [31.4, 2.0], [31.5, 2.0], [31.6, 2.0], [31.7, 2.0], [31.8, 2.0], [31.9, 2.0], [32.0, 2.0], [32.1, 2.0], [32.2, 2.0], [32.3, 2.0], [32.4, 2.0], [32.5, 2.0], [32.6, 2.0], [32.7, 2.0], [32.8, 2.0], [32.9, 2.0], [33.0, 2.0], [33.1, 2.0], [33.2, 2.0], [33.3, 2.0], [33.4, 2.0], [33.5, 2.0], [33.6, 2.0], [33.7, 2.0], [33.8, 2.0], [33.9, 2.0], [34.0, 2.0], [34.1, 2.0], [34.2, 2.0], [34.3, 2.0], [34.4, 2.0], [34.5, 2.0], [34.6, 2.0], [34.7, 2.0], [34.8, 2.0], [34.9, 2.0], [35.0, 2.0], [35.1, 2.0], [35.2, 2.0], [35.3, 2.0], [35.4, 2.0], [35.5, 2.0], [35.6, 2.0], [35.7, 2.0], [35.8, 2.0], [35.9, 2.0], [36.0, 2.0], [36.1, 2.0], [36.2, 2.0], [36.3, 2.0], [36.4, 2.0], [36.5, 2.0], [36.6, 2.0], [36.7, 2.0], [36.8, 2.0], [36.9, 2.0], [37.0, 2.0], [37.1, 2.0], [37.2, 2.0], [37.3, 2.0], [37.4, 2.0], [37.5, 2.0], [37.6, 2.0], [37.7, 2.0], [37.8, 2.0], [37.9, 2.0], [38.0, 2.0], [38.1, 2.0], [38.2, 2.0], [38.3, 2.0], [38.4, 2.0], [38.5, 2.0], [38.6, 2.0], [38.7, 2.0], [38.8, 2.0], [38.9, 2.0], [39.0, 2.0], [39.1, 2.0], [39.2, 2.0], [39.3, 2.0], [39.4, 2.0], [39.5, 2.0], [39.6, 2.0], [39.7, 2.0], [39.8, 2.0], [39.9, 2.0], [40.0, 2.0], [40.1, 2.0], [40.2, 2.0], [40.3, 2.0], [40.4, 2.0], [40.5, 2.0], [40.6, 2.0], [40.7, 2.0], [40.8, 2.0], [40.9, 2.0], [41.0, 2.0], [41.1, 2.0], [41.2, 2.0], [41.3, 2.0], [41.4, 2.0], [41.5, 2.0], [41.6, 2.0], [41.7, 2.0], [41.8, 2.0], [41.9, 2.0], [42.0, 2.0], [42.1, 2.0], [42.2, 2.0], [42.3, 2.0], [42.4, 2.0], [42.5, 2.0], [42.6, 2.0], [42.7, 2.0], [42.8, 2.0], [42.9, 2.0], [43.0, 2.0], [43.1, 2.0], [43.2, 2.0], [43.3, 2.0], [43.4, 2.0], [43.5, 2.0], [43.6, 2.0], [43.7, 2.0], [43.8, 2.0], [43.9, 2.0], [44.0, 2.0], [44.1, 2.0], [44.2, 2.0], [44.3, 2.0], [44.4, 2.0], [44.5, 2.0], [44.6, 2.0], [44.7, 2.0], [44.8, 2.0], [44.9, 2.0], [45.0, 2.0], [45.1, 2.0], [45.2, 2.0], [45.3, 2.0], [45.4, 2.0], [45.5, 2.0], [45.6, 2.0], [45.7, 2.0], [45.8, 2.0], [45.9, 2.0], [46.0, 2.0], [46.1, 2.0], [46.2, 2.0], [46.3, 2.0], [46.4, 2.0], [46.5, 2.0], [46.6, 2.0], [46.7, 2.0], [46.8, 2.0], [46.9, 2.0], [47.0, 2.0], [47.1, 2.0], [47.2, 2.0], [47.3, 2.0], [47.4, 2.0], [47.5, 2.0], [47.6, 2.0], [47.7, 2.0], [47.8, 2.0], [47.9, 2.0], [48.0, 2.0], [48.1, 2.0], [48.2, 2.0], [48.3, 2.0], [48.4, 2.0], [48.5, 2.0], [48.6, 2.0], [48.7, 2.0], [48.8, 2.0], [48.9, 2.0], [49.0, 2.0], [49.1, 2.0], [49.2, 2.0], [49.3, 2.0], [49.4, 2.0], [49.5, 2.0], [49.6, 2.0], [49.7, 2.0], [49.8, 2.0], [49.9, 2.0], [50.0, 2.0], [50.1, 2.0], [50.2, 2.0], [50.3, 2.0], [50.4, 2.0], [50.5, 2.0], [50.6, 2.0], [50.7, 2.0], [50.8, 2.0], [50.9, 2.0], [51.0, 2.0], [51.1, 2.0], [51.2, 2.0], [51.3, 2.0], [51.4, 2.0], [51.5, 2.0], [51.6, 2.0], [51.7, 2.0], [51.8, 2.0], [51.9, 2.0], [52.0, 2.0], [52.1, 2.0], [52.2, 2.0], [52.3, 2.0], [52.4, 2.0], [52.5, 2.0], [52.6, 2.0], [52.7, 2.0], [52.8, 2.0], [52.9, 2.0], [53.0, 2.0], [53.1, 2.0], [53.2, 2.0], [53.3, 2.0], [53.4, 2.0], [53.5, 2.0], [53.6, 2.0], [53.7, 2.0], [53.8, 2.0], [53.9, 2.0], [54.0, 2.0], [54.1, 2.0], [54.2, 2.0], [54.3, 2.0], [54.4, 2.0], [54.5, 2.0], [54.6, 2.0], [54.7, 2.0], [54.8, 2.0], [54.9, 2.0], [55.0, 2.0], [55.1, 2.0], [55.2, 2.0], [55.3, 2.0], [55.4, 2.0], [55.5, 2.0], [55.6, 2.0], [55.7, 2.0], [55.8, 2.0], [55.9, 2.0], [56.0, 2.0], [56.1, 2.0], [56.2, 2.0], [56.3, 2.0], [56.4, 2.0], [56.5, 2.0], [56.6, 2.0], [56.7, 2.0], [56.8, 2.0], [56.9, 2.0], [57.0, 2.0], [57.1, 2.0], [57.2, 2.0], [57.3, 2.0], [57.4, 2.0], [57.5, 2.0], [57.6, 2.0], [57.7, 2.0], [57.8, 2.0], [57.9, 2.0], [58.0, 2.0], [58.1, 2.0], [58.2, 2.0], [58.3, 2.0], [58.4, 2.0], [58.5, 2.0], [58.6, 2.0], [58.7, 2.0], [58.8, 2.0], [58.9, 2.0], [59.0, 2.0], [59.1, 2.0], [59.2, 2.0], [59.3, 2.0], [59.4, 2.0], [59.5, 2.0], [59.6, 2.0], [59.7, 2.0], [59.8, 2.0], [59.9, 2.0], [60.0, 2.0], [60.1, 2.0], [60.2, 2.0], [60.3, 2.0], [60.4, 2.0], [60.5, 2.0], [60.6, 2.0], [60.7, 2.0], [60.8, 2.0], [60.9, 2.0], [61.0, 2.0], [61.1, 2.0], [61.2, 2.0], [61.3, 2.0], [61.4, 2.0], [61.5, 2.0], [61.6, 2.0], [61.7, 2.0], [61.8, 2.0], [61.9, 2.0], [62.0, 2.0], [62.1, 2.0], [62.2, 2.0], [62.3, 2.0], [62.4, 2.0], [62.5, 2.0], [62.6, 2.0], [62.7, 2.0], [62.8, 2.0], [62.9, 2.0], [63.0, 2.0], [63.1, 2.0], [63.2, 2.0], [63.3, 2.0], [63.4, 2.0], [63.5, 2.0], [63.6, 2.0], [63.7, 2.0], [63.8, 2.0], [63.9, 2.0], [64.0, 2.0], [64.1, 2.0], [64.2, 2.0], [64.3, 2.0], [64.4, 2.0], [64.5, 2.0], [64.6, 2.0], [64.7, 2.0], [64.8, 2.0], [64.9, 2.0], [65.0, 2.0], [65.1, 2.0], [65.2, 2.0], [65.3, 2.0], [65.4, 2.0], [65.5, 2.0], [65.6, 2.0], [65.7, 2.0], [65.8, 2.0], [65.9, 2.0], [66.0, 2.0], [66.1, 2.0], [66.2, 2.0], [66.3, 2.0], [66.4, 2.0], [66.5, 2.0], [66.6, 2.0], [66.7, 2.0], [66.8, 2.0], [66.9, 2.0], [67.0, 2.0], [67.1, 2.0], [67.2, 2.0], [67.3, 2.0], [67.4, 2.0], [67.5, 2.0], [67.6, 2.0], [67.7, 2.0], [67.8, 2.0], [67.9, 2.0], [68.0, 2.0], [68.1, 2.0], [68.2, 2.0], [68.3, 2.0], [68.4, 2.0], [68.5, 2.0], [68.6, 2.0], [68.7, 2.0], [68.8, 2.0], [68.9, 2.0], [69.0, 2.0], [69.1, 2.0], [69.2, 2.0], [69.3, 2.0], [69.4, 2.0], [69.5, 2.0], [69.6, 2.0], [69.7, 2.0], [69.8, 2.0], [69.9, 2.0], [70.0, 2.0], [70.1, 2.0], [70.2, 2.0], [70.3, 2.0], [70.4, 2.0], [70.5, 2.0], [70.6, 2.0], [70.7, 2.0], [70.8, 2.0], [70.9, 2.0], [71.0, 2.0], [71.1, 2.0], [71.2, 2.0], [71.3, 2.0], [71.4, 2.0], [71.5, 2.0], [71.6, 2.0], [71.7, 2.0], [71.8, 2.0], [71.9, 2.0], [72.0, 2.0], [72.1, 2.0], [72.2, 2.0], [72.3, 2.0], [72.4, 2.0], [72.5, 2.0], [72.6, 2.0], [72.7, 2.0], [72.8, 2.0], [72.9, 2.0], [73.0, 2.0], [73.1, 2.0], [73.2, 2.0], [73.3, 2.0], [73.4, 2.0], [73.5, 2.0], [73.6, 2.0], [73.7, 2.0], [73.8, 2.0], [73.9, 2.0], [74.0, 2.0], [74.1, 2.0], [74.2, 2.0], [74.3, 2.0], [74.4, 2.0], [74.5, 2.0], [74.6, 2.0], [74.7, 2.0], [74.8, 2.0], [74.9, 2.0], [75.0, 2.0], [75.1, 2.0], [75.2, 2.0], [75.3, 2.0], [75.4, 2.0], [75.5, 2.0], [75.6, 2.0], [75.7, 2.0], [75.8, 2.0], [75.9, 2.0], [76.0, 2.0], [76.1, 2.0], [76.2, 2.0], [76.3, 2.0], [76.4, 2.0], [76.5, 2.0], [76.6, 2.0], [76.7, 2.0], [76.8, 2.0], [76.9, 2.0], [77.0, 2.0], [77.1, 2.0], [77.2, 2.0], [77.3, 2.0], [77.4, 2.0], [77.5, 2.0], [77.6, 2.0], [77.7, 2.0], [77.8, 2.0], [77.9, 2.0], [78.0, 2.0], [78.1, 2.0], [78.2, 2.0], [78.3, 2.0], [78.4, 2.0], [78.5, 2.0], [78.6, 2.0], [78.7, 2.0], [78.8, 2.0], [78.9, 2.0], [79.0, 2.0], [79.1, 2.0], [79.2, 2.0], [79.3, 2.0], [79.4, 2.0], [79.5, 2.0], [79.6, 2.0], [79.7, 2.0], [79.8, 2.0], [79.9, 2.0], [80.0, 2.0], [80.1, 2.0], [80.2, 2.0], [80.3, 2.0], [80.4, 2.0], [80.5, 2.0], [80.6, 2.0], [80.7, 2.0], [80.8, 2.0], [80.9, 2.0], [81.0, 2.0], [81.1, 2.0], [81.2, 2.0], [81.3, 2.0], [81.4, 2.0], [81.5, 2.0], [81.6, 2.0], [81.7, 2.0], [81.8, 2.0], [81.9, 2.0], [82.0, 2.0], [82.1, 2.0], [82.2, 2.0], [82.3, 2.0], [82.4, 2.0], [82.5, 2.0], [82.6, 2.0], [82.7, 2.0], [82.8, 2.0], [82.9, 2.0], [83.0, 3.0], [83.1, 3.0], [83.2, 3.0], [83.3, 3.0], [83.4, 3.0], [83.5, 3.0], [83.6, 3.0], [83.7, 3.0], [83.8, 3.0], [83.9, 3.0], [84.0, 3.0], [84.1, 3.0], [84.2, 3.0], [84.3, 3.0], [84.4, 3.0], [84.5, 3.0], [84.6, 3.0], [84.7, 3.0], [84.8, 3.0], [84.9, 3.0], [85.0, 3.0], [85.1, 3.0], [85.2, 3.0], [85.3, 3.0], [85.4, 3.0], [85.5, 3.0], [85.6, 3.0], [85.7, 3.0], [85.8, 3.0], [85.9, 3.0], [86.0, 3.0], [86.1, 3.0], [86.2, 3.0], [86.3, 3.0], [86.4, 3.0], [86.5, 3.0], [86.6, 3.0], [86.7, 3.0], [86.8, 3.0], [86.9, 3.0], [87.0, 3.0], [87.1, 3.0], [87.2, 3.0], [87.3, 3.0], [87.4, 3.0], [87.5, 3.0], [87.6, 3.0], [87.7, 3.0], [87.8, 3.0], [87.9, 3.0], [88.0, 3.0], [88.1, 3.0], [88.2, 3.0], [88.3, 3.0], [88.4, 3.0], [88.5, 3.0], [88.6, 3.0], [88.7, 3.0], [88.8, 3.0], [88.9, 3.0], [89.0, 3.0], [89.1, 3.0], [89.2, 3.0], [89.3, 3.0], [89.4, 3.0], [89.5, 3.0], [89.6, 3.0], [89.7, 3.0], [89.8, 3.0], [89.9, 3.0], [90.0, 3.0], [90.1, 3.0], [90.2, 3.0], [90.3, 3.0], [90.4, 3.0], [90.5, 3.0], [90.6, 3.0], [90.7, 3.0], [90.8, 3.0], [90.9, 3.0], [91.0, 3.0], [91.1, 3.0], [91.2, 3.0], [91.3, 3.0], [91.4, 3.0], [91.5, 3.0], [91.6, 3.0], [91.7, 3.0], [91.8, 3.0], [91.9, 3.0], [92.0, 3.0], [92.1, 3.0], [92.2, 3.0], [92.3, 3.0], [92.4, 3.0], [92.5, 3.0], [92.6, 3.0], [92.7, 3.0], [92.8, 3.0], [92.9, 3.0], [93.0, 3.0], [93.1, 3.0], [93.2, 3.0], [93.3, 3.0], [93.4, 3.0], [93.5, 3.0], [93.6, 3.0], [93.7, 3.0], [93.8, 3.0], [93.9, 3.0], [94.0, 3.0], [94.1, 3.0], [94.2, 3.0], [94.3, 3.0], [94.4, 3.0], [94.5, 3.0], [94.6, 3.0], [94.7, 3.0], [94.8, 3.0], [94.9, 3.0], [95.0, 3.0], [95.1, 3.0], [95.2, 3.0], [95.3, 3.0], [95.4, 3.0], [95.5, 3.0], [95.6, 4.0], [95.7, 4.0], [95.8, 4.0], [95.9, 4.0], [96.0, 4.0], [96.1, 4.0], [96.2, 4.0], [96.3, 4.0], [96.4, 4.0], [96.5, 4.0], [96.6, 4.0], [96.7, 4.0], [96.8, 4.0], [96.9, 4.0], [97.0, 4.0], [97.1, 4.0], [97.2, 5.0], [97.3, 5.0], [97.4, 5.0], [97.5, 5.0], [97.6, 5.0], [97.7, 5.0], [97.8, 5.0], [97.9, 6.0], [98.0, 6.0], [98.1, 6.0], [98.2, 6.0], [98.3, 6.0], [98.4, 7.0], [98.5, 7.0], [98.6, 7.0], [98.7, 8.0], [98.8, 8.0], [98.9, 8.0], [99.0, 9.0], [99.1, 10.0], [99.2, 10.0], [99.3, 11.0], [99.4, 15.0], [99.5, 17.0], [99.6, 27.0], [99.7, 37.0], [99.8, 44.0], [99.9, 49.0]], "isOverall": false, "label": "Get VITALS list", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 16447.0, "series": [{"data": [[0.0, 16240.0], [100.0, 1.0]], "isOverall": false, "label": "Delete ALLERGY", "isController": false}, {"data": [[0.0, 16447.0], [100.0, 3.0]], "isOverall": false, "label": "Post ALLERGY", "isController": false}, {"data": [[0.0, 16021.0], [100.0, 3.0]], "isOverall": false, "label": "Get VITALS list", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 48715.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 48715.0, "series": [{"data": [[0.0, 48715.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 4.9E-324, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 89.95497443963801, "minX": 1.52762202E12, "maxY": 600.0, "series": [{"data": [[1.52762226E12, 419.7432387862786], [1.52762208E12, 186.17336152219903], [1.52762244E12, 600.0], [1.52762214E12, 285.5310973624235], [1.52762232E12, 500.0], [1.52762202E12, 89.95497443963801], [1.5276225E12, 599.9893546240846], [1.5276222E12, 385.41584645669326], [1.52762238E12, 560.8677133789861]], "isOverall": false, "label": "jp@gc Ultima Thread - Allergy Vitals", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5276225E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 3.0, "maxY": 56.666666666666664, "series": [{"data": [[5.0, 3.6666666666666665], [6.0, 3.0], [8.0, 3.0], [9.0, 4.0], [10.0, 3.5], [11.0, 3.0], [12.0, 2.5], [13.0, 4.0], [14.0, 2.25], [15.0, 3.0], [16.0, 2.5], [17.0, 2.75], [18.0, 3.25], [19.0, 2.166666666666667], [21.0, 3.4], [22.0, 3.4], [23.0, 3.0], [24.0, 2.0], [25.0, 2.5], [26.0, 3.2], [27.0, 3.0], [28.0, 2.4], [29.0, 3.5], [30.0, 3.25], [31.0, 3.0], [33.0, 2.4], [32.0, 4.0], [35.0, 2.6666666666666665], [34.0, 2.5], [37.0, 2.75], [36.0, 2.75], [39.0, 2.5], [38.0, 5.0], [40.0, 2.5], [41.0, 2.8], [42.0, 2.2], [43.0, 2.8], [45.0, 2.5714285714285716], [44.0, 2.5], [47.0, 2.6666666666666665], [46.0, 3.3333333333333335], [48.0, 2.5555555555555554], [49.0, 2.75], [51.0, 3.6], [50.0, 2.0], [53.0, 2.0], [52.0, 2.4], [55.0, 3.2], [54.0, 3.0], [57.0, 2.2], [56.0, 2.0], [58.0, 2.142857142857143], [59.0, 2.5], [61.0, 2.2], [60.0, 2.571428571428571], [63.0, 2.5], [62.0, 2.4], [64.0, 21.666666666666668], [67.0, 2.0], [66.0, 2.6666666666666665], [65.0, 20.0], [69.0, 3.2222222222222223], [68.0, 2.6666666666666665], [71.0, 29.714285714285708], [70.0, 4.0], [73.0, 2.5], [72.0, 3.0], [75.0, 2.0], [74.0, 4.333333333333333], [77.0, 2.25], [76.0, 3.0], [79.0, 3.0], [78.0, 2.6666666666666665], [83.0, 2.5], [82.0, 2.0], [81.0, 7.75], [80.0, 2.5], [87.0, 3.0], [86.0, 2.4444444444444446], [85.0, 2.333333333333333], [84.0, 2.4285714285714284], [88.0, 2.4], [91.0, 3.0], [90.0, 2.25], [89.0, 2.0], [93.0, 2.333333333333333], [92.0, 3.0], [95.0, 2.2], [94.0, 2.833333333333333], [98.0, 2.333333333333333], [97.0, 1.75], [96.0, 2.0], [99.0, 2.25], [100.0, 2.5166790214974055], [103.0, 1.75], [102.0, 2.5], [101.0, 1.4], [107.0, 2.0], [106.0, 2.3333333333333335], [105.0, 3.6666666666666665], [104.0, 2.5], [109.0, 2.3333333333333335], [108.0, 1.5], [111.0, 1.5], [110.0, 2.5], [115.0, 2.333333333333333], [114.0, 2.333333333333333], [113.0, 2.285714285714286], [112.0, 1.8], [116.0, 2.8], [119.0, 1.6666666666666667], [118.0, 1.4], [117.0, 2.833333333333333], [123.0, 2.5714285714285716], [122.0, 2.0], [121.0, 1.8333333333333333], [120.0, 2.0], [127.0, 2.25], [126.0, 2.0], [125.0, 2.0], [124.0, 2.0], [129.0, 1.8571428571428572], [128.0, 2.25], [135.0, 1.6666666666666667], [134.0, 2.3333333333333335], [133.0, 2.7499999999999996], [132.0, 2.0], [131.0, 2.25], [130.0, 2.0], [138.0, 2.0], [137.0, 3.4285714285714284], [136.0, 1.5], [143.0, 1.5555555555555556], [142.0, 2.428571428571429], [141.0, 2.2], [140.0, 1.5], [139.0, 2.4], [146.0, 2.166666666666667], [145.0, 3.0], [144.0, 1.6666666666666667], [151.0, 1.8], [150.0, 1.8571428571428572], [149.0, 1.4], [148.0, 1.8], [147.0, 2.0], [154.0, 2.0], [153.0, 2.333333333333333], [152.0, 2.0], [159.0, 2.0], [158.0, 2.111111111111111], [157.0, 2.0], [156.0, 1.5714285714285714], [155.0, 1.75], [163.0, 2.0], [162.0, 2.25], [161.0, 2.125], [160.0, 2.0], [167.0, 2.0], [166.0, 1.625], [165.0, 12.25], [164.0, 2.25], [172.0, 2.0], [171.0, 2.5], [170.0, 2.0], [169.0, 1.8], [168.0, 2.0], [175.0, 1.5], [174.0, 2.3333333333333335], [173.0, 1.75], [182.0, 2.2], [183.0, 3.2499999999999996], [181.0, 2.125], [180.0, 2.4], [179.0, 2.8], [178.0, 2.4], [177.0, 1.5], [176.0, 1.8333333333333335], [191.0, 2.1250000000000004], [190.0, 2.4444444444444446], [189.0, 2.75], [187.0, 1.7142857142857144], [186.0, 1.7777777777777777], [185.0, 2.0], [184.0, 1.6], [193.0, 1.8333333333333335], [192.0, 2.142857142857143], [197.0, 6.2], [199.0, 2.5], [198.0, 1.75], [196.0, 1.8571428571428572], [195.0, 1.6], [194.0, 2.0], [200.0, 2.0136363636363632], [207.0, 1.75], [206.0, 2.0], [205.0, 2.0], [204.0, 2.1111111111111116], [203.0, 1.5], [202.0, 1.75], [201.0, 1.4], [210.0, 2.0], [209.0, 1.8333333333333335], [208.0, 1.6666666666666667], [215.0, 1.75], [214.0, 1.5], [213.0, 1.6666666666666667], [212.0, 2.0], [211.0, 1.75], [222.0, 2.2], [221.0, 2.0], [220.0, 2.25], [219.0, 2.0], [218.0, 1.8], [217.0, 1.8], [216.0, 1.8571428571428572], [223.0, 2.0], [231.0, 2.0], [230.0, 2.4285714285714284], [229.0, 1.6666666666666667], [227.0, 1.6], [226.0, 2.0], [225.0, 1.6], [224.0, 1.4], [236.0, 1.8333333333333335], [235.0, 1.8571428571428572], [234.0, 1.75], [233.0, 2.0], [232.0, 3.0], [239.0, 1.4], [238.0, 2.0], [237.0, 1.6666666666666667], [247.0, 1.6], [246.0, 2.0], [245.0, 2.2], [244.0, 2.5], [243.0, 2.5], [242.0, 1.5], [241.0, 1.8333333333333335], [240.0, 1.5], [251.0, 2.0], [250.0, 2.333333333333334], [249.0, 2.0], [253.0, 1.6666666666666667], [248.0, 1.75], [255.0, 1.3333333333333333], [254.0, 1.8333333333333333], [252.0, 2.0], [259.0, 2.3333333333333335], [265.0, 1.75], [260.0, 1.7142857142857144], [266.0, 2.0], [267.0, 2.1666666666666665], [264.0, 2.0], [271.0, 1.6666666666666667], [270.0, 1.8], [269.0, 1.2], [268.0, 2.1250000000000004], [263.0, 1.8333333333333335], [262.0, 2.875], [261.0, 19.5], [258.0, 2.375], [257.0, 2.0], [256.0, 1.75], [285.0, 1.4285714285714286], [282.0, 2.0], [283.0, 1.8333333333333335], [281.0, 1.75], [280.0, 2.0], [287.0, 2.0], [286.0, 1.7142857142857144], [279.0, 1.8333333333333335], [273.0, 2.4], [272.0, 2.0], [278.0, 1.8571428571428572], [277.0, 2.0], [276.0, 1.7142857142857144], [275.0, 2.0], [284.0, 1.625], [274.0, 3.0], [296.0, 2.0], [299.0, 2.0], [298.0, 1.75], [297.0, 2.6666666666666665], [295.0, 1.75], [289.0, 3.6], [288.0, 1.8], [294.0, 1.5714285714285714], [293.0, 1.5], [292.0, 2.0], [291.0, 2.125], [300.0, 2.305519053876474], [303.0, 2.4], [302.0, 1.8571428571428572], [301.0, 3.0], [290.0, 3.0], [306.0, 2.0], [312.0, 1.75], [313.0, 1.7777777777777777], [315.0, 1.8333333333333335], [314.0, 1.2], [311.0, 1.8333333333333335], [310.0, 2.0], [309.0, 2.0], [308.0, 2.0], [307.0, 1.5], [316.0, 1.6666666666666667], [318.0, 1.7142857142857144], [317.0, 3.0], [319.0, 2.8], [305.0, 1.5], [304.0, 2.166666666666667], [328.0, 2.0], [331.0, 1.6], [330.0, 2.0], [329.0, 1.75], [327.0, 2.2], [321.0, 1.75], [320.0, 2.0], [326.0, 2.0], [325.0, 2.166666666666667], [324.0, 4.0], [323.0, 1.7142857142857144], [333.0, 2.5714285714285716], [332.0, 2.0], [335.0, 1.75], [334.0, 1.6666666666666667], [322.0, 2.166666666666667], [350.0, 2.2], [351.0, 1.75], [349.0, 1.6666666666666667], [348.0, 3.25], [347.0, 2.0], [346.0, 2.0], [345.0, 1.6], [344.0, 16.636363636363633], [343.0, 2.0], [337.0, 1.7999999999999998], [336.0, 2.0], [339.0, 2.3333333333333335], [338.0, 2.3333333333333335], [342.0, 1.8333333333333335], [341.0, 1.8333333333333335], [340.0, 2.1250000000000004], [367.0, 2.0], [353.0, 2.0], [352.0, 1.8333333333333335], [359.0, 1.6], [358.0, 2.2], [357.0, 2.0000000000000004], [356.0, 2.5], [362.0, 2.333333333333333], [366.0, 2.0], [365.0, 2.3333333333333335], [364.0, 2.25], [355.0, 1.3333333333333333], [354.0, 1.6666666666666667], [363.0, 2.0], [361.0, 2.2], [360.0, 2.7142857142857144], [371.0, 2.0], [375.0, 2.1428571428571432], [376.0, 2.0], [377.0, 1.6], [379.0, 2.25], [378.0, 1.0], [383.0, 3.0], [382.0, 2.4], [381.0, 1.75], [380.0, 2.0], [374.0, 2.375], [373.0, 1.75], [372.0, 2.0], [370.0, 2.25], [369.0, 2.0], [368.0, 2.3333333333333335], [398.0, 1.7142857142857144], [399.0, 1.75], [397.0, 2.5], [396.0, 2.166666666666667], [395.0, 2.0], [394.0, 3.0], [393.0, 2.3333333333333335], [392.0, 2.2], [391.0, 1.75], [385.0, 2.0], [384.0, 1.6666666666666665], [387.0, 2.6666666666666665], [386.0, 1.75], [390.0, 2.0], [389.0, 1.75], [388.0, 2.1428571428571432], [414.0, 2.0], [400.0, 2.2110994028802162], [401.0, 3.4], [403.0, 2.0], [402.0, 2.1666666666666665], [407.0, 2.0], [406.0, 1.6666666666666667], [405.0, 2.5], [404.0, 2.0], [415.0, 1.75], [413.0, 1.8], [412.0, 4.2], [411.0, 2.0], [410.0, 2.0], [409.0, 1.7142857142857144], [408.0, 4.0], [430.0, 2.75], [431.0, 2.0], [429.0, 2.0], [428.0, 1.6666666666666667], [427.0, 3.6666666666666665], [426.0, 1.9], [425.0, 2.0], [424.0, 2.1111111111111116], [423.0, 1.7142857142857144], [417.0, 1.6], [416.0, 2.2857142857142856], [419.0, 1.7142857142857144], [418.0, 1.6], [422.0, 3.2], [421.0, 1.6], [420.0, 1.8333333333333335], [434.0, 1.5], [440.0, 1.75], [441.0, 1.8333333333333333], [443.0, 20.285714285714285], [442.0, 2.0], [439.0, 1.6666666666666667], [438.0, 1.8571428571428572], [437.0, 2.0], [436.0, 2.166666666666667], [435.0, 2.625], [445.0, 1.7142857142857142], [444.0, 2.0], [447.0, 2.2], [446.0, 1.6666666666666667], [433.0, 2.0], [432.0, 2.0], [462.0, 2.0], [463.0, 1.5], [461.0, 1.6], [460.0, 2.0], [459.0, 2.0], [458.0, 2.7777777777777777], [457.0, 1.6666666666666667], [456.0, 2.25], [455.0, 2.0], [449.0, 2.4], [448.0, 4.25], [451.0, 1.6666666666666665], [450.0, 1.8], [454.0, 1.5555555555555556], [453.0, 1.0], [452.0, 1.8571428571428572], [466.0, 2.4], [469.0, 2.0], [470.0, 2.2], [471.0, 2.0], [468.0, 2.333333333333333], [467.0, 1.8], [477.0, 3.0], [476.0, 1.3333333333333333], [465.0, 2.111111111111111], [464.0, 2.0], [478.0, 2.0], [479.0, 2.6], [473.0, 1.4], [472.0, 3.333333333333333], [475.0, 1.3333333333333333], [474.0, 1.5], [494.0, 2.1666666666666665], [495.0, 2.285714285714286], [493.0, 1.0], [492.0, 1.8333333333333335], [491.0, 2.3333333333333335], [490.0, 1.6666666666666667], [489.0, 1.9999999999999998], [488.0, 2.833333333333333], [486.0, 2.0], [481.0, 1.5], [480.0, 2.3333333333333335], [483.0, 2.0], [482.0, 2.0], [485.0, 2.1428571428571432], [484.0, 2.0], [509.0, 2.0], [498.0, 1.4285714285714286], [500.0, 2.441735389028313], [501.0, 2.0], [503.0, 2.0], [502.0, 2.0], [499.0, 2.25], [497.0, 2.2], [496.0, 1.5], [510.0, 1.5], [504.0, 3.0], [508.0, 2.3333333333333335], [507.0, 2.0], [505.0, 2.0], [537.0, 2.0], [541.0, 2.0], [542.0, 1.6666666666666667], [528.0, 1.6666666666666667], [531.0, 2.0], [530.0, 2.0], [540.0, 2.0], [539.0, 5.5], [538.0, 2.0], [527.0, 2.6666666666666665], [513.0, 1.6666666666666667], [512.0, 2.0], [515.0, 2.0], [514.0, 2.0], [517.0, 2.5], [516.0, 2.0], [519.0, 2.0], [518.0, 2.5], [526.0, 2.0], [525.0, 1.75], [524.0, 2.0], [523.0, 1.6666666666666667], [522.0, 2.0], [521.0, 2.0], [520.0, 2.0], [535.0, 2.0], [534.0, 1.5], [533.0, 2.0], [532.0, 2.0], [550.0, 2.0], [557.0, 2.0], [561.0, 2.0], [563.0, 2.0], [562.0, 2.0], [566.0, 1.6666666666666665], [564.0, 2.0], [560.0, 49.333333333333336], [558.0, 2.0], [546.0, 2.0], [545.0, 1.6666666666666667], [548.0, 2.6666666666666665], [547.0, 2.0], [551.0, 3.0], [569.0, 2.0], [568.0, 2.0], [572.0, 5.5], [571.0, 1.6666666666666667], [575.0, 2.0], [573.0, 6.0], [556.0, 3.0], [555.0, 2.3333333333333335], [554.0, 1.0], [553.0, 1.5], [552.0, 3.0], [592.0, 1.5], [596.0, 1.5], [600.0, 2.3043113101903625], [583.0, 4.0], [582.0, 2.5], [581.0, 1.0], [580.0, 2.0], [579.0, 2.5], [578.0, 1.5], [577.0, 1.5], [576.0, 1.5], [591.0, 2.0], [590.0, 2.0], [589.0, 2.0], [588.0, 2.0], [587.0, 2.0], [586.0, 2.0], [585.0, 2.5], [584.0, 2.5], [599.0, 10.25], [598.0, 4.333333333333333], [597.0, 2.0], [595.0, 3.0], [594.0, 2.0], [593.0, 2.3333333333333335]], "isOverall": false, "label": "Delete ALLERGY", "isController": false}, {"data": [[388.88498245181836, 2.3345853087863833]], "isOverall": false, "label": "Delete ALLERGY-Aggregated", "isController": false}, {"data": [[3.0, 51.5], [4.0, 5.5], [6.0, 9.0], [7.0, 5.333333333333333], [8.0, 4.5], [9.0, 4.5], [10.0, 5.5], [11.0, 5.0], [12.0, 5.0], [13.0, 4.5], [14.0, 5.0], [15.0, 4.5], [16.0, 4.4], [17.0, 4.25], [18.0, 4.666666666666667], [19.0, 4.75], [20.0, 4.2], [21.0, 5.0], [22.0, 3.8], [23.0, 4.5], [24.0, 4.25], [25.0, 4.8], [26.0, 4.5], [27.0, 4.5], [28.0, 4.666666666666667], [29.0, 4.0], [30.0, 3.8], [31.0, 4.666666666666667], [33.0, 4.0], [32.0, 6.2], [34.0, 4.4], [35.0, 5.0], [37.0, 3.75], [36.0, 5.0], [39.0, 3.8571428571428568], [38.0, 4.333333333333333], [40.0, 3.5], [41.0, 4.0], [42.0, 6.142857142857143], [43.0, 3.25], [45.0, 5.2], [44.0, 4.2857142857142865], [47.0, 4.833333333333333], [46.0, 3.8], [48.0, 4.0], [49.0, 4.0], [51.0, 4.0], [50.0, 4.0], [53.0, 3.6], [52.0, 4.0], [55.0, 3.8], [54.0, 5.0], [57.0, 4.0], [56.0, 3.25], [58.0, 3.6666666666666665], [59.0, 4.0], [61.0, 3.25], [60.0, 4.5], [63.0, 3.75], [62.0, 3.6666666666666665], [64.0, 20.6], [67.0, 4.1], [66.0, 6.5], [65.0, 12.571428571428571], [69.0, 4.2], [68.0, 4.25], [71.0, 25.5], [70.0, 5.333333333333333], [73.0, 4.2857142857142865], [72.0, 5.0], [75.0, 4.0], [74.0, 4.5], [78.0, 4.0], [77.0, 4.6], [76.0, 4.333333333333333], [79.0, 4.5], [83.0, 4.555555555555555], [82.0, 4.0], [81.0, 8.777777777777779], [80.0, 13.833333333333334], [87.0, 4.333333333333333], [86.0, 4.0], [85.0, 3.0], [84.0, 4.0], [88.0, 4.571428571428571], [91.0, 5.0], [90.0, 3.4285714285714284], [89.0, 3.8], [93.0, 3.5], [92.0, 4.333333333333334], [95.0, 4.166666666666666], [94.0, 3.75], [98.0, 4.2], [97.0, 3.8], [96.0, 3.8333333333333335], [99.0, 4.333333333333333], [100.0, 4.064054257724195], [103.0, 2.6666666666666665], [102.0, 4.0], [101.0, 2.666666666666667], [107.0, 3.2857142857142856], [106.0, 4.571428571428571], [105.0, 4.75], [104.0, 3.1250000000000004], [109.0, 3.0], [110.0, 3.0], [108.0, 2.5714285714285716], [111.0, 3.3333333333333335], [115.0, 3.75], [114.0, 4.666666666666667], [113.0, 3.2857142857142856], [112.0, 3.4], [116.0, 3.75], [119.0, 2.75], [118.0, 3.5], [117.0, 3.375], [123.0, 2.8], [122.0, 2.5], [121.0, 3.3333333333333335], [120.0, 3.0], [127.0, 3.6], [126.0, 3.3000000000000007], [125.0, 3.0], [124.0, 3.4285714285714284], [129.0, 3.0], [130.0, 3.5], [128.0, 3.166666666666667], [135.0, 3.4285714285714284], [134.0, 3.1666666666666665], [133.0, 4.5], [132.0, 3.5555555555555554], [131.0, 2.5], [137.0, 5.0], [138.0, 3.5], [140.0, 3.4], [136.0, 2.833333333333333], [143.0, 2.25], [142.0, 4.0], [141.0, 3.0], [139.0, 3.6], [146.0, 3.2], [145.0, 4.0], [149.0, 3.0], [144.0, 3.6], [151.0, 2.6666666666666665], [150.0, 2.333333333333333], [148.0, 2.75], [147.0, 3.142857142857143], [155.0, 3.714285714285714], [154.0, 3.2857142857142856], [153.0, 3.5], [152.0, 2.75], [159.0, 2.4285714285714284], [158.0, 3.4285714285714284], [157.0, 3.0], [156.0, 2.3333333333333335], [163.0, 3.6], [162.0, 3.125], [161.0, 3.4], [167.0, 2.5], [160.0, 2.5714285714285716], [166.0, 2.666666666666667], [165.0, 9.625], [164.0, 3.0], [172.0, 3.0], [171.0, 3.5], [170.0, 2.6666666666666665], [169.0, 3.0], [168.0, 2.857142857142857], [175.0, 2.571428571428571], [174.0, 3.2857142857142856], [173.0, 3.0], [182.0, 3.0], [181.0, 2.0], [180.0, 3.0833333333333335], [179.0, 3.3333333333333335], [178.0, 3.0], [177.0, 2.625], [176.0, 3.4285714285714284], [183.0, 4.0], [191.0, 3.0], [190.0, 3.833333333333333], [189.0, 3.375], [188.0, 3.0], [187.0, 3.0], [186.0, 3.0], [185.0, 2.4], [184.0, 3.0], [193.0, 2.625], [192.0, 3.1666666666666665], [199.0, 3.4], [198.0, 3.0], [197.0, 5.666666666666667], [196.0, 2.6666666666666665], [195.0, 3.0], [194.0, 2.833333333333333], [200.0, 3.129074315514993], [207.0, 3.111111111111111], [206.0, 2.714285714285714], [205.0, 3.6], [204.0, 2.833333333333333], [203.0, 2.8333333333333335], [202.0, 2.75], [201.0, 2.833333333333333], [210.0, 3.5], [209.0, 3.2857142857142856], [208.0, 3.25], [215.0, 2.75], [214.0, 2.285714285714286], [213.0, 2.6], [212.0, 4.375], [211.0, 3.0], [217.0, 3.333333333333334], [223.0, 2.5], [222.0, 2.4], [221.0, 3.25], [220.0, 2.875], [219.0, 2.3333333333333335], [218.0, 3.25], [216.0, 3.2857142857142856], [231.0, 3.0], [230.0, 3.5999999999999996], [229.0, 3.0], [228.0, 2.8], [227.0, 3.6666666666666665], [226.0, 3.0], [225.0, 3.25], [224.0, 2.4545454545454546], [236.0, 2.6666666666666665], [235.0, 3.4], [234.0, 3.1666666666666665], [233.0, 3.0], [232.0, 2.6666666666666665], [239.0, 2.9], [238.0, 2.3333333333333335], [237.0, 3.2857142857142856], [247.0, 2.666666666666667], [246.0, 4.222222222222222], [245.0, 3.3333333333333335], [244.0, 3.142857142857143], [243.0, 3.25], [242.0, 2.888888888888889], [241.0, 2.3000000000000003], [240.0, 3.5], [251.0, 2.75], [250.0, 2.714285714285714], [249.0, 3.1666666666666665], [248.0, 3.2], [255.0, 2.0], [254.0, 3.0], [253.0, 2.833333333333333], [252.0, 3.0], [269.0, 2.25], [266.0, 2.8571428571428568], [267.0, 3.0], [265.0, 2.75], [264.0, 2.5714285714285716], [271.0, 2.6], [270.0, 2.333333333333333], [263.0, 2.714285714285714], [257.0, 3.5], [256.0, 3.090909090909091], [262.0, 4.875], [261.0, 35.333333333333336], [260.0, 2.8571428571428568], [259.0, 3.3333333333333335], [268.0, 2.75], [258.0, 3.6], [275.0, 3.0], [281.0, 3.1428571428571432], [282.0, 3.6666666666666665], [283.0, 2.833333333333333], [280.0, 2.8], [287.0, 3.2000000000000006], [286.0, 2.0], [285.0, 3.0], [284.0, 2.3333333333333335], [279.0, 3.2], [278.0, 3.0], [277.0, 3.166666666666667], [276.0, 3.142857142857143], [274.0, 2.8], [273.0, 7.714285714285714], [272.0, 3.0], [300.0, 3.312294543063777], [294.0, 2.4285714285714284], [299.0, 3.25], [298.0, 2.5999999999999996], [297.0, 3.125], [296.0, 3.3333333333333335], [303.0, 3.8], [302.0, 3.25], [301.0, 3.3333333333333335], [295.0, 3.142857142857143], [289.0, 4.571428571428571], [288.0, 3.25], [291.0, 3.5], [290.0, 2.5], [293.0, 2.5], [292.0, 3.0], [307.0, 3.0], [311.0, 3.0], [312.0, 3.2], [313.0, 3.3333333333333335], [315.0, 2.3333333333333335], [314.0, 2.666666666666667], [319.0, 3.5], [318.0, 2.714285714285714], [317.0, 12.25], [316.0, 2.2], [310.0, 2.6666666666666665], [309.0, 3.7142857142857144], [308.0, 3.5], [306.0, 3.0], [305.0, 2.5], [304.0, 3.7142857142857144], [328.0, 2.9], [331.0, 2.75], [330.0, 3.6], [329.0, 2.7777777777777777], [327.0, 2.9999999999999996], [321.0, 2.9090909090909087], [320.0, 2.6666666666666665], [326.0, 2.8], [325.0, 2.5], [324.0, 3.0], [323.0, 2.875], [333.0, 3.555555555555556], [332.0, 3.3333333333333335], [335.0, 2.1428571428571432], [334.0, 2.833333333333333], [322.0, 2.75], [350.0, 3.6], [351.0, 3.2], [349.0, 3.0], [348.0, 3.4285714285714284], [347.0, 3.0], [346.0, 3.0], [345.0, 2.75], [344.0, 13.5], [343.0, 3.0], [337.0, 2.6], [336.0, 2.5], [339.0, 3.6666666666666665], [338.0, 3.0], [342.0, 2.5], [341.0, 2.6666666666666665], [340.0, 2.75], [366.0, 2.5714285714285716], [352.0, 2.666666666666667], [353.0, 4.0], [355.0, 2.5714285714285716], [354.0, 3.0], [357.0, 2.6666666666666665], [356.0, 2.7142857142857144], [359.0, 4.0], [358.0, 3.75], [367.0, 3.0], [361.0, 3.2], [360.0, 3.0], [365.0, 3.166666666666667], [364.0, 3.333333333333333], [363.0, 3.0], [362.0, 2.833333333333333], [371.0, 3.166666666666667], [375.0, 3.25], [376.0, 2.8571428571428568], [377.0, 2.5714285714285716], [379.0, 3.1666666666666665], [378.0, 4.4], [383.0, 4.0], [382.0, 3.0], [381.0, 2.5555555555555554], [380.0, 3.0], [374.0, 4.666666666666667], [373.0, 2.8], [372.0, 2.6], [370.0, 2.666666666666667], [369.0, 3.111111111111111], [368.0, 2.5], [398.0, 3.75], [390.0, 3.75], [389.0, 2.625], [388.0, 2.4], [391.0, 3.0], [385.0, 3.0], [384.0, 3.0], [387.0, 4.142857142857142], [386.0, 2.833333333333333], [399.0, 3.0], [397.0, 3.2], [396.0, 2.6666666666666665], [395.0, 3.3333333333333335], [394.0, 3.0], [393.0, 3.0], [392.0, 2.7142857142857144], [414.0, 3.2], [400.0, 3.161894662424887], [401.0, 2.6666666666666665], [403.0, 3.0], [402.0, 3.0], [407.0, 3.0], [406.0, 2.888888888888889], [405.0, 2.5], [404.0, 2.8333333333333335], [415.0, 2.6666666666666665], [413.0, 3.0], [412.0, 7.142857142857143], [411.0, 3.2857142857142856], [410.0, 3.2], [409.0, 2.4], [408.0, 2.8], [430.0, 3.166666666666667], [431.0, 2.6999999999999993], [429.0, 2.5], [428.0, 5.6], [427.0, 3.3333333333333335], [426.0, 3.4], [425.0, 2.5], [424.0, 3.0], [423.0, 2.8], [417.0, 2.5], [416.0, 3.2], [419.0, 2.25], [418.0, 2.8571428571428568], [422.0, 3.75], [421.0, 4.666666666666667], [420.0, 2.6666666666666665], [434.0, 2.666666666666667], [441.0, 2.8], [443.0, 15.0], [442.0, 3.0], [440.0, 2.8333333333333335], [439.0, 2.5714285714285716], [438.0, 2.7777777777777772], [437.0, 2.8], [436.0, 3.0], [435.0, 3.2], [445.0, 2.875], [444.0, 2.5], [447.0, 3.5], [446.0, 3.0], [433.0, 3.0], [432.0, 2.8], [462.0, 3.25], [463.0, 3.0], [461.0, 2.75], [460.0, 3.5], [459.0, 3.2], [458.0, 2.6666666666666665], [457.0, 3.0], [456.0, 2.7777777777777772], [455.0, 4.666666666666667], [449.0, 4.0], [448.0, 4.0], [451.0, 2.5], [450.0, 3.0], [454.0, 2.5], [453.0, 2.5714285714285716], [452.0, 2.7499999999999996], [466.0, 2.6666666666666665], [470.0, 3.0], [464.0, 2.75], [471.0, 2.5], [469.0, 3.0], [468.0, 2.5], [467.0, 2.75], [477.0, 3.5], [476.0, 2.8], [465.0, 3.0], [479.0, 3.1428571428571432], [473.0, 3.1666666666666665], [472.0, 3.0], [475.0, 2.5555555555555554], [474.0, 2.5], [478.0, 2.75], [494.0, 3.125], [495.0, 2.7142857142857144], [493.0, 2.75], [492.0, 3.0], [491.0, 3.0], [490.0, 2.25], [489.0, 2.3333333333333335], [488.0, 5.333333333333333], [487.0, 2.5], [481.0, 3.0], [480.0, 3.3333333333333335], [483.0, 3.0], [482.0, 2.8], [486.0, 3.0], [485.0, 3.5555555555555554], [484.0, 3.0], [510.0, 3.0], [498.0, 2.6666666666666665], [500.0, 3.459634015069972], [501.0, 3.0], [503.0, 3.0], [502.0, 2.0], [499.0, 4.5], [497.0, 2.25], [496.0, 3.2], [511.0, 3.0], [505.0, 2.75], [504.0, 4.0], [507.0, 2.6666666666666665], [506.0, 2.6666666666666665], [509.0, 2.75], [508.0, 2.3333333333333335], [537.0, 2.0], [542.0, 3.0], [543.0, 5.0], [529.0, 2.6666666666666665], [528.0, 3.0], [531.0, 3.0], [530.0, 2.2], [533.0, 3.0], [532.0, 3.142857142857143], [540.0, 3.0], [539.0, 3.1428571428571432], [538.0, 3.5], [536.0, 2.5], [519.0, 2.75], [518.0, 3.5], [517.0, 2.6666666666666665], [514.0, 2.75], [513.0, 3.0], [512.0, 3.0], [527.0, 11.875], [524.0, 2.5], [523.0, 2.75], [521.0, 4.0], [520.0, 3.0], [535.0, 3.0], [534.0, 3.0], [550.0, 2.5], [557.0, 3.3333333333333335], [561.0, 2.6666666666666665], [562.0, 3.0], [565.0, 2.0], [563.0, 2.6], [567.0, 2.75], [566.0, 2.5], [560.0, 56.666666666666664], [558.0, 3.3333333333333335], [544.0, 2.8], [546.0, 2.0], [545.0, 3.2], [548.0, 2.5], [547.0, 3.0], [551.0, 3.0], [568.0, 3.0], [571.0, 3.25], [569.0, 3.3333333333333335], [573.0, 6.5], [572.0, 52.0], [575.0, 2.5], [574.0, 3.0], [556.0, 3.0], [555.0, 3.25], [554.0, 3.0], [553.0, 3.0], [552.0, 2.3333333333333335], [592.0, 3.0], [596.0, 3.0], [600.0, 3.337397221434641], [583.0, 3.3333333333333335], [582.0, 3.0], [581.0, 3.0], [580.0, 2.5], [579.0, 2.75], [576.0, 2.8], [591.0, 3.5], [590.0, 2.8], [589.0, 3.3333333333333335], [588.0, 2.6666666666666665], [587.0, 3.0], [586.0, 3.0], [585.0, 4.0], [584.0, 4.0], [599.0, 12.714285714285714], [598.0, 6.5], [597.0, 2.5], [595.0, 3.0], [594.0, 3.0], [593.0, 2.6666666666666665]], "isOverall": false, "label": "Post ALLERGY", "isController": false}, {"data": [[387.53829787233923, 3.4173252279635324]], "isOverall": false, "label": "Post ALLERGY-Aggregated", "isController": false}, {"data": [[6.0, 7.5], [7.0, 3.5], [9.0, 6.0], [10.0, 3.3333333333333335], [11.0, 2.6666666666666665], [12.0, 3.0], [13.0, 3.0], [14.0, 2.6666666666666665], [15.0, 2.166666666666667], [16.0, 2.3333333333333335], [17.0, 2.0], [18.0, 2.3333333333333335], [19.0, 2.0], [20.0, 3.333333333333333], [21.0, 3.0], [22.0, 2.3333333333333335], [23.0, 3.0], [24.0, 2.4], [25.0, 2.0], [26.0, 2.0], [27.0, 3.0], [28.0, 3.25], [29.0, 2.6], [30.0, 2.3333333333333335], [31.0, 2.5], [33.0, 3.0], [32.0, 2.0], [35.0, 2.75], [34.0, 3.0], [37.0, 2.2], [36.0, 3.0], [38.0, 2.0], [39.0, 2.0], [40.0, 2.625], [41.0, 3.0], [42.0, 3.0], [43.0, 3.0], [45.0, 3.0], [44.0, 2.8], [47.0, 3.0], [46.0, 2.0], [49.0, 2.5], [48.0, 2.3333333333333335], [51.0, 2.375], [50.0, 2.5], [53.0, 2.0], [52.0, 3.0], [55.0, 3.75], [54.0, 2.2], [57.0, 2.0], [56.0, 2.25], [59.0, 2.6], [58.0, 2.3333333333333335], [61.0, 2.5], [60.0, 2.5], [63.0, 2.875], [62.0, 3.0], [64.0, 19.0], [67.0, 3.0], [66.0, 2.75], [65.0, 15.4], [68.0, 2.3333333333333335], [71.0, 51.0], [70.0, 3.25], [69.0, 2.0], [73.0, 3.0], [72.0, 4.666666666666667], [75.0, 2.333333333333333], [74.0, 4.5], [78.0, 2.8], [77.0, 2.8], [76.0, 2.25], [79.0, 3.333333333333333], [83.0, 2.3333333333333335], [82.0, 2.0], [81.0, 4.0], [80.0, 10.25], [87.0, 2.5], [86.0, 2.25], [85.0, 2.6666666666666665], [84.0, 2.6666666666666665], [88.0, 2.5], [91.0, 2.3750000000000004], [90.0, 2.5], [89.0, 1.6666666666666667], [93.0, 2.666666666666667], [92.0, 3.2], [95.0, 2.5], [94.0, 2.75], [98.0, 2.5], [97.0, 2.4], [96.0, 2.0], [99.0, 2.6666666666666665], [100.0, 2.5898583146905247], [103.0, 1.6], [102.0, 2.166666666666667], [101.0, 1.7777777777777777], [107.0, 2.5], [106.0, 2.3333333333333335], [105.0, 2.3333333333333335], [104.0, 2.7142857142857144], [110.0, 2.666666666666667], [109.0, 1.5], [108.0, 2.2], [111.0, 2.0], [112.0, 2.0], [115.0, 2.3333333333333335], [114.0, 2.0], [113.0, 2.3333333333333335], [116.0, 2.0], [119.0, 1.5], [118.0, 1.75], [117.0, 2.5], [123.0, 2.6], [122.0, 1.5], [121.0, 2.5], [120.0, 1.6666666666666667], [127.0, 2.1250000000000004], [126.0, 1.3333333333333333], [125.0, 1.8], [124.0, 2.0], [130.0, 2.3333333333333335], [129.0, 1.8333333333333335], [128.0, 2.6666666666666665], [135.0, 2.0], [134.0, 2.0], [133.0, 3.25], [132.0, 1.6], [131.0, 2.4], [138.0, 2.2], [137.0, 2.5], [136.0, 2.0], [143.0, 1.6], [142.0, 3.166666666666667], [141.0, 2.25], [140.0, 2.4], [139.0, 1.8], [146.0, 2.166666666666667], [145.0, 2.2500000000000004], [144.0, 2.0], [151.0, 1.375], [150.0, 2.0], [149.0, 2.0], [148.0, 1.2], [147.0, 2.125], [154.0, 1.6666666666666667], [153.0, 2.5], [152.0, 2.0], [158.0, 1.5], [157.0, 1.25], [156.0, 2.25], [155.0, 1.4], [163.0, 2.0], [162.0, 2.25], [161.0, 2.8], [160.0, 1.5714285714285714], [167.0, 2.0], [166.0, 2.0], [165.0, 4.0], [164.0, 2.0], [169.0, 2.0], [173.0, 2.0], [172.0, 1.8], [171.0, 1.8], [170.0, 2.3333333333333335], [168.0, 2.6666666666666665], [175.0, 1.8], [174.0, 2.0], [178.0, 1.7000000000000002], [182.0, 2.5], [181.0, 2.285714285714286], [180.0, 2.0], [179.0, 2.0], [177.0, 2.166666666666667], [176.0, 2.0], [183.0, 3.333333333333333], [184.0, 2.125], [191.0, 1.8], [190.0, 1.0], [189.0, 3.0], [188.0, 2.0], [187.0, 2.0], [186.0, 1.2], [185.0, 1.1428571428571428], [193.0, 2.0], [192.0, 2.0], [199.0, 2.0], [198.0, 1.75], [197.0, 4.285714285714286], [196.0, 1.875], [195.0, 2.0], [194.0, 2.5], [200.0, 1.924577373211964], [207.0, 2.125], [206.0, 1.6666666666666667], [205.0, 2.2], [204.0, 1.8], [203.0, 1.6666666666666667], [202.0, 1.857142857142857], [201.0, 1.5], [210.0, 2.0], [209.0, 2.125], [208.0, 2.5], [215.0, 1.0], [214.0, 2.0], [213.0, 1.5], [212.0, 3.3333333333333335], [211.0, 2.25], [222.0, 2.0], [223.0, 1.3333333333333333], [221.0, 2.0], [220.0, 1.75], [219.0, 2.0], [218.0, 2.2], [217.0, 2.5], [216.0, 1.3333333333333333], [231.0, 2.0], [230.0, 2.5], [229.0, 1.75], [228.0, 1.5555555555555556], [227.0, 7.75], [226.0, 1.5], [225.0, 1.8], [224.0, 2.0], [236.0, 1.3333333333333333], [235.0, 2.3333333333333335], [234.0, 1.8571428571428572], [233.0, 2.0], [232.0, 1.8888888888888888], [239.0, 1.6666666666666667], [238.0, 1.6], [237.0, 1.75], [247.0, 2.5], [246.0, 2.3333333333333335], [245.0, 2.0], [244.0, 2.3333333333333335], [243.0, 1.4], [242.0, 2.4], [241.0, 1.5714285714285714], [240.0, 1.25], [251.0, 1.5], [250.0, 2.0], [249.0, 2.0], [248.0, 2.0], [255.0, 1.5714285714285714], [254.0, 1.8333333333333335], [253.0, 1.375], [252.0, 2.0], [259.0, 2.0], [265.0, 1.8], [266.0, 2.3333333333333335], [267.0, 1.8333333333333335], [264.0, 2.5], [271.0, 1.5], [270.0, 1.3333333333333333], [269.0, 1.5714285714285714], [268.0, 1.0], [263.0, 1.75], [262.0, 1.5], [261.0, 6.0], [260.0, 1.75], [258.0, 3.0], [257.0, 1.8333333333333333], [256.0, 2.0], [275.0, 1.3333333333333333], [281.0, 1.8], [278.0, 1.4], [282.0, 1.3333333333333333], [283.0, 1.875], [280.0, 1.8333333333333333], [287.0, 1.3333333333333333], [286.0, 2.0], [285.0, 1.25], [284.0, 1.5], [279.0, 1.8], [277.0, 2.1428571428571432], [276.0, 3.0], [274.0, 1.7142857142857144], [273.0, 2.25], [272.0, 1.6], [296.0, 2.0], [299.0, 1.75], [298.0, 1.6], [297.0, 1.25], [295.0, 1.6], [289.0, 3.0], [288.0, 1.2857142857142856], [294.0, 1.8], [293.0, 2.2], [292.0, 2.0], [291.0, 2.2], [300.0, 2.279237844940869], [303.0, 1.7142857142857142], [302.0, 2.0], [301.0, 2.4], [290.0, 2.166666666666667], [307.0, 1.8], [311.0, 2.0], [312.0, 2.1250000000000004], [313.0, 2.25], [315.0, 1.2], [314.0, 2.0], [319.0, 2.333333333333333], [318.0, 1.2], [317.0, 8.0], [316.0, 2.25], [310.0, 1.8], [309.0, 2.0], [308.0, 1.8], [306.0, 1.5555555555555556], [305.0, 1.6], [304.0, 3.0], [328.0, 3.0], [331.0, 1.8888888888888888], [330.0, 2.0], [329.0, 1.6], [327.0, 2.5], [321.0, 1.75], [320.0, 2.5], [326.0, 2.0], [325.0, 1.6], [324.0, 3.1666666666666665], [323.0, 1.6666666666666667], [333.0, 2.6666666666666665], [332.0, 2.0], [335.0, 2.0], [334.0, 1.5], [322.0, 2.2], [350.0, 2.6249999999999996], [336.0, 1.2], [337.0, 1.5714285714285714], [339.0, 2.6], [338.0, 2.333333333333333], [343.0, 2.2857142857142856], [342.0, 1.8], [341.0, 2.0], [340.0, 1.5714285714285714], [351.0, 2.5], [349.0, 1.8], [348.0, 2.2], [347.0, 1.5], [346.0, 2.0], [345.0, 1.6], [344.0, 2.0], [366.0, 2.0], [352.0, 2.0], [353.0, 2.0], [355.0, 1.6], [354.0, 1.8333333333333335], [359.0, 2.75], [358.0, 2.0], [357.0, 1.5], [356.0, 2.0], [367.0, 1.8], [365.0, 2.0], [364.0, 3.0], [363.0, 2.4285714285714284], [362.0, 2.0], [361.0, 2.2], [360.0, 3.0], [370.0, 2.25], [374.0, 2.0], [375.0, 2.0], [373.0, 1.5], [372.0, 2.0], [371.0, 1.7142857142857142], [381.0, 1.5], [380.0, 1.75], [369.0, 1.3333333333333333], [368.0, 1.8571428571428572], [383.0, 2.6], [377.0, 1.8333333333333335], [376.0, 1.3333333333333333], [379.0, 3.0000000000000004], [378.0, 1.4], [382.0, 2.5], [398.0, 2.0], [399.0, 1.7142857142857144], [397.0, 2.0], [396.0, 1.5], [395.0, 1.4], [394.0, 3.166666666666667], [393.0, 1.2857142857142856], [392.0, 1.5], [391.0, 2.2], [385.0, 1.75], [384.0, 1.5], [387.0, 3.25], [386.0, 1.857142857142857], [390.0, 2.0], [389.0, 1.8333333333333333], [388.0, 1.6666666666666667], [414.0, 2.0], [400.0, 2.0229115262601285], [402.0, 1.8333333333333335], [401.0, 1.7142857142857144], [407.0, 2.0], [406.0, 1.8], [405.0, 2.25], [404.0, 1.8333333333333333], [403.0, 2.6], [415.0, 1.875], [413.0, 1.8333333333333335], [412.0, 1.6666666666666667], [411.0, 1.8571428571428572], [410.0, 1.8333333333333333], [409.0, 2.3333333333333335], [408.0, 2.375], [430.0, 3.6666666666666665], [431.0, 1.6666666666666665], [429.0, 1.8], [428.0, 1.6666666666666667], [427.0, 2.0], [426.0, 1.0], [425.0, 2.0], [424.0, 2.0], [423.0, 1.8571428571428572], [417.0, 1.5], [416.0, 2.0], [419.0, 1.75], [418.0, 1.5714285714285714], [422.0, 2.8], [421.0, 2.5], [420.0, 1.5], [433.0, 1.6666666666666667], [440.0, 2.4], [432.0, 1.9999999999999998], [441.0, 1.7142857142857144], [443.0, 3.75], [442.0, 1.3333333333333333], [439.0, 1.8333333333333333], [438.0, 1.25], [437.0, 1.6], [436.0, 2.0], [434.0, 1.5555555555555556], [445.0, 1.0], [444.0, 1.25], [447.0, 1.5], [446.0, 1.8], [463.0, 1.857142857142857], [449.0, 1.8888888888888888], [455.0, 1.3333333333333333], [448.0, 2.6], [454.0, 1.75], [453.0, 2.3333333333333335], [452.0, 1.6666666666666667], [459.0, 1.8571428571428572], [462.0, 2.25], [461.0, 1.7777777777777777], [460.0, 2.0], [451.0, 1.6666666666666667], [450.0, 1.75], [458.0, 2.857142857142857], [457.0, 1.5], [456.0, 1.6666666666666667], [466.0, 1.75], [469.0, 1.8333333333333335], [468.0, 3.25], [467.0, 2.0], [465.0, 1.5], [464.0, 1.5714285714285714], [471.0, 1.5714285714285714], [470.0, 2.0], [479.0, 2.0], [473.0, 2.0], [472.0, 1.2857142857142856], [475.0, 2.0], [474.0, 2.0], [478.0, 2.25], [477.0, 2.714285714285714], [476.0, 1.4285714285714286], [494.0, 3.0], [495.0, 3.4], [493.0, 1.5714285714285714], [492.0, 2.0], [491.0, 2.0], [490.0, 1.8], [489.0, 2.0], [488.0, 2.4], [487.0, 1.625], [481.0, 2.0], [480.0, 2.285714285714286], [483.0, 2.166666666666667], [482.0, 1.6], [486.0, 1.6], [485.0, 2.5], [484.0, 1.8333333333333335], [510.0, 1.5], [498.0, 2.0], [499.0, 1.8333333333333335], [500.0, 2.44045911047346], [501.0, 2.0], [503.0, 2.0], [502.0, 2.0], [497.0, 1.7777777777777777], [496.0, 2.25], [511.0, 1.5], [505.0, 2.0], [504.0, 2.5], [507.0, 2.0], [506.0, 1.0], [509.0, 2.0], [508.0, 3.3333333333333335], [540.0, 1.5], [543.0, 3.0], [530.0, 2.0], [528.0, 2.0], [533.0, 2.0], [532.0, 2.0], [542.0, 1.3333333333333333], [541.0, 1.6666666666666667], [539.0, 4.5], [538.0, 2.0], [537.0, 2.0], [536.0, 2.0], [527.0, 6.0], [514.0, 3.0], [512.0, 2.0], [517.0, 1.3333333333333333], [516.0, 1.25], [519.0, 1.75], [518.0, 1.0], [523.0, 2.0], [522.0, 2.0], [521.0, 3.0], [520.0, 2.0], [535.0, 2.0], [534.0, 1.5], [549.0, 2.0], [558.0, 2.3333333333333335], [561.0, 1.5], [562.0, 2.0], [565.0, 2.0], [564.0, 2.0], [567.0, 1.6666666666666667], [566.0, 3.0], [560.0, 25.75], [559.0, 2.0], [546.0, 1.0], [545.0, 1.5], [548.0, 2.0], [547.0, 1.5], [550.0, 2.3333333333333335], [569.0, 2.5], [568.0, 2.0], [571.0, 1.3333333333333333], [570.0, 2.0], [573.0, 8.0], [572.0, 2.0], [575.0, 1.5], [574.0, 2.0], [557.0, 2.0], [556.0, 1.0], [554.0, 2.0], [553.0, 1.75], [552.0, 2.0], [595.0, 2.0], [600.0, 2.231638418079096], [581.0, 1.6666666666666667], [579.0, 2.0], [578.0, 1.6666666666666667], [599.0, 13.5], [598.0, 2.0], [597.0, 2.0], [594.0, 2.0], [593.0, 2.0], [591.0, 1.3333333333333333], [589.0, 1.0], [585.0, 2.3333333333333335], [584.0, 2.5]], "isOverall": false, "label": "Get VITALS list", "isController": false}, {"data": [[389.61894658013, 2.238766849725406]], "isOverall": false, "label": "Get VITALS list-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 600.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 6466.883333333333, "minX": 1.52762202E12, "maxY": 41583.03333333333, "series": [{"data": [[1.52762226E12, 26157.05], [1.52762208E12, 26516.066666666666], [1.52762244E12, 24981.083333333332], [1.52762214E12, 26500.1], [1.52762232E12, 25370.916666666668], [1.52762202E12, 21948.933333333334], [1.5276225E12, 6466.883333333333], [1.5276222E12, 26289.816666666666], [1.52762238E12, 25816.55]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.52762226E12, 40984.63333333333], [1.52762208E12, 41495.166666666664], [1.52762244E12, 38785.15], [1.52762214E12, 41583.03333333333], [1.52762232E12, 39528.4], [1.52762202E12, 34504.083333333336], [1.5276225E12, 10086.4], [1.5276222E12, 41208.15], [1.52762238E12, 40577.566666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5276225E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1.9593858345715685, "minX": 1.52762202E12, "maxY": 4.36851211072665, "series": [{"data": [[1.52762226E12, 2.2400000000000024], [1.52762208E12, 2.061830574488806], [1.52762244E12, 2.3417849898580125], [1.52762214E12, 2.251464843750009], [1.52762232E12, 2.495661051556914], [1.52762202E12, 2.763453577764638], [1.5276225E12, 2.373225152129816], [1.5276222E12, 2.2371794871794863], [1.52762238E12, 2.3576864535768634]], "isOverall": false, "label": "Delete ALLERGY", "isController": false}, {"data": [[1.52762226E12, 3.2162688748173367], [1.52762208E12, 3.163294797687858], [1.52762244E12, 3.3542857142857114], [1.52762214E12, 3.316395014381585], [1.52762232E12, 3.535297105129507], [1.52762202E12, 4.36851211072665], [1.5276225E12, 3.6461232604373772], [1.5276222E12, 3.166101694915255], [1.52762238E12, 3.3163315350662033]], "isOverall": false, "label": "Post ALLERGY", "isController": false}, {"data": [[1.52762226E12, 2.060422960725076], [1.52762208E12, 1.9593858345715685], [1.52762244E12, 2.2485518694049493], [1.52762214E12, 2.2066733067729096], [1.52762232E12, 2.402749490835029], [1.52762202E12, 2.735099337748342], [1.5276225E12, 2.4852071005917145], [1.5276222E12, 2.0409385921118326], [1.52762238E12, 2.283763277693473]], "isOverall": false, "label": "Get VITALS list", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5276225E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1.956414066369491, "minX": 1.52762202E12, "maxY": 4.362168396770477, "series": [{"data": [[1.52762226E12, 2.2385185185185152], [1.52762208E12, 2.0555014605647544], [1.52762244E12, 2.3382352941176543], [1.52762214E12, 2.2480468750000044], [1.52762232E12, 2.491577335375197], [1.52762202E12, 2.7457125960969804], [1.5276225E12, 2.3651115618661254], [1.5276222E12, 2.233727810650889], [1.52762238E12, 2.3551496702181614]], "isOverall": false, "label": "Delete ALLERGY", "isController": false}, {"data": [[1.52762226E12, 3.2128592303945442], [1.52762208E12, 3.158477842003853], [1.52762244E12, 3.352727272727269], [1.52762214E12, 3.314477468839882], [1.52762232E12, 3.531742001015748], [1.52762202E12, 4.362168396770477], [1.5276225E12, 3.638170974155072], [1.5276222E12, 3.162711864406775], [1.52762238E12, 3.3138793526238324]], "isOverall": false, "label": "Post ALLERGY", "isController": false}, {"data": [[1.52762226E12, 2.0568982880161086], [1.52762208E12, 1.956414066369491], [1.52762244E12, 2.244339125855717], [1.52762214E12, 2.203685258964143], [1.52762232E12, 2.3971486761710814], [1.52762202E12, 2.7206502107164345], [1.5276225E12, 2.4832347140039457], [1.5276222E12, 2.0354468297553634], [1.52762238E12, 2.2766818411734957]], "isOverall": false, "label": "Get VITALS list", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5276225E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.1348585189644791, "minX": 1.52762202E12, "maxY": 0.3222748815165873, "series": [{"data": [[1.52762226E12, 0.2533333333333333], [1.52762208E12, 0.17818889970788757], [1.52762244E12, 0.29716024340770786], [1.52762214E12, 0.20996093750000006], [1.52762232E12, 0.25012761613067913], [1.52762202E12, 0.13719692489651122], [1.5276225E12, 0.24137931034482782], [1.5276222E12, 0.2056213017751477], [1.52762238E12, 0.2754946727549467]], "isOverall": false, "label": "Delete ALLERGY", "isController": false}, {"data": [[1.52762226E12, 0.2367267413541165], [1.52762208E12, 0.20905587668593462], [1.52762244E12, 0.3044155844155843], [1.52762214E12, 0.21093000958772795], [1.52762232E12, 0.29862874555612035], [1.52762202E12, 0.22491349480968836], [1.5276225E12, 0.30218687872763417], [1.5276222E12, 0.2009685230024214], [1.52762238E12, 0.2888670917116233]], "isOverall": false, "label": "Post ALLERGY", "isController": false}, {"data": [[1.52762226E12, 0.2447129909365555], [1.52762208E12, 0.18127786032689444], [1.52762244E12, 0.3222748815165873], [1.52762214E12, 0.17729083665338619], [1.52762232E12, 0.27036659877800434], [1.52762202E12, 0.1348585189644791], [1.5276225E12, 0.2919132149901382], [1.5276222E12, 0.21118322516225627], [1.52762238E12, 0.30096105209914037]], "isOverall": false, "label": "Get VITALS list", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5276225E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.52762202E12, "maxY": 108.0, "series": [{"data": [[1.52762226E12, 50.0], [1.52762208E12, 45.0], [1.52762244E12, 55.0], [1.52762214E12, 108.0], [1.52762232E12, 57.0], [1.52762202E12, 96.0], [1.5276225E12, 54.0], [1.5276222E12, 54.0], [1.52762238E12, 64.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.52762226E12, 1.0], [1.52762208E12, 1.0], [1.52762244E12, 1.0], [1.52762214E12, 0.0], [1.52762232E12, 1.0], [1.52762202E12, 1.0], [1.5276225E12, 1.0], [1.5276222E12, 1.0], [1.52762238E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.52762226E12, 3.0], [1.52762208E12, 4.0], [1.52762244E12, 4.0], [1.52762214E12, 4.0], [1.52762232E12, 4.0], [1.52762202E12, 4.0], [1.5276225E12, 4.0], [1.5276222E12, 3.0], [1.52762238E12, 3.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.52762226E12, 7.0], [1.52762208E12, 10.0], [1.52762244E12, 10.0], [1.52762214E12, 8.0], [1.52762232E12, 9.0], [1.52762202E12, 19.0], [1.5276225E12, 11.0], [1.5276222E12, 7.0], [1.52762238E12, 10.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.52762226E12, 4.0], [1.52762208E12, 5.0], [1.52762244E12, 4.0], [1.52762214E12, 4.0], [1.52762232E12, 4.0], [1.52762202E12, 5.0], [1.5276225E12, 4.0], [1.5276222E12, 4.0], [1.52762238E12, 4.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5276225E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 25.0, "maxY": 3.0, "series": [{"data": [[84.0, 3.0], [98.0, 2.0], [99.0, 2.0], [96.0, 2.0], [102.0, 2.0], [101.0, 2.0], [25.0, 2.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 102.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 25.0, "maxY": 3.0, "series": [{"data": [[84.0, 3.0], [98.0, 2.0], [99.0, 2.0], [96.0, 2.0], [102.0, 2.0], [101.0, 2.0], [25.0, 2.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 102.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 25.033333333333335, "minX": 1.52762202E12, "maxY": 102.48333333333333, "series": [{"data": [[1.52762226E12, 101.06666666666666], [1.52762208E12, 102.48333333333333], [1.52762244E12, 96.61666666666666], [1.52762214E12, 102.36666666666666], [1.52762232E12, 98.21666666666667], [1.52762202E12, 84.76666666666667], [1.5276225E12, 25.033333333333335], [1.5276222E12, 101.6], [1.52762238E12, 99.76666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5276225E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 25.05, "minX": 1.52762202E12, "maxY": 102.48333333333333, "series": [{"data": [[1.52762226E12, 101.06666666666666], [1.52762208E12, 102.48333333333333], [1.52762244E12, 96.6], [1.52762214E12, 102.36666666666666], [1.52762232E12, 98.2], [1.52762202E12, 84.76666666666667], [1.5276225E12, 25.05], [1.5276222E12, 101.6], [1.52762238E12, 99.78333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5276225E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 8.216666666666667, "minX": 1.52762202E12, "maxY": 34.766666666666666, "series": [{"data": [[1.52762226E12, 33.75], [1.52762208E12, 34.233333333333334], [1.52762244E12, 32.86666666666667], [1.52762214E12, 34.13333333333333], [1.52762232E12, 32.65], [1.52762202E12, 28.183333333333334], [1.5276225E12, 8.216666666666667], [1.5276222E12, 33.8], [1.52762238E12, 32.85]], "isOverall": false, "label": "Delete ALLERGY-success", "isController": false}, {"data": [[1.52762226E12, 33.1], [1.52762208E12, 33.65], [1.52762244E12, 31.65], [1.52762214E12, 33.46666666666667], [1.52762232E12, 32.733333333333334], [1.52762202E12, 27.683333333333334], [1.5276225E12, 8.45], [1.5276222E12, 33.38333333333333], [1.52762238E12, 32.95]], "isOverall": false, "label": "Get VITALS list-success", "isController": false}, {"data": [[1.52762226E12, 34.21666666666667], [1.52762208E12, 34.6], [1.52762244E12, 32.083333333333336], [1.52762214E12, 34.766666666666666], [1.52762232E12, 32.81666666666667], [1.52762202E12, 28.9], [1.5276225E12, 8.383333333333333], [1.5276222E12, 34.416666666666664], [1.52762238E12, 33.983333333333334]], "isOverall": false, "label": "Post ALLERGY-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5276225E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
