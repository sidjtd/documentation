/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -36000000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -36000000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 37737.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 4.0], [1.2, 6.0], [1.3, 8.0], [1.4, 9.0], [1.5, 10.0], [1.6, 12.0], [1.7, 12.0], [1.8, 12.0], [1.9, 12.0], [2.0, 15.0], [2.1, 21.0], [2.2, 22.0], [2.3, 26.0], [2.4, 29.0], [2.5, 35.0], [2.6, 36.0], [2.7, 36.0], [2.8, 37.0], [2.9, 38.0], [3.0, 39.0], [3.1, 39.0], [3.2, 39.0], [3.3, 39.0], [3.4, 43.0], [3.5, 43.0], [3.6, 45.0], [3.7, 61.0], [3.8, 63.0], [3.9, 65.0], [4.0, 73.0], [4.1, 75.0], [4.2, 78.0], [4.3, 80.0], [4.4, 80.0], [4.5, 82.0], [4.6, 85.0], [4.7, 87.0], [4.8, 88.0], [4.9, 90.0], [5.0, 90.0], [5.1, 93.0], [5.2, 96.0], [5.3, 96.0], [5.4, 102.0], [5.5, 102.0], [5.6, 103.0], [5.7, 107.0], [5.8, 108.0], [5.9, 111.0], [6.0, 120.0], [6.1, 120.0], [6.2, 121.0], [6.3, 121.0], [6.4, 122.0], [6.5, 123.0], [6.6, 128.0], [6.7, 128.0], [6.8, 128.0], [6.9, 132.0], [7.0, 132.0], [7.1, 139.0], [7.2, 140.0], [7.3, 141.0], [7.4, 143.0], [7.5, 147.0], [7.6, 151.0], [7.7, 155.0], [7.8, 158.0], [7.9, 158.0], [8.0, 162.0], [8.1, 165.0], [8.2, 171.0], [8.3, 175.0], [8.4, 179.0], [8.5, 180.0], [8.6, 187.0], [8.7, 187.0], [8.8, 188.0], [8.9, 191.0], [9.0, 194.0], [9.1, 196.0], [9.2, 203.0], [9.3, 204.0], [9.4, 206.0], [9.5, 209.0], [9.6, 209.0], [9.7, 209.0], [9.8, 209.0], [9.9, 211.0], [10.0, 214.0], [10.1, 216.0], [10.2, 220.0], [10.3, 220.0], [10.4, 221.0], [10.5, 221.0], [10.6, 222.0], [10.7, 223.0], [10.8, 228.0], [10.9, 228.0], [11.0, 228.0], [11.1, 229.0], [11.2, 235.0], [11.3, 236.0], [11.4, 236.0], [11.5, 236.0], [11.6, 242.0], [11.7, 244.0], [11.8, 246.0], [11.9, 246.0], [12.0, 247.0], [12.1, 247.0], [12.2, 247.0], [12.3, 247.0], [12.4, 248.0], [12.5, 252.0], [12.6, 254.0], [12.7, 255.0], [12.8, 255.0], [12.9, 256.0], [13.0, 257.0], [13.1, 257.0], [13.2, 258.0], [13.3, 262.0], [13.4, 265.0], [13.5, 265.0], [13.6, 265.0], [13.7, 266.0], [13.8, 267.0], [13.9, 270.0], [14.0, 270.0], [14.1, 274.0], [14.2, 276.0], [14.3, 276.0], [14.4, 278.0], [14.5, 281.0], [14.6, 284.0], [14.7, 284.0], [14.8, 284.0], [14.9, 284.0], [15.0, 285.0], [15.1, 287.0], [15.2, 288.0], [15.3, 291.0], [15.4, 291.0], [15.5, 295.0], [15.6, 297.0], [15.7, 297.0], [15.8, 297.0], [15.9, 298.0], [16.0, 299.0], [16.1, 299.0], [16.2, 300.0], [16.3, 300.0], [16.4, 302.0], [16.5, 304.0], [16.6, 304.0], [16.7, 306.0], [16.8, 306.0], [16.9, 307.0], [17.0, 308.0], [17.1, 311.0], [17.2, 317.0], [17.3, 321.0], [17.4, 321.0], [17.5, 321.0], [17.6, 324.0], [17.7, 327.0], [17.8, 330.0], [17.9, 332.0], [18.0, 332.0], [18.1, 332.0], [18.2, 333.0], [18.3, 333.0], [18.4, 335.0], [18.5, 340.0], [18.6, 349.0], [18.7, 349.0], [18.8, 354.0], [18.9, 354.0], [19.0, 355.0], [19.1, 356.0], [19.2, 356.0], [19.3, 356.0], [19.4, 357.0], [19.5, 357.0], [19.6, 358.0], [19.7, 359.0], [19.8, 362.0], [19.9, 363.0], [20.0, 364.0], [20.1, 364.0], [20.2, 366.0], [20.3, 366.0], [20.4, 367.0], [20.5, 369.0], [20.6, 370.0], [20.7, 383.0], [20.8, 384.0], [20.9, 384.0], [21.0, 384.0], [21.1, 385.0], [21.2, 387.0], [21.3, 388.0], [21.4, 391.0], [21.5, 393.0], [21.6, 393.0], [21.7, 396.0], [21.8, 396.0], [21.9, 398.0], [22.0, 399.0], [22.1, 399.0], [22.2, 399.0], [22.3, 401.0], [22.4, 402.0], [22.5, 404.0], [22.6, 407.0], [22.7, 407.0], [22.8, 408.0], [22.9, 408.0], [23.0, 408.0], [23.1, 410.0], [23.2, 412.0], [23.3, 412.0], [23.4, 414.0], [23.5, 414.0], [23.6, 415.0], [23.7, 416.0], [23.8, 416.0], [23.9, 418.0], [24.0, 419.0], [24.1, 422.0], [24.2, 422.0], [24.3, 424.0], [24.4, 424.0], [24.5, 425.0], [24.6, 426.0], [24.7, 426.0], [24.8, 427.0], [24.9, 427.0], [25.0, 427.0], [25.1, 428.0], [25.2, 429.0], [25.3, 429.0], [25.4, 431.0], [25.5, 431.0], [25.6, 433.0], [25.7, 433.0], [25.8, 434.0], [25.9, 436.0], [26.0, 437.0], [26.1, 437.0], [26.2, 438.0], [26.3, 439.0], [26.4, 440.0], [26.5, 440.0], [26.6, 442.0], [26.7, 447.0], [26.8, 448.0], [26.9, 449.0], [27.0, 449.0], [27.1, 457.0], [27.2, 458.0], [27.3, 458.0], [27.4, 458.0], [27.5, 460.0], [27.6, 460.0], [27.7, 460.0], [27.8, 460.0], [27.9, 460.0], [28.0, 460.0], [28.1, 462.0], [28.2, 463.0], [28.3, 464.0], [28.4, 465.0], [28.5, 465.0], [28.6, 466.0], [28.7, 466.0], [28.8, 467.0], [28.9, 467.0], [29.0, 467.0], [29.1, 467.0], [29.2, 470.0], [29.3, 475.0], [29.4, 479.0], [29.5, 480.0], [29.6, 480.0], [29.7, 480.0], [29.8, 481.0], [29.9, 481.0], [30.0, 481.0], [30.1, 481.0], [30.2, 484.0], [30.3, 488.0], [30.4, 489.0], [30.5, 489.0], [30.6, 490.0], [30.7, 490.0], [30.8, 490.0], [30.9, 494.0], [31.0, 495.0], [31.1, 495.0], [31.2, 496.0], [31.3, 497.0], [31.4, 497.0], [31.5, 498.0], [31.6, 499.0], [31.7, 500.0], [31.8, 500.0], [31.9, 501.0], [32.0, 503.0], [32.1, 503.0], [32.2, 503.0], [32.3, 504.0], [32.4, 504.0], [32.5, 506.0], [32.6, 507.0], [32.7, 507.0], [32.8, 507.0], [32.9, 508.0], [33.0, 508.0], [33.1, 508.0], [33.2, 509.0], [33.3, 509.0], [33.4, 509.0], [33.5, 513.0], [33.6, 515.0], [33.7, 516.0], [33.8, 517.0], [33.9, 517.0], [34.0, 517.0], [34.1, 519.0], [34.2, 520.0], [34.3, 523.0], [34.4, 524.0], [34.5, 524.0], [34.6, 525.0], [34.7, 526.0], [34.8, 526.0], [34.9, 528.0], [35.0, 531.0], [35.1, 534.0], [35.2, 535.0], [35.3, 535.0], [35.4, 535.0], [35.5, 537.0], [35.6, 539.0], [35.7, 539.0], [35.8, 539.0], [35.9, 539.0], [36.0, 540.0], [36.1, 541.0], [36.2, 541.0], [36.3, 542.0], [36.4, 544.0], [36.5, 544.0], [36.6, 544.0], [36.7, 545.0], [36.8, 545.0], [36.9, 545.0], [37.0, 546.0], [37.1, 548.0], [37.2, 548.0], [37.3, 549.0], [37.4, 549.0], [37.5, 550.0], [37.6, 550.0], [37.7, 551.0], [37.8, 551.0], [37.9, 552.0], [38.0, 556.0], [38.1, 556.0], [38.2, 557.0], [38.3, 557.0], [38.4, 557.0], [38.5, 557.0], [38.6, 559.0], [38.7, 559.0], [38.8, 560.0], [38.9, 560.0], [39.0, 561.0], [39.1, 561.0], [39.2, 561.0], [39.3, 564.0], [39.4, 564.0], [39.5, 565.0], [39.6, 565.0], [39.7, 567.0], [39.8, 568.0], [39.9, 568.0], [40.0, 569.0], [40.1, 569.0], [40.2, 569.0], [40.3, 570.0], [40.4, 570.0], [40.5, 570.0], [40.6, 570.0], [40.7, 571.0], [40.8, 573.0], [40.9, 573.0], [41.0, 573.0], [41.1, 574.0], [41.2, 574.0], [41.3, 575.0], [41.4, 576.0], [41.5, 578.0], [41.6, 578.0], [41.7, 579.0], [41.8, 579.0], [41.9, 580.0], [42.0, 580.0], [42.1, 580.0], [42.2, 581.0], [42.3, 582.0], [42.4, 583.0], [42.5, 585.0], [42.6, 586.0], [42.7, 586.0], [42.8, 586.0], [42.9, 588.0], [43.0, 588.0], [43.1, 588.0], [43.2, 588.0], [43.3, 589.0], [43.4, 589.0], [43.5, 589.0], [43.6, 590.0], [43.7, 591.0], [43.8, 592.0], [43.9, 593.0], [44.0, 593.0], [44.1, 594.0], [44.2, 594.0], [44.3, 595.0], [44.4, 595.0], [44.5, 595.0], [44.6, 595.0], [44.7, 596.0], [44.8, 597.0], [44.9, 597.0], [45.0, 600.0], [45.1, 601.0], [45.2, 601.0], [45.3, 601.0], [45.4, 602.0], [45.5, 604.0], [45.6, 604.0], [45.7, 607.0], [45.8, 607.0], [45.9, 609.0], [46.0, 609.0], [46.1, 609.0], [46.2, 610.0], [46.3, 611.0], [46.4, 614.0], [46.5, 614.0], [46.6, 615.0], [46.7, 615.0], [46.8, 615.0], [46.9, 617.0], [47.0, 617.0], [47.1, 619.0], [47.2, 619.0], [47.3, 620.0], [47.4, 620.0], [47.5, 620.0], [47.6, 621.0], [47.7, 625.0], [47.8, 628.0], [47.9, 628.0], [48.0, 629.0], [48.1, 630.0], [48.2, 631.0], [48.3, 632.0], [48.4, 632.0], [48.5, 633.0], [48.6, 635.0], [48.7, 635.0], [48.8, 635.0], [48.9, 635.0], [49.0, 635.0], [49.1, 636.0], [49.2, 639.0], [49.3, 639.0], [49.4, 640.0], [49.5, 641.0], [49.6, 641.0], [49.7, 641.0], [49.8, 641.0], [49.9, 643.0], [50.0, 644.0], [50.1, 644.0], [50.2, 644.0], [50.3, 644.0], [50.4, 644.0], [50.5, 644.0], [50.6, 645.0], [50.7, 645.0], [50.8, 648.0], [50.9, 648.0], [51.0, 648.0], [51.1, 650.0], [51.2, 650.0], [51.3, 650.0], [51.4, 650.0], [51.5, 651.0], [51.6, 651.0], [51.7, 651.0], [51.8, 652.0], [51.9, 653.0], [52.0, 653.0], [52.1, 653.0], [52.2, 653.0], [52.3, 654.0], [52.4, 654.0], [52.5, 656.0], [52.6, 658.0], [52.7, 659.0], [52.8, 660.0], [52.9, 661.0], [53.0, 662.0], [53.1, 662.0], [53.2, 662.0], [53.3, 667.0], [53.4, 669.0], [53.5, 670.0], [53.6, 671.0], [53.7, 671.0], [53.8, 671.0], [53.9, 673.0], [54.0, 673.0], [54.1, 674.0], [54.2, 674.0], [54.3, 676.0], [54.4, 676.0], [54.5, 677.0], [54.6, 677.0], [54.7, 677.0], [54.8, 677.0], [54.9, 678.0], [55.0, 678.0], [55.1, 680.0], [55.2, 680.0], [55.3, 681.0], [55.4, 681.0], [55.5, 682.0], [55.6, 685.0], [55.7, 685.0], [55.8, 685.0], [55.9, 685.0], [56.0, 685.0], [56.1, 686.0], [56.2, 687.0], [56.3, 689.0], [56.4, 690.0], [56.5, 690.0], [56.6, 690.0], [56.7, 691.0], [56.8, 691.0], [56.9, 693.0], [57.0, 694.0], [57.1, 694.0], [57.2, 695.0], [57.3, 696.0], [57.4, 696.0], [57.5, 697.0], [57.6, 697.0], [57.7, 698.0], [57.8, 698.0], [57.9, 698.0], [58.0, 699.0], [58.1, 699.0], [58.2, 700.0], [58.3, 700.0], [58.4, 703.0], [58.5, 703.0], [58.6, 704.0], [58.7, 704.0], [58.8, 705.0], [58.9, 705.0], [59.0, 706.0], [59.1, 707.0], [59.2, 707.0], [59.3, 708.0], [59.4, 710.0], [59.5, 713.0], [59.6, 714.0], [59.7, 717.0], [59.8, 717.0], [59.9, 718.0], [60.0, 719.0], [60.1, 719.0], [60.2, 719.0], [60.3, 722.0], [60.4, 722.0], [60.5, 723.0], [60.6, 723.0], [60.7, 724.0], [60.8, 725.0], [60.9, 725.0], [61.0, 725.0], [61.1, 726.0], [61.2, 726.0], [61.3, 727.0], [61.4, 728.0], [61.5, 729.0], [61.6, 729.0], [61.7, 729.0], [61.8, 729.0], [61.9, 730.0], [62.0, 730.0], [62.1, 730.0], [62.2, 731.0], [62.3, 731.0], [62.4, 732.0], [62.5, 732.0], [62.6, 735.0], [62.7, 735.0], [62.8, 739.0], [62.9, 741.0], [63.0, 742.0], [63.1, 742.0], [63.2, 743.0], [63.3, 743.0], [63.4, 744.0], [63.5, 744.0], [63.6, 748.0], [63.7, 748.0], [63.8, 748.0], [63.9, 748.0], [64.0, 749.0], [64.1, 749.0], [64.2, 750.0], [64.3, 750.0], [64.4, 750.0], [64.5, 751.0], [64.6, 752.0], [64.7, 752.0], [64.8, 753.0], [64.9, 753.0], [65.0, 756.0], [65.1, 759.0], [65.2, 760.0], [65.3, 760.0], [65.4, 761.0], [65.5, 762.0], [65.6, 763.0], [65.7, 765.0], [65.8, 765.0], [65.9, 765.0], [66.0, 765.0], [66.1, 765.0], [66.2, 768.0], [66.3, 770.0], [66.4, 770.0], [66.5, 771.0], [66.6, 771.0], [66.7, 771.0], [66.8, 771.0], [66.9, 772.0], [67.0, 772.0], [67.1, 772.0], [67.2, 773.0], [67.3, 773.0], [67.4, 773.0], [67.5, 775.0], [67.6, 775.0], [67.7, 776.0], [67.8, 777.0], [67.9, 777.0], [68.0, 778.0], [68.1, 778.0], [68.2, 780.0], [68.3, 780.0], [68.4, 780.0], [68.5, 780.0], [68.6, 781.0], [68.7, 781.0], [68.8, 782.0], [68.9, 786.0], [69.0, 789.0], [69.1, 790.0], [69.2, 793.0], [69.3, 794.0], [69.4, 794.0], [69.5, 794.0], [69.6, 794.0], [69.7, 796.0], [69.8, 798.0], [69.9, 799.0], [70.0, 799.0], [70.1, 799.0], [70.2, 800.0], [70.3, 800.0], [70.4, 800.0], [70.5, 800.0], [70.6, 801.0], [70.7, 801.0], [70.8, 803.0], [70.9, 803.0], [71.0, 804.0], [71.1, 804.0], [71.2, 804.0], [71.3, 806.0], [71.4, 806.0], [71.5, 807.0], [71.6, 809.0], [71.7, 810.0], [71.8, 810.0], [71.9, 811.0], [72.0, 812.0], [72.1, 812.0], [72.2, 812.0], [72.3, 813.0], [72.4, 813.0], [72.5, 814.0], [72.6, 814.0], [72.7, 814.0], [72.8, 816.0], [72.9, 821.0], [73.0, 822.0], [73.1, 822.0], [73.2, 822.0], [73.3, 823.0], [73.4, 824.0], [73.5, 826.0], [73.6, 827.0], [73.7, 828.0], [73.8, 829.0], [73.9, 830.0], [74.0, 830.0], [74.1, 833.0], [74.2, 834.0], [74.3, 834.0], [74.4, 835.0], [74.5, 835.0], [74.6, 837.0], [74.7, 838.0], [74.8, 838.0], [74.9, 838.0], [75.0, 838.0], [75.1, 838.0], [75.2, 840.0], [75.3, 841.0], [75.4, 845.0], [75.5, 846.0], [75.6, 846.0], [75.7, 846.0], [75.8, 846.0], [75.9, 846.0], [76.0, 846.0], [76.1, 847.0], [76.2, 847.0], [76.3, 849.0], [76.4, 850.0], [76.5, 850.0], [76.6, 850.0], [76.7, 851.0], [76.8, 851.0], [76.9, 854.0], [77.0, 854.0], [77.1, 856.0], [77.2, 856.0], [77.3, 857.0], [77.4, 857.0], [77.5, 857.0], [77.6, 858.0], [77.7, 858.0], [77.8, 859.0], [77.9, 860.0], [78.0, 860.0], [78.1, 861.0], [78.2, 862.0], [78.3, 862.0], [78.4, 862.0], [78.5, 863.0], [78.6, 863.0], [78.7, 864.0], [78.8, 865.0], [78.9, 865.0], [79.0, 867.0], [79.1, 867.0], [79.2, 867.0], [79.3, 867.0], [79.4, 869.0], [79.5, 869.0], [79.6, 870.0], [79.7, 872.0], [79.8, 872.0], [79.9, 872.0], [80.0, 873.0], [80.1, 873.0], [80.2, 874.0], [80.3, 874.0], [80.4, 875.0], [80.5, 878.0], [80.6, 878.0], [80.7, 879.0], [80.8, 879.0], [80.9, 879.0], [81.0, 881.0], [81.1, 882.0], [81.2, 882.0], [81.3, 884.0], [81.4, 885.0], [81.5, 888.0], [81.6, 891.0], [81.7, 891.0], [81.8, 891.0], [81.9, 894.0], [82.0, 894.0], [82.1, 897.0], [82.2, 899.0], [82.3, 900.0], [82.4, 900.0], [82.5, 902.0], [82.6, 902.0], [82.7, 902.0], [82.8, 903.0], [82.9, 903.0], [83.0, 905.0], [83.1, 906.0], [83.2, 908.0], [83.3, 909.0], [83.4, 910.0], [83.5, 910.0], [83.6, 915.0], [83.7, 915.0], [83.8, 916.0], [83.9, 917.0], [84.0, 918.0], [84.1, 919.0], [84.2, 919.0], [84.3, 920.0], [84.4, 920.0], [84.5, 921.0], [84.6, 922.0], [84.7, 922.0], [84.8, 924.0], [84.9, 925.0], [85.0, 927.0], [85.1, 927.0], [85.2, 927.0], [85.3, 927.0], [85.4, 927.0], [85.5, 927.0], [85.6, 933.0], [85.7, 936.0], [85.8, 937.0], [85.9, 938.0], [86.0, 940.0], [86.1, 940.0], [86.2, 941.0], [86.3, 941.0], [86.4, 942.0], [86.5, 944.0], [86.6, 945.0], [86.7, 945.0], [86.8, 946.0], [86.9, 946.0], [87.0, 946.0], [87.1, 946.0], [87.2, 948.0], [87.3, 949.0], [87.4, 952.0], [87.5, 953.0], [87.6, 954.0], [87.7, 956.0], [87.8, 956.0], [87.9, 956.0], [88.0, 957.0], [88.1, 958.0], [88.2, 959.0], [88.3, 962.0], [88.4, 962.0], [88.5, 963.0], [88.6, 964.0], [88.7, 964.0], [88.8, 964.0], [88.9, 964.0], [89.0, 964.0], [89.1, 970.0], [89.2, 971.0], [89.3, 971.0], [89.4, 971.0], [89.5, 973.0], [89.6, 973.0], [89.7, 973.0], [89.8, 975.0], [89.9, 980.0], [90.0, 981.0], [90.1, 981.0], [90.2, 981.0], [90.3, 982.0], [90.4, 983.0], [90.5, 983.0], [90.6, 983.0], [90.7, 984.0], [90.8, 988.0], [90.9, 989.0], [91.0, 990.0], [91.1, 995.0], [91.2, 995.0], [91.3, 1000.0], [91.4, 1000.0], [91.5, 1000.0], [91.6, 1001.0], [91.7, 1002.0], [91.8, 1005.0], [91.9, 1007.0], [92.0, 1008.0], [92.1, 1008.0], [92.2, 1008.0], [92.3, 1009.0], [92.4, 1009.0], [92.5, 1011.0], [92.6, 1016.0], [92.7, 1025.0], [92.8, 1028.0], [92.9, 1028.0], [93.0, 1029.0], [93.1, 1029.0], [93.2, 1033.0], [93.3, 1036.0], [93.4, 1041.0], [93.5, 1045.0], [93.6, 1048.0], [93.7, 1054.0], [93.8, 1057.0], [93.9, 1063.0], [94.0, 1063.0], [94.1, 1064.0], [94.2, 1066.0], [94.3, 1069.0], [94.4, 1070.0], [94.5, 1071.0], [94.6, 1078.0], [94.7, 1078.0], [94.8, 1078.0], [94.9, 1079.0], [95.0, 1080.0], [95.1, 1083.0], [95.2, 1084.0], [95.3, 1086.0], [95.4, 1088.0], [95.5, 1092.0], [95.6, 1093.0], [95.7, 1093.0], [95.8, 1096.0], [95.9, 1097.0], [96.0, 1099.0], [96.1, 1099.0], [96.2, 1102.0], [96.3, 1103.0], [96.4, 1115.0], [96.5, 1124.0], [96.6, 1124.0], [96.7, 1124.0], [96.8, 1128.0], [96.9, 1128.0], [97.0, 1132.0], [97.1, 1139.0], [97.2, 1148.0], [97.3, 1156.0], [97.4, 1156.0], [97.5, 1159.0], [97.6, 1162.0], [97.7, 1168.0], [97.8, 1168.0], [97.9, 1170.0], [98.0, 1192.0], [98.1, 1196.0], [98.2, 1204.0], [98.3, 1204.0], [98.4, 1206.0], [98.5, 1212.0], [98.6, 1215.0], [98.7, 1215.0], [98.8, 1217.0], [98.9, 1223.0], [99.0, 1225.0], [99.1, 1249.0], [99.2, 1249.0], [99.3, 1290.0], [99.4, 1292.0], [99.5, 1298.0], [99.6, 1310.0], [99.7, 1377.0], [99.8, 1394.0], [99.9, 1446.0], [100.0, 1446.0]], "isOverall": false, "label": "Post PROB UNREMOVE", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 13.0], [1.3, 14.0], [1.4, 14.0], [1.5, 17.0], [1.6, 18.0], [1.7, 25.0], [1.8, 33.0], [1.9, 34.0], [2.0, 45.0], [2.1, 48.0], [2.2, 56.0], [2.3, 78.0], [2.4, 100.0], [2.5, 107.0], [2.6, 113.0], [2.7, 138.0], [2.8, 142.0], [2.9, 157.0], [3.0, 178.0], [3.1, 184.0], [3.2, 198.0], [3.3, 201.0], [3.4, 206.0], [3.5, 211.0], [3.6, 211.0], [3.7, 213.0], [3.8, 216.0], [3.9, 217.0], [4.0, 217.0], [4.1, 222.0], [4.2, 292.0], [4.3, 311.0], [4.4, 318.0], [4.5, 362.0], [4.6, 371.0], [4.7, 382.0], [4.8, 397.0], [4.9, 398.0], [5.0, 403.0], [5.1, 405.0], [5.2, 417.0], [5.3, 424.0], [5.4, 445.0], [5.5, 449.0], [5.6, 450.0], [5.7, 469.0], [5.8, 481.0], [5.9, 554.0], [6.0, 556.0], [6.1, 565.0], [6.2, 576.0], [6.3, 578.0], [6.4, 582.0], [6.5, 588.0], [6.6, 660.0], [6.7, 671.0], [6.8, 725.0], [6.9, 738.0], [7.0, 740.0], [7.1, 751.0], [7.2, 751.0], [7.3, 767.0], [7.4, 768.0], [7.5, 791.0], [7.6, 796.0], [7.7, 818.0], [7.8, 841.0], [7.9, 848.0], [8.0, 848.0], [8.1, 851.0], [8.2, 870.0], [8.3, 870.0], [8.4, 871.0], [8.5, 876.0], [8.6, 883.0], [8.7, 894.0], [8.8, 906.0], [8.9, 906.0], [9.0, 931.0], [9.1, 935.0], [9.2, 944.0], [9.3, 962.0], [9.4, 976.0], [9.5, 995.0], [9.6, 1016.0], [9.7, 1032.0], [9.8, 1049.0], [9.9, 1082.0], [10.0, 1082.0], [10.1, 1090.0], [10.2, 1092.0], [10.3, 1093.0], [10.4, 1121.0], [10.5, 1146.0], [10.6, 1147.0], [10.7, 1156.0], [10.8, 1156.0], [10.9, 1164.0], [11.0, 1206.0], [11.1, 1208.0], [11.2, 1217.0], [11.3, 1224.0], [11.4, 1225.0], [11.5, 1229.0], [11.6, 1238.0], [11.7, 1241.0], [11.8, 1286.0], [11.9, 1288.0], [12.0, 1295.0], [12.1, 1323.0], [12.2, 1339.0], [12.3, 1344.0], [12.4, 1348.0], [12.5, 1359.0], [12.6, 1365.0], [12.7, 1393.0], [12.8, 1405.0], [12.9, 1433.0], [13.0, 1448.0], [13.1, 1458.0], [13.2, 1461.0], [13.3, 1476.0], [13.4, 1508.0], [13.5, 1526.0], [13.6, 1540.0], [13.7, 1542.0], [13.8, 1587.0], [13.9, 1667.0], [14.0, 1703.0], [14.1, 1706.0], [14.2, 1713.0], [14.3, 1713.0], [14.4, 1719.0], [14.5, 1751.0], [14.6, 1756.0], [14.7, 1795.0], [14.8, 1797.0], [14.9, 1798.0], [15.0, 1814.0], [15.1, 1841.0], [15.2, 1860.0], [15.3, 1860.0], [15.4, 1894.0], [15.5, 1929.0], [15.6, 1930.0], [15.7, 1939.0], [15.8, 1978.0], [15.9, 1991.0], [16.0, 2022.0], [16.1, 2045.0], [16.2, 2059.0], [16.3, 2065.0], [16.4, 2101.0], [16.5, 2138.0], [16.6, 2150.0], [16.7, 2214.0], [16.8, 2225.0], [16.9, 2227.0], [17.0, 2266.0], [17.1, 2347.0], [17.2, 2357.0], [17.3, 2440.0], [17.4, 2463.0], [17.5, 2463.0], [17.6, 2495.0], [17.7, 2510.0], [17.8, 2600.0], [17.9, 2600.0], [18.0, 2665.0], [18.1, 2667.0], [18.2, 2676.0], [18.3, 2678.0], [18.4, 2701.0], [18.5, 2722.0], [18.6, 3010.0], [18.7, 3292.0], [18.8, 3525.0], [18.9, 3526.0], [19.0, 3561.0], [19.1, 3647.0], [19.2, 3674.0], [19.3, 3706.0], [19.4, 3706.0], [19.5, 4003.0], [19.6, 4366.0], [19.7, 4397.0], [19.8, 4523.0], [19.9, 4540.0], [20.0, 4572.0], [20.1, 4633.0], [20.2, 4638.0], [20.3, 4666.0], [20.4, 4968.0], [20.5, 5027.0], [20.6, 5074.0], [20.7, 5276.0], [20.8, 5378.0], [20.9, 5400.0], [21.0, 5747.0], [21.1, 5798.0], [21.2, 5889.0], [21.3, 6002.0], [21.4, 6057.0], [21.5, 6057.0], [21.6, 6076.0], [21.7, 6080.0], [21.8, 6110.0], [21.9, 6166.0], [22.0, 6183.0], [22.1, 6271.0], [22.2, 6325.0], [22.3, 6376.0], [22.4, 6390.0], [22.5, 6493.0], [22.6, 6505.0], [22.7, 6509.0], [22.8, 6524.0], [22.9, 6525.0], [23.0, 6533.0], [23.1, 6536.0], [23.2, 6581.0], [23.3, 6620.0], [23.4, 6638.0], [23.5, 6644.0], [23.6, 6651.0], [23.7, 6654.0], [23.8, 6671.0], [23.9, 6678.0], [24.0, 6691.0], [24.1, 6691.0], [24.2, 6698.0], [24.3, 6701.0], [24.4, 6706.0], [24.5, 6729.0], [24.6, 6734.0], [24.7, 6747.0], [24.8, 6850.0], [24.9, 6877.0], [25.0, 6889.0], [25.1, 6889.0], [25.2, 6906.0], [25.3, 6911.0], [25.4, 6922.0], [25.5, 6924.0], [25.6, 6930.0], [25.7, 6951.0], [25.8, 6983.0], [25.9, 7013.0], [26.0, 7025.0], [26.1, 7033.0], [26.2, 7039.0], [26.3, 7051.0], [26.4, 7079.0], [26.5, 7080.0], [26.6, 7083.0], [26.7, 7085.0], [26.8, 7089.0], [26.9, 7091.0], [27.0, 7096.0], [27.1, 7099.0], [27.2, 7100.0], [27.3, 7109.0], [27.4, 7112.0], [27.5, 7129.0], [27.6, 7136.0], [27.7, 7138.0], [27.8, 7147.0], [27.9, 7149.0], [28.0, 7158.0], [28.1, 7171.0], [28.2, 7176.0], [28.3, 7184.0], [28.4, 7186.0], [28.5, 7193.0], [28.6, 7193.0], [28.7, 7198.0], [28.8, 7221.0], [28.9, 7229.0], [29.0, 7239.0], [29.1, 7290.0], [29.2, 7294.0], [29.3, 7299.0], [29.4, 7305.0], [29.5, 7312.0], [29.6, 7325.0], [29.7, 7327.0], [29.8, 7328.0], [29.9, 7331.0], [30.0, 7349.0], [30.1, 7368.0], [30.2, 7397.0], [30.3, 7407.0], [30.4, 7426.0], [30.5, 7440.0], [30.6, 7455.0], [30.7, 7466.0], [30.8, 7485.0], [30.9, 7487.0], [31.0, 7506.0], [31.1, 7551.0], [31.2, 7552.0], [31.3, 7562.0], [31.4, 7611.0], [31.5, 7621.0], [31.6, 7662.0], [31.7, 7663.0], [31.8, 7671.0], [31.9, 7671.0], [32.0, 7743.0], [32.1, 7743.0], [32.2, 7743.0], [32.3, 7763.0], [32.4, 7776.0], [32.5, 7776.0], [32.6, 7799.0], [32.7, 7820.0], [32.8, 7837.0], [32.9, 7846.0], [33.0, 7852.0], [33.1, 7866.0], [33.2, 7883.0], [33.3, 7900.0], [33.4, 7918.0], [33.5, 7963.0], [33.6, 7969.0], [33.7, 7997.0], [33.8, 8006.0], [33.9, 8036.0], [34.0, 8098.0], [34.1, 8108.0], [34.2, 8244.0], [34.3, 8248.0], [34.4, 8273.0], [34.5, 8361.0], [34.6, 8474.0], [34.7, 8497.0], [34.8, 8535.0], [34.9, 8650.0], [35.0, 8778.0], [35.1, 8866.0], [35.2, 9033.0], [35.3, 9151.0], [35.4, 9160.0], [35.5, 9272.0], [35.6, 9289.0], [35.7, 9348.0], [35.8, 9348.0], [35.9, 9531.0], [36.0, 9689.0], [36.1, 9756.0], [36.2, 9878.0], [36.3, 9878.0], [36.4, 9905.0], [36.5, 10032.0], [36.6, 10083.0], [36.7, 10120.0], [36.8, 10300.0], [36.9, 10359.0], [37.0, 10392.0], [37.1, 10402.0], [37.2, 10531.0], [37.3, 10587.0], [37.4, 11248.0], [37.5, 11339.0], [37.6, 11374.0], [37.7, 11816.0], [37.8, 11826.0], [37.9, 12086.0], [38.0, 12119.0], [38.1, 12153.0], [38.2, 12411.0], [38.3, 12423.0], [38.4, 12436.0], [38.5, 12611.0], [38.6, 12650.0], [38.7, 12695.0], [38.8, 12761.0], [38.9, 12861.0], [39.0, 13063.0], [39.1, 13113.0], [39.2, 13154.0], [39.3, 13154.0], [39.4, 13203.0], [39.5, 13247.0], [39.6, 13301.0], [39.7, 13365.0], [39.8, 13379.0], [39.9, 13486.0], [40.0, 13496.0], [40.1, 13535.0], [40.2, 13598.0], [40.3, 13623.0], [40.4, 13661.0], [40.5, 13687.0], [40.6, 13706.0], [40.7, 13781.0], [40.8, 13788.0], [40.9, 13826.0], [41.0, 14101.0], [41.1, 14224.0], [41.2, 14428.0], [41.3, 14449.0], [41.4, 14462.0], [41.5, 14513.0], [41.6, 14635.0], [41.7, 14676.0], [41.8, 14736.0], [41.9, 14855.0], [42.0, 14878.0], [42.1, 14986.0], [42.2, 14991.0], [42.3, 15016.0], [42.4, 15076.0], [42.5, 15108.0], [42.6, 15114.0], [42.7, 15149.0], [42.8, 15154.0], [42.9, 15154.0], [43.0, 15187.0], [43.1, 15219.0], [43.2, 15300.0], [43.3, 15317.0], [43.4, 15394.0], [43.5, 15394.0], [43.6, 15396.0], [43.7, 15403.0], [43.8, 15452.0], [43.9, 15459.0], [44.0, 15480.0], [44.1, 15488.0], [44.2, 15503.0], [44.3, 15535.0], [44.4, 15546.0], [44.5, 15570.0], [44.6, 15597.0], [44.7, 15619.0], [44.8, 15620.0], [44.9, 15630.0], [45.0, 15637.0], [45.1, 15640.0], [45.2, 15666.0], [45.3, 15668.0], [45.4, 15671.0], [45.5, 15672.0], [45.6, 15683.0], [45.7, 15741.0], [45.8, 15746.0], [45.9, 15768.0], [46.0, 15807.0], [46.1, 15807.0], [46.2, 15848.0], [46.3, 15861.0], [46.4, 15878.0], [46.5, 15878.0], [46.6, 15895.0], [46.7, 15930.0], [46.8, 15952.0], [46.9, 15953.0], [47.0, 15957.0], [47.1, 15969.0], [47.2, 15979.0], [47.3, 15985.0], [47.4, 15997.0], [47.5, 16044.0], [47.6, 16049.0], [47.7, 16056.0], [47.8, 16056.0], [47.9, 16075.0], [48.0, 16112.0], [48.1, 16114.0], [48.2, 16130.0], [48.3, 16142.0], [48.4, 16147.0], [48.5, 16158.0], [48.6, 16164.0], [48.7, 16240.0], [48.8, 16262.0], [48.9, 16266.0], [49.0, 16270.0], [49.1, 16284.0], [49.2, 16291.0], [49.3, 16336.0], [49.4, 16340.0], [49.5, 16362.0], [49.6, 16405.0], [49.7, 16418.0], [49.8, 16554.0], [49.9, 16627.0], [50.0, 16634.0], [50.1, 16634.0], [50.2, 16663.0], [50.3, 16921.0], [50.4, 16960.0], [50.5, 17013.0], [50.6, 17025.0], [50.7, 17109.0], [50.8, 17130.0], [50.9, 17424.0], [51.0, 17453.0], [51.1, 17505.0], [51.2, 17731.0], [51.3, 18070.0], [51.4, 18209.0], [51.5, 18295.0], [51.6, 18448.0], [51.7, 18470.0], [51.8, 18661.0], [51.9, 19190.0], [52.0, 19212.0], [52.1, 19244.0], [52.2, 19254.0], [52.3, 19326.0], [52.4, 19331.0], [52.5, 19480.0], [52.6, 19494.0], [52.7, 19542.0], [52.8, 19643.0], [52.9, 19749.0], [53.0, 19858.0], [53.1, 19961.0], [53.2, 20064.0], [53.3, 20072.0], [53.4, 20152.0], [53.5, 20385.0], [53.6, 20385.0], [53.7, 20403.0], [53.8, 20432.0], [53.9, 20440.0], [54.0, 20479.0], [54.1, 20494.0], [54.2, 20502.0], [54.3, 20516.0], [54.4, 20539.0], [54.5, 20634.0], [54.6, 20690.0], [54.7, 20842.0], [54.8, 20863.0], [54.9, 20889.0], [55.0, 20947.0], [55.1, 20960.0], [55.2, 21053.0], [55.3, 21295.0], [55.4, 21339.0], [55.5, 21381.0], [55.6, 21400.0], [55.7, 21548.0], [55.8, 21552.0], [55.9, 21742.0], [56.0, 21764.0], [56.1, 21810.0], [56.2, 21881.0], [56.3, 22296.0], [56.4, 22484.0], [56.5, 22525.0], [56.6, 22544.0], [56.7, 22558.0], [56.8, 22722.0], [56.9, 22854.0], [57.0, 22859.0], [57.1, 22893.0], [57.2, 22893.0], [57.3, 22910.0], [57.4, 22952.0], [57.5, 23056.0], [57.6, 23137.0], [57.7, 23163.0], [57.8, 23462.0], [57.9, 23496.0], [58.0, 23505.0], [58.1, 23609.0], [58.2, 23669.0], [58.3, 23714.0], [58.4, 23784.0], [58.5, 23795.0], [58.6, 24073.0], [58.7, 24107.0], [58.8, 24206.0], [58.9, 24260.0], [59.0, 24362.0], [59.1, 24398.0], [59.2, 24462.0], [59.3, 24463.0], [59.4, 24756.0], [59.5, 25087.0], [59.6, 25094.0], [59.7, 25217.0], [59.8, 25246.0], [59.9, 25263.0], [60.0, 25440.0], [60.1, 25568.0], [60.2, 25634.0], [60.3, 25688.0], [60.4, 25691.0], [60.5, 25699.0], [60.6, 25715.0], [60.7, 25721.0], [60.8, 25721.0], [60.9, 25803.0], [61.0, 25819.0], [61.1, 25831.0], [61.2, 25884.0], [61.3, 25888.0], [61.4, 25938.0], [61.5, 25971.0], [61.6, 25973.0], [61.7, 25980.0], [61.8, 25985.0], [61.9, 26008.0], [62.0, 26024.0], [62.1, 26039.0], [62.2, 26094.0], [62.3, 26143.0], [62.4, 26146.0], [62.5, 26268.0], [62.6, 26297.0], [62.7, 26301.0], [62.8, 26354.0], [62.9, 26359.0], [63.0, 26394.0], [63.1, 26421.0], [63.2, 26428.0], [63.3, 26428.0], [63.4, 26436.0], [63.5, 26498.0], [63.6, 26516.0], [63.7, 26542.0], [63.8, 26595.0], [63.9, 26597.0], [64.0, 26689.0], [64.1, 26712.0], [64.2, 26721.0], [64.3, 26721.0], [64.4, 26751.0], [64.5, 26777.0], [64.6, 26829.0], [64.7, 26883.0], [64.8, 26898.0], [64.9, 26915.0], [65.0, 26967.0], [65.1, 26975.0], [65.2, 26976.0], [65.3, 26985.0], [65.4, 26990.0], [65.5, 27033.0], [65.6, 27154.0], [65.7, 27158.0], [65.8, 27206.0], [65.9, 27242.0], [66.0, 27415.0], [66.1, 27473.0], [66.2, 27647.0], [66.3, 27677.0], [66.4, 27686.0], [66.5, 27750.0], [66.6, 27795.0], [66.7, 27809.0], [66.8, 27822.0], [66.9, 27851.0], [67.0, 27887.0], [67.1, 27971.0], [67.2, 28028.0], [67.3, 28093.0], [67.4, 28160.0], [67.5, 28208.0], [67.6, 28252.0], [67.7, 28255.0], [67.8, 28310.0], [67.9, 28310.0], [68.0, 28392.0], [68.1, 28517.0], [68.2, 28552.0], [68.3, 28636.0], [68.4, 28664.0], [68.5, 28720.0], [68.6, 28727.0], [68.7, 28734.0], [68.8, 28748.0], [68.9, 28771.0], [69.0, 28774.0], [69.1, 28832.0], [69.2, 28864.0], [69.3, 28875.0], [69.4, 28883.0], [69.5, 28910.0], [69.6, 28912.0], [69.7, 28913.0], [69.8, 28963.0], [69.9, 28993.0], [70.0, 29021.0], [70.1, 29039.0], [70.2, 29069.0], [70.3, 29070.0], [70.4, 29126.0], [70.5, 29173.0], [70.6, 29189.0], [70.7, 29195.0], [70.8, 29278.0], [70.9, 29279.0], [71.0, 29332.0], [71.1, 29343.0], [71.2, 29370.0], [71.3, 29399.0], [71.4, 29563.0], [71.5, 29563.0], [71.6, 29568.0], [71.7, 29577.0], [71.8, 29588.0], [71.9, 29617.0], [72.0, 29619.0], [72.1, 29708.0], [72.2, 29746.0], [72.3, 29747.0], [72.4, 29783.0], [72.5, 29792.0], [72.6, 29822.0], [72.7, 29826.0], [72.8, 29871.0], [72.9, 29872.0], [73.0, 29886.0], [73.1, 29896.0], [73.2, 29940.0], [73.3, 29977.0], [73.4, 29986.0], [73.5, 30106.0], [73.6, 30130.0], [73.7, 30139.0], [73.8, 30142.0], [73.9, 30186.0], [74.0, 30264.0], [74.1, 30448.0], [74.2, 30480.0], [74.3, 30589.0], [74.4, 30633.0], [74.5, 30634.0], [74.6, 30735.0], [74.7, 30747.0], [74.8, 30845.0], [74.9, 30849.0], [75.0, 30849.0], [75.1, 30932.0], [75.2, 30947.0], [75.3, 30988.0], [75.4, 31035.0], [75.5, 31069.0], [75.6, 31181.0], [75.7, 31185.0], [75.8, 31406.0], [75.9, 31420.0], [76.0, 31571.0], [76.1, 31605.0], [76.2, 31721.0], [76.3, 31801.0], [76.4, 31986.0], [76.5, 32059.0], [76.6, 32200.0], [76.7, 32231.0], [76.8, 32250.0], [76.9, 32254.0], [77.0, 32362.0], [77.1, 32408.0], [77.2, 32409.0], [77.3, 32437.0], [77.4, 32456.0], [77.5, 32461.0], [77.6, 32468.0], [77.7, 32502.0], [77.8, 32503.0], [77.9, 32543.0], [78.0, 32573.0], [78.1, 32589.0], [78.2, 32627.0], [78.3, 32643.0], [78.4, 32728.0], [78.5, 32733.0], [78.6, 32733.0], [78.7, 32744.0], [78.8, 32751.0], [78.9, 32756.0], [79.0, 32761.0], [79.1, 32763.0], [79.2, 32772.0], [79.3, 32839.0], [79.4, 32866.0], [79.5, 32878.0], [79.6, 32890.0], [79.7, 32896.0], [79.8, 32912.0], [79.9, 32918.0], [80.0, 32937.0], [80.1, 32943.0], [80.2, 32981.0], [80.3, 32994.0], [80.4, 33037.0], [80.5, 33045.0], [80.6, 33045.0], [80.7, 33047.0], [80.8, 33051.0], [80.9, 33083.0], [81.0, 33104.0], [81.1, 33108.0], [81.2, 33115.0], [81.3, 33126.0], [81.4, 33164.0], [81.5, 33177.0], [81.6, 33182.0], [81.7, 33201.0], [81.8, 33205.0], [81.9, 33213.0], [82.0, 33220.0], [82.1, 33231.0], [82.2, 33231.0], [82.3, 33262.0], [82.4, 33321.0], [82.5, 33347.0], [82.6, 33350.0], [82.7, 33357.0], [82.8, 33365.0], [82.9, 33386.0], [83.0, 33393.0], [83.1, 33401.0], [83.2, 33404.0], [83.3, 33408.0], [83.4, 33423.0], [83.5, 33485.0], [83.6, 33500.0], [83.7, 33505.0], [83.8, 33505.0], [83.9, 33513.0], [84.0, 33565.0], [84.1, 33584.0], [84.2, 33587.0], [84.3, 33611.0], [84.4, 33650.0], [84.5, 33679.0], [84.6, 33680.0], [84.7, 33694.0], [84.8, 33712.0], [84.9, 33716.0], [85.0, 33738.0], [85.1, 33745.0], [85.2, 33884.0], [85.3, 33887.0], [85.4, 33889.0], [85.5, 33892.0], [85.6, 33905.0], [85.7, 33920.0], [85.8, 33920.0], [85.9, 33936.0], [86.0, 33950.0], [86.1, 33952.0], [86.2, 33954.0], [86.3, 33968.0], [86.4, 33973.0], [86.5, 33982.0], [86.6, 34001.0], [86.7, 34017.0], [86.8, 34020.0], [86.9, 34056.0], [87.0, 34069.0], [87.1, 34086.0], [87.2, 34119.0], [87.3, 34138.0], [87.4, 34153.0], [87.5, 34155.0], [87.6, 34156.0], [87.7, 34181.0], [87.8, 34182.0], [87.9, 34188.0], [88.0, 34197.0], [88.1, 34255.0], [88.2, 34363.0], [88.3, 34398.0], [88.4, 34427.0], [88.5, 34484.0], [88.6, 34492.0], [88.7, 34508.0], [88.8, 34525.0], [88.9, 34526.0], [89.0, 34613.0], [89.1, 34632.0], [89.2, 34637.0], [89.3, 34637.0], [89.4, 34678.0], [89.5, 34678.0], [89.6, 34684.0], [89.7, 34742.0], [89.8, 34769.0], [89.9, 34806.0], [90.0, 34813.0], [90.1, 34883.0], [90.2, 34890.0], [90.3, 34909.0], [90.4, 34926.0], [90.5, 34981.0], [90.6, 35042.0], [90.7, 35042.0], [90.8, 35045.0], [90.9, 35198.0], [91.0, 35204.0], [91.1, 35233.0], [91.2, 35267.0], [91.3, 35340.0], [91.4, 35362.0], [91.5, 35381.0], [91.6, 35382.0], [91.7, 35413.0], [91.8, 35468.0], [91.9, 35489.0], [92.0, 35510.0], [92.1, 35554.0], [92.2, 35560.0], [92.3, 35564.0], [92.4, 35600.0], [92.5, 35606.0], [92.6, 35644.0], [92.7, 35651.0], [92.8, 35687.0], [92.9, 35687.0], [93.0, 35710.0], [93.1, 35720.0], [93.2, 35725.0], [93.3, 35769.0], [93.4, 35800.0], [93.5, 35818.0], [93.6, 35841.0], [93.7, 35870.0], [93.8, 35890.0], [93.9, 35893.0], [94.0, 35909.0], [94.1, 35914.0], [94.2, 35915.0], [94.3, 35917.0], [94.4, 35918.0], [94.5, 35928.0], [94.6, 35931.0], [94.7, 35940.0], [94.8, 35942.0], [94.9, 35945.0], [95.0, 35959.0], [95.1, 35961.0], [95.2, 35991.0], [95.3, 35995.0], [95.4, 36001.0], [95.5, 36020.0], [95.6, 36036.0], [95.7, 36037.0], [95.8, 36046.0], [95.9, 36057.0], [96.0, 36065.0], [96.1, 36096.0], [96.2, 36122.0], [96.3, 36131.0], [96.4, 36168.0], [96.5, 36168.0], [96.6, 36206.0], [96.7, 36242.0], [96.8, 36257.0], [96.9, 36261.0], [97.0, 36277.0], [97.1, 36319.0], [97.2, 36402.0], [97.3, 36435.0], [97.4, 36436.0], [97.5, 36499.0], [97.6, 36523.0], [97.7, 36526.0], [97.8, 36532.0], [97.9, 36537.0], [98.0, 36544.0], [98.1, 36567.0], [98.2, 36594.0], [98.3, 36607.0], [98.4, 36618.0], [98.5, 36629.0], [98.6, 36693.0], [98.7, 36701.0], [98.8, 36709.0], [98.9, 36812.0], [99.0, 36850.0], [99.1, 36855.0], [99.2, 36938.0], [99.3, 37018.0], [99.4, 37110.0], [99.5, 37135.0], [99.6, 37224.0], [99.7, 37234.0], [99.8, 37289.0], [99.9, 37737.0], [100.0, 37737.0]], "isOverall": false, "label": "Post PROB", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 8.0], [1.3, 12.0], [1.4, 14.0], [1.5, 14.0], [1.6, 22.0], [1.7, 26.0], [1.8, 29.0], [1.9, 29.0], [2.0, 37.0], [2.1, 39.0], [2.2, 44.0], [2.3, 53.0], [2.4, 62.0], [2.5, 72.0], [2.6, 73.0], [2.7, 79.0], [2.8, 79.0], [2.9, 94.0], [3.0, 110.0], [3.1, 117.0], [3.2, 126.0], [3.3, 134.0], [3.4, 144.0], [3.5, 146.0], [3.6, 163.0], [3.7, 163.0], [3.8, 167.0], [3.9, 178.0], [4.0, 182.0], [4.1, 184.0], [4.2, 186.0], [4.3, 219.0], [4.4, 221.0], [4.5, 223.0], [4.6, 223.0], [4.7, 251.0], [4.8, 257.0], [4.9, 261.0], [5.0, 264.0], [5.1, 270.0], [5.2, 273.0], [5.3, 274.0], [5.4, 278.0], [5.5, 278.0], [5.6, 278.0], [5.7, 284.0], [5.8, 286.0], [5.9, 291.0], [6.0, 293.0], [6.1, 297.0], [6.2, 301.0], [6.3, 303.0], [6.4, 303.0], [6.5, 304.0], [6.6, 304.0], [6.7, 314.0], [6.8, 331.0], [6.9, 337.0], [7.0, 337.0], [7.1, 355.0], [7.2, 357.0], [7.3, 357.0], [7.4, 364.0], [7.5, 370.0], [7.6, 392.0], [7.7, 392.0], [7.8, 395.0], [7.9, 398.0], [8.0, 418.0], [8.1, 418.0], [8.2, 418.0], [8.3, 418.0], [8.4, 419.0], [8.5, 454.0], [8.6, 469.0], [8.7, 469.0], [8.8, 477.0], [8.9, 486.0], [9.0, 501.0], [9.1, 501.0], [9.2, 511.0], [9.3, 511.0], [9.4, 513.0], [9.5, 518.0], [9.6, 534.0], [9.7, 539.0], [9.8, 545.0], [9.9, 552.0], [10.0, 552.0], [10.1, 553.0], [10.2, 554.0], [10.3, 564.0], [10.4, 569.0], [10.5, 573.0], [10.6, 574.0], [10.7, 574.0], [10.8, 574.0], [10.9, 574.0], [11.0, 585.0], [11.1, 587.0], [11.2, 589.0], [11.3, 611.0], [11.4, 628.0], [11.5, 630.0], [11.6, 630.0], [11.7, 634.0], [11.8, 634.0], [11.9, 634.0], [12.0, 651.0], [12.1, 653.0], [12.2, 673.0], [12.3, 680.0], [12.4, 688.0], [12.5, 691.0], [12.6, 694.0], [12.7, 694.0], [12.8, 710.0], [12.9, 714.0], [13.0, 720.0], [13.1, 725.0], [13.2, 738.0], [13.3, 739.0], [13.4, 739.0], [13.5, 739.0], [13.6, 739.0], [13.7, 740.0], [13.8, 740.0], [13.9, 741.0], [14.0, 746.0], [14.1, 748.0], [14.2, 751.0], [14.3, 752.0], [14.4, 762.0], [14.5, 762.0], [14.6, 766.0], [14.7, 777.0], [14.8, 779.0], [14.9, 781.0], [15.0, 782.0], [15.1, 790.0], [15.2, 792.0], [15.3, 796.0], [15.4, 796.0], [15.5, 804.0], [15.6, 809.0], [15.7, 813.0], [15.8, 813.0], [15.9, 823.0], [16.0, 824.0], [16.1, 825.0], [16.2, 827.0], [16.3, 827.0], [16.4, 830.0], [16.5, 831.0], [16.6, 832.0], [16.7, 839.0], [16.8, 840.0], [16.9, 844.0], [17.0, 845.0], [17.1, 849.0], [17.2, 849.0], [17.3, 860.0], [17.4, 861.0], [17.5, 863.0], [17.6, 867.0], [17.7, 872.0], [17.8, 872.0], [17.9, 872.0], [18.0, 874.0], [18.1, 874.0], [18.2, 881.0], [18.3, 882.0], [18.4, 884.0], [18.5, 885.0], [18.6, 886.0], [18.7, 888.0], [18.8, 888.0], [18.9, 893.0], [19.0, 893.0], [19.1, 896.0], [19.2, 910.0], [19.3, 911.0], [19.4, 912.0], [19.5, 914.0], [19.6, 915.0], [19.7, 916.0], [19.8, 916.0], [19.9, 916.0], [20.0, 917.0], [20.1, 918.0], [20.2, 919.0], [20.3, 926.0], [20.4, 929.0], [20.5, 931.0], [20.6, 936.0], [20.7, 937.0], [20.8, 937.0], [20.9, 945.0], [21.0, 949.0], [21.1, 954.0], [21.2, 954.0], [21.3, 957.0], [21.4, 958.0], [21.5, 958.0], [21.6, 959.0], [21.7, 959.0], [21.8, 962.0], [21.9, 967.0], [22.0, 970.0], [22.1, 973.0], [22.2, 981.0], [22.3, 984.0], [22.4, 987.0], [22.5, 989.0], [22.6, 989.0], [22.7, 991.0], [22.8, 992.0], [22.9, 993.0], [23.0, 996.0], [23.1, 998.0], [23.2, 1002.0], [23.3, 1003.0], [23.4, 1005.0], [23.5, 1005.0], [23.6, 1006.0], [23.7, 1008.0], [23.8, 1010.0], [23.9, 1012.0], [24.0, 1013.0], [24.1, 1017.0], [24.2, 1018.0], [24.3, 1019.0], [24.4, 1019.0], [24.5, 1019.0], [24.6, 1020.0], [24.7, 1020.0], [24.8, 1021.0], [24.9, 1024.0], [25.0, 1029.0], [25.1, 1030.0], [25.2, 1037.0], [25.3, 1037.0], [25.4, 1039.0], [25.5, 1039.0], [25.6, 1039.0], [25.7, 1041.0], [25.8, 1041.0], [25.9, 1042.0], [26.0, 1043.0], [26.1, 1043.0], [26.2, 1043.0], [26.3, 1044.0], [26.4, 1044.0], [26.5, 1046.0], [26.6, 1046.0], [26.7, 1046.0], [26.8, 1047.0], [26.9, 1051.0], [27.0, 1051.0], [27.1, 1051.0], [27.2, 1052.0], [27.3, 1052.0], [27.4, 1057.0], [27.5, 1060.0], [27.6, 1061.0], [27.7, 1065.0], [27.8, 1067.0], [27.9, 1072.0], [28.0, 1072.0], [28.1, 1073.0], [28.2, 1074.0], [28.3, 1075.0], [28.4, 1077.0], [28.5, 1078.0], [28.6, 1081.0], [28.7, 1081.0], [28.8, 1087.0], [28.9, 1087.0], [29.0, 1087.0], [29.1, 1088.0], [29.2, 1089.0], [29.3, 1091.0], [29.4, 1093.0], [29.5, 1093.0], [29.6, 1094.0], [29.7, 1095.0], [29.8, 1095.0], [29.9, 1096.0], [30.0, 1099.0], [30.1, 1100.0], [30.2, 1101.0], [30.3, 1101.0], [30.4, 1109.0], [30.5, 1110.0], [30.6, 1110.0], [30.7, 1110.0], [30.8, 1110.0], [30.9, 1111.0], [31.0, 1120.0], [31.1, 1121.0], [31.2, 1121.0], [31.3, 1122.0], [31.4, 1123.0], [31.5, 1124.0], [31.6, 1124.0], [31.7, 1125.0], [31.8, 1127.0], [31.9, 1129.0], [32.0, 1130.0], [32.1, 1131.0], [32.2, 1131.0], [32.3, 1132.0], [32.4, 1134.0], [32.5, 1134.0], [32.6, 1134.0], [32.7, 1134.0], [32.8, 1135.0], [32.9, 1136.0], [33.0, 1143.0], [33.1, 1143.0], [33.2, 1145.0], [33.3, 1146.0], [33.4, 1146.0], [33.5, 1148.0], [33.6, 1148.0], [33.7, 1148.0], [33.8, 1150.0], [33.9, 1151.0], [34.0, 1154.0], [34.1, 1154.0], [34.2, 1157.0], [34.3, 1157.0], [34.4, 1158.0], [34.5, 1160.0], [34.6, 1160.0], [34.7, 1162.0], [34.8, 1164.0], [34.9, 1165.0], [35.0, 1166.0], [35.1, 1166.0], [35.2, 1166.0], [35.3, 1167.0], [35.4, 1168.0], [35.5, 1169.0], [35.6, 1171.0], [35.7, 1171.0], [35.8, 1172.0], [35.9, 1173.0], [36.0, 1176.0], [36.1, 1176.0], [36.2, 1176.0], [36.3, 1177.0], [36.4, 1182.0], [36.5, 1183.0], [36.6, 1186.0], [36.7, 1188.0], [36.8, 1190.0], [36.9, 1191.0], [37.0, 1191.0], [37.1, 1192.0], [37.2, 1195.0], [37.3, 1197.0], [37.4, 1198.0], [37.5, 1199.0], [37.6, 1200.0], [37.7, 1200.0], [37.8, 1202.0], [37.9, 1202.0], [38.0, 1202.0], [38.1, 1203.0], [38.2, 1208.0], [38.3, 1210.0], [38.4, 1210.0], [38.5, 1212.0], [38.6, 1213.0], [38.7, 1215.0], [38.8, 1215.0], [38.9, 1215.0], [39.0, 1217.0], [39.1, 1222.0], [39.2, 1222.0], [39.3, 1224.0], [39.4, 1227.0], [39.5, 1228.0], [39.6, 1228.0], [39.7, 1228.0], [39.8, 1229.0], [39.9, 1231.0], [40.0, 1233.0], [40.1, 1233.0], [40.2, 1234.0], [40.3, 1237.0], [40.4, 1239.0], [40.5, 1239.0], [40.6, 1239.0], [40.7, 1240.0], [40.8, 1240.0], [40.9, 1243.0], [41.0, 1243.0], [41.1, 1243.0], [41.2, 1244.0], [41.3, 1246.0], [41.4, 1247.0], [41.5, 1247.0], [41.6, 1248.0], [41.7, 1252.0], [41.8, 1258.0], [41.9, 1259.0], [42.0, 1259.0], [42.1, 1260.0], [42.2, 1260.0], [42.3, 1261.0], [42.4, 1261.0], [42.5, 1261.0], [42.6, 1261.0], [42.7, 1265.0], [42.8, 1267.0], [42.9, 1268.0], [43.0, 1269.0], [43.1, 1270.0], [43.2, 1270.0], [43.3, 1270.0], [43.4, 1271.0], [43.5, 1272.0], [43.6, 1273.0], [43.7, 1274.0], [43.8, 1275.0], [43.9, 1275.0], [44.0, 1276.0], [44.1, 1277.0], [44.2, 1277.0], [44.3, 1279.0], [44.4, 1283.0], [44.5, 1286.0], [44.6, 1290.0], [44.7, 1290.0], [44.8, 1290.0], [44.9, 1291.0], [45.0, 1291.0], [45.1, 1291.0], [45.2, 1293.0], [45.3, 1294.0], [45.4, 1294.0], [45.5, 1295.0], [45.6, 1296.0], [45.7, 1298.0], [45.8, 1300.0], [45.9, 1301.0], [46.0, 1301.0], [46.1, 1303.0], [46.2, 1304.0], [46.3, 1305.0], [46.4, 1305.0], [46.5, 1306.0], [46.6, 1308.0], [46.7, 1309.0], [46.8, 1309.0], [46.9, 1309.0], [47.0, 1311.0], [47.1, 1311.0], [47.2, 1311.0], [47.3, 1313.0], [47.4, 1317.0], [47.5, 1318.0], [47.6, 1319.0], [47.7, 1320.0], [47.8, 1320.0], [47.9, 1320.0], [48.0, 1322.0], [48.1, 1323.0], [48.2, 1325.0], [48.3, 1326.0], [48.4, 1326.0], [48.5, 1327.0], [48.6, 1327.0], [48.7, 1327.0], [48.8, 1328.0], [48.9, 1329.0], [49.0, 1329.0], [49.1, 1330.0], [49.2, 1331.0], [49.3, 1333.0], [49.4, 1337.0], [49.5, 1343.0], [49.6, 1343.0], [49.7, 1346.0], [49.8, 1346.0], [49.9, 1347.0], [50.0, 1349.0], [50.1, 1351.0], [50.2, 1351.0], [50.3, 1351.0], [50.4, 1352.0], [50.5, 1352.0], [50.6, 1352.0], [50.7, 1354.0], [50.8, 1354.0], [50.9, 1357.0], [51.0, 1357.0], [51.1, 1358.0], [51.2, 1358.0], [51.3, 1359.0], [51.4, 1359.0], [51.5, 1360.0], [51.6, 1361.0], [51.7, 1361.0], [51.8, 1362.0], [51.9, 1362.0], [52.0, 1363.0], [52.1, 1367.0], [52.2, 1369.0], [52.3, 1369.0], [52.4, 1369.0], [52.5, 1369.0], [52.6, 1369.0], [52.7, 1371.0], [52.8, 1374.0], [52.9, 1374.0], [53.0, 1375.0], [53.1, 1376.0], [53.2, 1376.0], [53.3, 1376.0], [53.4, 1377.0], [53.5, 1377.0], [53.6, 1377.0], [53.7, 1379.0], [53.8, 1381.0], [53.9, 1385.0], [54.0, 1385.0], [54.1, 1385.0], [54.2, 1387.0], [54.3, 1387.0], [54.4, 1388.0], [54.5, 1388.0], [54.6, 1389.0], [54.7, 1392.0], [54.8, 1393.0], [54.9, 1396.0], [55.0, 1396.0], [55.1, 1398.0], [55.2, 1399.0], [55.3, 1399.0], [55.4, 1399.0], [55.5, 1401.0], [55.6, 1404.0], [55.7, 1405.0], [55.8, 1406.0], [55.9, 1406.0], [56.0, 1409.0], [56.1, 1410.0], [56.2, 1412.0], [56.3, 1415.0], [56.4, 1415.0], [56.5, 1417.0], [56.6, 1417.0], [56.7, 1419.0], [56.8, 1419.0], [56.9, 1419.0], [57.0, 1420.0], [57.1, 1423.0], [57.2, 1425.0], [57.3, 1428.0], [57.4, 1428.0], [57.5, 1429.0], [57.6, 1429.0], [57.7, 1429.0], [57.8, 1431.0], [57.9, 1432.0], [58.0, 1432.0], [58.1, 1433.0], [58.2, 1434.0], [58.3, 1434.0], [58.4, 1434.0], [58.5, 1434.0], [58.6, 1434.0], [58.7, 1435.0], [58.8, 1435.0], [58.9, 1435.0], [59.0, 1436.0], [59.1, 1436.0], [59.2, 1437.0], [59.3, 1438.0], [59.4, 1438.0], [59.5, 1438.0], [59.6, 1439.0], [59.7, 1439.0], [59.8, 1441.0], [59.9, 1442.0], [60.0, 1445.0], [60.1, 1447.0], [60.2, 1448.0], [60.3, 1448.0], [60.4, 1448.0], [60.5, 1449.0], [60.6, 1450.0], [60.7, 1451.0], [60.8, 1453.0], [60.9, 1456.0], [61.0, 1458.0], [61.1, 1458.0], [61.2, 1459.0], [61.3, 1459.0], [61.4, 1459.0], [61.5, 1463.0], [61.6, 1465.0], [61.7, 1469.0], [61.8, 1470.0], [61.9, 1471.0], [62.0, 1472.0], [62.1, 1475.0], [62.2, 1475.0], [62.3, 1475.0], [62.4, 1476.0], [62.5, 1477.0], [62.6, 1478.0], [62.7, 1482.0], [62.8, 1483.0], [62.9, 1484.0], [63.0, 1485.0], [63.1, 1485.0], [63.2, 1489.0], [63.3, 1490.0], [63.4, 1492.0], [63.5, 1494.0], [63.6, 1494.0], [63.7, 1494.0], [63.8, 1494.0], [63.9, 1496.0], [64.0, 1496.0], [64.1, 1496.0], [64.2, 1497.0], [64.3, 1497.0], [64.4, 1504.0], [64.5, 1506.0], [64.6, 1506.0], [64.7, 1507.0], [64.8, 1509.0], [64.9, 1509.0], [65.0, 1510.0], [65.1, 1513.0], [65.2, 1515.0], [65.3, 1518.0], [65.4, 1518.0], [65.5, 1519.0], [65.6, 1520.0], [65.7, 1522.0], [65.8, 1522.0], [65.9, 1524.0], [66.0, 1525.0], [66.1, 1526.0], [66.2, 1526.0], [66.3, 1526.0], [66.4, 1529.0], [66.5, 1529.0], [66.6, 1530.0], [66.7, 1530.0], [66.8, 1530.0], [66.9, 1531.0], [67.0, 1534.0], [67.1, 1535.0], [67.2, 1538.0], [67.3, 1538.0], [67.4, 1540.0], [67.5, 1541.0], [67.6, 1541.0], [67.7, 1542.0], [67.8, 1542.0], [67.9, 1544.0], [68.0, 1548.0], [68.1, 1548.0], [68.2, 1549.0], [68.3, 1551.0], [68.4, 1552.0], [68.5, 1552.0], [68.6, 1553.0], [68.7, 1553.0], [68.8, 1554.0], [68.9, 1556.0], [69.0, 1556.0], [69.1, 1557.0], [69.2, 1558.0], [69.3, 1559.0], [69.4, 1559.0], [69.5, 1561.0], [69.6, 1562.0], [69.7, 1563.0], [69.8, 1564.0], [69.9, 1565.0], [70.0, 1565.0], [70.1, 1569.0], [70.2, 1572.0], [70.3, 1572.0], [70.4, 1573.0], [70.5, 1573.0], [70.6, 1574.0], [70.7, 1574.0], [70.8, 1575.0], [70.9, 1580.0], [71.0, 1581.0], [71.1, 1581.0], [71.2, 1581.0], [71.3, 1583.0], [71.4, 1583.0], [71.5, 1584.0], [71.6, 1587.0], [71.7, 1589.0], [71.8, 1591.0], [71.9, 1594.0], [72.0, 1594.0], [72.1, 1594.0], [72.2, 1594.0], [72.3, 1595.0], [72.4, 1596.0], [72.5, 1597.0], [72.6, 1598.0], [72.7, 1599.0], [72.8, 1602.0], [72.9, 1605.0], [73.0, 1605.0], [73.1, 1605.0], [73.2, 1606.0], [73.3, 1606.0], [73.4, 1606.0], [73.5, 1606.0], [73.6, 1607.0], [73.7, 1609.0], [73.8, 1612.0], [73.9, 1612.0], [74.0, 1613.0], [74.1, 1613.0], [74.2, 1619.0], [74.3, 1619.0], [74.4, 1621.0], [74.5, 1622.0], [74.6, 1622.0], [74.7, 1623.0], [74.8, 1623.0], [74.9, 1623.0], [75.0, 1625.0], [75.1, 1632.0], [75.2, 1635.0], [75.3, 1635.0], [75.4, 1636.0], [75.5, 1638.0], [75.6, 1644.0], [75.7, 1644.0], [75.8, 1644.0], [75.9, 1645.0], [76.0, 1648.0], [76.1, 1649.0], [76.2, 1649.0], [76.3, 1653.0], [76.4, 1654.0], [76.5, 1657.0], [76.6, 1657.0], [76.7, 1657.0], [76.8, 1659.0], [76.9, 1665.0], [77.0, 1666.0], [77.1, 1672.0], [77.2, 1672.0], [77.3, 1675.0], [77.4, 1676.0], [77.5, 1676.0], [77.6, 1679.0], [77.7, 1680.0], [77.8, 1680.0], [77.9, 1681.0], [78.0, 1683.0], [78.1, 1683.0], [78.2, 1684.0], [78.3, 1684.0], [78.4, 1684.0], [78.5, 1685.0], [78.6, 1689.0], [78.7, 1689.0], [78.8, 1697.0], [78.9, 1697.0], [79.0, 1697.0], [79.1, 1701.0], [79.2, 1704.0], [79.3, 1704.0], [79.4, 1704.0], [79.5, 1704.0], [79.6, 1704.0], [79.7, 1704.0], [79.8, 1707.0], [79.9, 1708.0], [80.0, 1709.0], [80.1, 1712.0], [80.2, 1712.0], [80.3, 1714.0], [80.4, 1719.0], [80.5, 1720.0], [80.6, 1722.0], [80.7, 1725.0], [80.8, 1726.0], [80.9, 1729.0], [81.0, 1730.0], [81.1, 1730.0], [81.2, 1731.0], [81.3, 1733.0], [81.4, 1735.0], [81.5, 1736.0], [81.6, 1737.0], [81.7, 1739.0], [81.8, 1740.0], [81.9, 1740.0], [82.0, 1740.0], [82.1, 1743.0], [82.2, 1745.0], [82.3, 1746.0], [82.4, 1747.0], [82.5, 1747.0], [82.6, 1748.0], [82.7, 1751.0], [82.8, 1753.0], [82.9, 1753.0], [83.0, 1754.0], [83.1, 1756.0], [83.2, 1758.0], [83.3, 1762.0], [83.4, 1768.0], [83.5, 1768.0], [83.6, 1769.0], [83.7, 1769.0], [83.8, 1769.0], [83.9, 1770.0], [84.0, 1772.0], [84.1, 1772.0], [84.2, 1773.0], [84.3, 1774.0], [84.4, 1776.0], [84.5, 1778.0], [84.6, 1778.0], [84.7, 1778.0], [84.8, 1778.0], [84.9, 1780.0], [85.0, 1782.0], [85.1, 1785.0], [85.2, 1786.0], [85.3, 1786.0], [85.4, 1787.0], [85.5, 1787.0], [85.6, 1787.0], [85.7, 1790.0], [85.8, 1792.0], [85.9, 1793.0], [86.0, 1793.0], [86.1, 1794.0], [86.2, 1796.0], [86.3, 1798.0], [86.4, 1798.0], [86.5, 1798.0], [86.6, 1801.0], [86.7, 1801.0], [86.8, 1804.0], [86.9, 1806.0], [87.0, 1806.0], [87.1, 1806.0], [87.2, 1806.0], [87.3, 1809.0], [87.4, 1809.0], [87.5, 1813.0], [87.6, 1813.0], [87.7, 1817.0], [87.8, 1827.0], [87.9, 1834.0], [88.0, 1837.0], [88.1, 1837.0], [88.2, 1840.0], [88.3, 1840.0], [88.4, 1844.0], [88.5, 1848.0], [88.6, 1849.0], [88.7, 1853.0], [88.8, 1859.0], [88.9, 1862.0], [89.0, 1864.0], [89.1, 1866.0], [89.2, 1866.0], [89.3, 1870.0], [89.4, 1871.0], [89.5, 1875.0], [89.6, 1879.0], [89.7, 1879.0], [89.8, 1881.0], [89.9, 1881.0], [90.0, 1886.0], [90.1, 1886.0], [90.2, 1890.0], [90.3, 1895.0], [90.4, 1906.0], [90.5, 1911.0], [90.6, 1912.0], [90.7, 1913.0], [90.8, 1913.0], [90.9, 1931.0], [91.0, 1931.0], [91.1, 1938.0], [91.2, 1939.0], [91.3, 1947.0], [91.4, 1947.0], [91.5, 1948.0], [91.6, 1949.0], [91.7, 1954.0], [91.8, 1956.0], [91.9, 1956.0], [92.0, 1957.0], [92.1, 1958.0], [92.2, 1963.0], [92.3, 1966.0], [92.4, 1971.0], [92.5, 1973.0], [92.6, 1976.0], [92.7, 1977.0], [92.8, 1977.0], [92.9, 1979.0], [93.0, 1984.0], [93.1, 1990.0], [93.2, 2000.0], [93.3, 2005.0], [93.4, 2006.0], [93.5, 2010.0], [93.6, 2021.0], [93.7, 2021.0], [93.8, 2021.0], [93.9, 2025.0], [94.0, 2028.0], [94.1, 2028.0], [94.2, 2028.0], [94.3, 2040.0], [94.4, 2042.0], [94.5, 2044.0], [94.6, 2044.0], [94.7, 2050.0], [94.8, 2055.0], [94.9, 2064.0], [95.0, 2065.0], [95.1, 2067.0], [95.2, 2070.0], [95.3, 2074.0], [95.4, 2080.0], [95.5, 2080.0], [95.6, 2083.0], [95.7, 2095.0], [95.8, 2096.0], [95.9, 2099.0], [96.0, 2102.0], [96.1, 2108.0], [96.2, 2109.0], [96.3, 2119.0], [96.4, 2119.0], [96.5, 2133.0], [96.6, 2134.0], [96.7, 2143.0], [96.8, 2147.0], [96.9, 2164.0], [97.0, 2166.0], [97.1, 2179.0], [97.2, 2188.0], [97.3, 2188.0], [97.4, 2194.0], [97.5, 2196.0], [97.6, 2197.0], [97.7, 2213.0], [97.8, 2219.0], [97.9, 2232.0], [98.0, 2251.0], [98.1, 2259.0], [98.2, 2259.0], [98.3, 2296.0], [98.4, 2341.0], [98.5, 2344.0], [98.6, 2351.0], [98.7, 2376.0], [98.8, 2382.0], [98.9, 2406.0], [99.0, 2413.0], [99.1, 2413.0], [99.2, 2421.0], [99.3, 2451.0], [99.4, 2511.0], [99.5, 2553.0], [99.6, 2592.0], [99.7, 2608.0], [99.8, 2622.0], [99.9, 2904.0], [100.0, 2904.0]], "isOverall": false, "label": "Delete PROB", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 9.0], [1.4, 12.0], [1.5, 13.0], [1.6, 29.0], [1.7, 29.0], [1.8, 56.0], [1.9, 56.0], [2.0, 71.0], [2.1, 121.0], [2.2, 122.0], [2.3, 128.0], [2.4, 133.0], [2.5, 179.0], [2.6, 180.0], [2.7, 189.0], [2.8, 193.0], [2.9, 193.0], [3.0, 195.0], [3.1, 211.0], [3.2, 227.0], [3.3, 254.0], [3.4, 256.0], [3.5, 263.0], [3.6, 273.0], [3.7, 277.0], [3.8, 277.0], [3.9, 314.0], [4.0, 317.0], [4.1, 320.0], [4.2, 340.0], [4.3, 351.0], [4.4, 358.0], [4.5, 362.0], [4.6, 364.0], [4.7, 364.0], [4.8, 371.0], [4.9, 375.0], [5.0, 375.0], [5.1, 379.0], [5.2, 380.0], [5.3, 386.0], [5.4, 394.0], [5.5, 398.0], [5.6, 403.0], [5.7, 403.0], [5.8, 406.0], [5.9, 409.0], [6.0, 409.0], [6.1, 411.0], [6.2, 431.0], [6.3, 438.0], [6.4, 446.0], [6.5, 449.0], [6.6, 449.0], [6.7, 452.0], [6.8, 454.0], [6.9, 461.0], [7.0, 462.0], [7.1, 463.0], [7.2, 465.0], [7.3, 468.0], [7.4, 468.0], [7.5, 468.0], [7.6, 476.0], [7.7, 479.0], [7.8, 480.0], [7.9, 482.0], [8.0, 484.0], [8.1, 486.0], [8.2, 496.0], [8.3, 502.0], [8.4, 512.0], [8.5, 512.0], [8.6, 521.0], [8.7, 527.0], [8.8, 527.0], [8.9, 528.0], [9.0, 529.0], [9.1, 534.0], [9.2, 534.0], [9.3, 535.0], [9.4, 535.0], [9.5, 542.0], [9.6, 552.0], [9.7, 563.0], [9.8, 568.0], [9.9, 573.0], [10.0, 574.0], [10.1, 576.0], [10.2, 579.0], [10.3, 579.0], [10.4, 585.0], [10.5, 588.0], [10.6, 592.0], [10.7, 592.0], [10.8, 597.0], [10.9, 598.0], [11.0, 606.0], [11.1, 610.0], [11.2, 613.0], [11.3, 613.0], [11.4, 613.0], [11.5, 645.0], [11.6, 647.0], [11.7, 648.0], [11.8, 652.0], [11.9, 655.0], [12.0, 668.0], [12.1, 670.0], [12.2, 670.0], [12.3, 670.0], [12.4, 674.0], [12.5, 681.0], [12.6, 686.0], [12.7, 694.0], [12.8, 700.0], [12.9, 707.0], [13.0, 708.0], [13.1, 708.0], [13.2, 718.0], [13.3, 724.0], [13.4, 728.0], [13.5, 729.0], [13.6, 741.0], [13.7, 744.0], [13.8, 745.0], [13.9, 748.0], [14.0, 754.0], [14.1, 754.0], [14.2, 755.0], [14.3, 762.0], [14.4, 766.0], [14.5, 767.0], [14.6, 768.0], [14.7, 768.0], [14.8, 770.0], [14.9, 774.0], [15.0, 774.0], [15.1, 777.0], [15.2, 784.0], [15.3, 785.0], [15.4, 788.0], [15.5, 790.0], [15.6, 793.0], [15.7, 797.0], [15.8, 797.0], [15.9, 797.0], [16.0, 798.0], [16.1, 799.0], [16.2, 800.0], [16.3, 803.0], [16.4, 811.0], [16.5, 811.0], [16.6, 812.0], [16.7, 812.0], [16.8, 812.0], [16.9, 812.0], [17.0, 813.0], [17.1, 815.0], [17.2, 817.0], [17.3, 818.0], [17.4, 828.0], [17.5, 830.0], [17.6, 831.0], [17.7, 836.0], [17.8, 836.0], [17.9, 837.0], [18.0, 841.0], [18.1, 843.0], [18.2, 845.0], [18.3, 846.0], [18.4, 846.0], [18.5, 849.0], [18.6, 850.0], [18.7, 850.0], [18.8, 852.0], [18.9, 855.0], [19.0, 861.0], [19.1, 861.0], [19.2, 865.0], [19.3, 866.0], [19.4, 869.0], [19.5, 869.0], [19.6, 869.0], [19.7, 869.0], [19.8, 869.0], [19.9, 869.0], [20.0, 870.0], [20.1, 873.0], [20.2, 873.0], [20.3, 874.0], [20.4, 876.0], [20.5, 878.0], [20.6, 878.0], [20.7, 878.0], [20.8, 883.0], [20.9, 883.0], [21.0, 885.0], [21.1, 887.0], [21.2, 890.0], [21.3, 895.0], [21.4, 896.0], [21.5, 896.0], [21.6, 898.0], [21.7, 899.0], [21.8, 899.0], [21.9, 899.0], [22.0, 902.0], [22.1, 902.0], [22.2, 902.0], [22.3, 903.0], [22.4, 904.0], [22.5, 904.0], [22.6, 905.0], [22.7, 907.0], [22.8, 912.0], [22.9, 913.0], [23.0, 913.0], [23.1, 918.0], [23.2, 918.0], [23.3, 919.0], [23.4, 919.0], [23.5, 921.0], [23.6, 923.0], [23.7, 924.0], [23.8, 925.0], [23.9, 925.0], [24.0, 928.0], [24.1, 930.0], [24.2, 934.0], [24.3, 934.0], [24.4, 934.0], [24.5, 934.0], [24.6, 938.0], [24.7, 940.0], [24.8, 940.0], [24.9, 941.0], [25.0, 941.0], [25.1, 943.0], [25.2, 944.0], [25.3, 944.0], [25.4, 945.0], [25.5, 947.0], [25.6, 947.0], [25.7, 948.0], [25.8, 949.0], [25.9, 949.0], [26.0, 949.0], [26.1, 950.0], [26.2, 950.0], [26.3, 953.0], [26.4, 954.0], [26.5, 956.0], [26.6, 957.0], [26.7, 960.0], [26.8, 962.0], [26.9, 964.0], [27.0, 965.0], [27.1, 965.0], [27.2, 965.0], [27.3, 966.0], [27.4, 966.0], [27.5, 966.0], [27.6, 968.0], [27.7, 970.0], [27.8, 973.0], [27.9, 974.0], [28.0, 974.0], [28.1, 974.0], [28.2, 978.0], [28.3, 979.0], [28.4, 981.0], [28.5, 983.0], [28.6, 984.0], [28.7, 984.0], [28.8, 985.0], [28.9, 985.0], [29.0, 985.0], [29.1, 986.0], [29.2, 986.0], [29.3, 987.0], [29.4, 990.0], [29.5, 992.0], [29.6, 994.0], [29.7, 995.0], [29.8, 997.0], [29.9, 999.0], [30.0, 999.0], [30.1, 1004.0], [30.2, 1007.0], [30.3, 1009.0], [30.4, 1011.0], [30.5, 1011.0], [30.6, 1012.0], [30.7, 1012.0], [30.8, 1015.0], [30.9, 1015.0], [31.0, 1018.0], [31.1, 1018.0], [31.2, 1018.0], [31.3, 1019.0], [31.4, 1019.0], [31.5, 1020.0], [31.6, 1022.0], [31.7, 1023.0], [31.8, 1023.0], [31.9, 1026.0], [32.0, 1028.0], [32.1, 1028.0], [32.2, 1029.0], [32.3, 1030.0], [32.4, 1030.0], [32.5, 1031.0], [32.6, 1031.0], [32.7, 1041.0], [32.8, 1041.0], [32.9, 1041.0], [33.0, 1042.0], [33.1, 1044.0], [33.2, 1044.0], [33.3, 1045.0], [33.4, 1049.0], [33.5, 1049.0], [33.6, 1050.0], [33.7, 1050.0], [33.8, 1052.0], [33.9, 1053.0], [34.0, 1057.0], [34.1, 1058.0], [34.2, 1059.0], [34.3, 1059.0], [34.4, 1059.0], [34.5, 1059.0], [34.6, 1059.0], [34.7, 1060.0], [34.8, 1060.0], [34.9, 1061.0], [35.0, 1061.0], [35.1, 1062.0], [35.2, 1066.0], [35.3, 1066.0], [35.4, 1066.0], [35.5, 1066.0], [35.6, 1066.0], [35.7, 1066.0], [35.8, 1068.0], [35.9, 1068.0], [36.0, 1070.0], [36.1, 1072.0], [36.2, 1072.0], [36.3, 1073.0], [36.4, 1075.0], [36.5, 1075.0], [36.6, 1076.0], [36.7, 1077.0], [36.8, 1078.0], [36.9, 1078.0], [37.0, 1078.0], [37.1, 1079.0], [37.2, 1079.0], [37.3, 1079.0], [37.4, 1079.0], [37.5, 1079.0], [37.6, 1080.0], [37.7, 1083.0], [37.8, 1085.0], [37.9, 1085.0], [38.0, 1086.0], [38.1, 1087.0], [38.2, 1088.0], [38.3, 1088.0], [38.4, 1088.0], [38.5, 1089.0], [38.6, 1089.0], [38.7, 1094.0], [38.8, 1096.0], [38.9, 1096.0], [39.0, 1098.0], [39.1, 1100.0], [39.2, 1101.0], [39.3, 1101.0], [39.4, 1101.0], [39.5, 1101.0], [39.6, 1103.0], [39.7, 1104.0], [39.8, 1104.0], [39.9, 1105.0], [40.0, 1105.0], [40.1, 1106.0], [40.2, 1106.0], [40.3, 1110.0], [40.4, 1110.0], [40.5, 1111.0], [40.6, 1113.0], [40.7, 1113.0], [40.8, 1114.0], [40.9, 1116.0], [41.0, 1116.0], [41.1, 1117.0], [41.2, 1117.0], [41.3, 1117.0], [41.4, 1117.0], [41.5, 1119.0], [41.6, 1119.0], [41.7, 1120.0], [41.8, 1123.0], [41.9, 1126.0], [42.0, 1128.0], [42.1, 1128.0], [42.2, 1133.0], [42.3, 1135.0], [42.4, 1135.0], [42.5, 1138.0], [42.6, 1140.0], [42.7, 1140.0], [42.8, 1149.0], [42.9, 1151.0], [43.0, 1151.0], [43.1, 1152.0], [43.2, 1152.0], [43.3, 1153.0], [43.4, 1153.0], [43.5, 1154.0], [43.6, 1159.0], [43.7, 1161.0], [43.8, 1163.0], [43.9, 1164.0], [44.0, 1164.0], [44.1, 1166.0], [44.2, 1166.0], [44.3, 1166.0], [44.4, 1170.0], [44.5, 1171.0], [44.6, 1171.0], [44.7, 1171.0], [44.8, 1172.0], [44.9, 1172.0], [45.0, 1173.0], [45.1, 1174.0], [45.2, 1174.0], [45.3, 1177.0], [45.4, 1177.0], [45.5, 1178.0], [45.6, 1179.0], [45.7, 1179.0], [45.8, 1179.0], [45.9, 1180.0], [46.0, 1182.0], [46.1, 1184.0], [46.2, 1184.0], [46.3, 1185.0], [46.4, 1186.0], [46.5, 1188.0], [46.6, 1189.0], [46.7, 1190.0], [46.8, 1190.0], [46.9, 1190.0], [47.0, 1192.0], [47.1, 1192.0], [47.2, 1192.0], [47.3, 1193.0], [47.4, 1194.0], [47.5, 1194.0], [47.6, 1194.0], [47.7, 1194.0], [47.8, 1197.0], [47.9, 1197.0], [48.0, 1198.0], [48.1, 1198.0], [48.2, 1198.0], [48.3, 1198.0], [48.4, 1198.0], [48.5, 1198.0], [48.6, 1198.0], [48.7, 1199.0], [48.8, 1200.0], [48.9, 1200.0], [49.0, 1200.0], [49.1, 1201.0], [49.2, 1202.0], [49.3, 1202.0], [49.4, 1206.0], [49.5, 1207.0], [49.6, 1207.0], [49.7, 1207.0], [49.8, 1208.0], [49.9, 1209.0], [50.0, 1211.0], [50.1, 1211.0], [50.2, 1211.0], [50.3, 1212.0], [50.4, 1213.0], [50.5, 1213.0], [50.6, 1216.0], [50.7, 1216.0], [50.8, 1216.0], [50.9, 1217.0], [51.0, 1218.0], [51.1, 1218.0], [51.2, 1219.0], [51.3, 1220.0], [51.4, 1220.0], [51.5, 1220.0], [51.6, 1222.0], [51.7, 1222.0], [51.8, 1222.0], [51.9, 1224.0], [52.0, 1225.0], [52.1, 1228.0], [52.2, 1228.0], [52.3, 1228.0], [52.4, 1228.0], [52.5, 1228.0], [52.6, 1230.0], [52.7, 1230.0], [52.8, 1231.0], [52.9, 1231.0], [53.0, 1232.0], [53.1, 1235.0], [53.2, 1235.0], [53.3, 1235.0], [53.4, 1236.0], [53.5, 1238.0], [53.6, 1238.0], [53.7, 1238.0], [53.8, 1239.0], [53.9, 1240.0], [54.0, 1240.0], [54.1, 1244.0], [54.2, 1244.0], [54.3, 1244.0], [54.4, 1245.0], [54.5, 1246.0], [54.6, 1248.0], [54.7, 1248.0], [54.8, 1248.0], [54.9, 1253.0], [55.0, 1253.0], [55.1, 1253.0], [55.2, 1253.0], [55.3, 1254.0], [55.4, 1259.0], [55.5, 1260.0], [55.6, 1260.0], [55.7, 1260.0], [55.8, 1261.0], [55.9, 1263.0], [56.0, 1263.0], [56.1, 1263.0], [56.2, 1263.0], [56.3, 1263.0], [56.4, 1265.0], [56.5, 1267.0], [56.6, 1267.0], [56.7, 1269.0], [56.8, 1271.0], [56.9, 1271.0], [57.0, 1272.0], [57.1, 1272.0], [57.2, 1274.0], [57.3, 1274.0], [57.4, 1274.0], [57.5, 1275.0], [57.6, 1277.0], [57.7, 1277.0], [57.8, 1278.0], [57.9, 1280.0], [58.0, 1280.0], [58.1, 1281.0], [58.2, 1285.0], [58.3, 1287.0], [58.4, 1289.0], [58.5, 1291.0], [58.6, 1292.0], [58.7, 1294.0], [58.8, 1296.0], [58.9, 1296.0], [59.0, 1296.0], [59.1, 1298.0], [59.2, 1299.0], [59.3, 1300.0], [59.4, 1301.0], [59.5, 1302.0], [59.6, 1302.0], [59.7, 1303.0], [59.8, 1304.0], [59.9, 1304.0], [60.0, 1304.0], [60.1, 1305.0], [60.2, 1306.0], [60.3, 1308.0], [60.4, 1309.0], [60.5, 1309.0], [60.6, 1309.0], [60.7, 1310.0], [60.8, 1310.0], [60.9, 1310.0], [61.0, 1311.0], [61.1, 1311.0], [61.2, 1312.0], [61.3, 1313.0], [61.4, 1316.0], [61.5, 1316.0], [61.6, 1317.0], [61.7, 1317.0], [61.8, 1317.0], [61.9, 1318.0], [62.0, 1318.0], [62.1, 1319.0], [62.2, 1320.0], [62.3, 1320.0], [62.4, 1322.0], [62.5, 1323.0], [62.6, 1323.0], [62.7, 1323.0], [62.8, 1324.0], [62.9, 1325.0], [63.0, 1326.0], [63.1, 1328.0], [63.2, 1329.0], [63.3, 1329.0], [63.4, 1331.0], [63.5, 1333.0], [63.6, 1333.0], [63.7, 1336.0], [63.8, 1336.0], [63.9, 1337.0], [64.0, 1337.0], [64.1, 1338.0], [64.2, 1338.0], [64.3, 1342.0], [64.4, 1344.0], [64.5, 1344.0], [64.6, 1347.0], [64.7, 1352.0], [64.8, 1355.0], [64.9, 1355.0], [65.0, 1355.0], [65.1, 1356.0], [65.2, 1357.0], [65.3, 1358.0], [65.4, 1363.0], [65.5, 1363.0], [65.6, 1365.0], [65.7, 1366.0], [65.8, 1371.0], [65.9, 1373.0], [66.0, 1374.0], [66.1, 1374.0], [66.2, 1374.0], [66.3, 1378.0], [66.4, 1378.0], [66.5, 1378.0], [66.6, 1379.0], [66.7, 1381.0], [66.8, 1381.0], [66.9, 1382.0], [67.0, 1385.0], [67.1, 1385.0], [67.2, 1388.0], [67.3, 1388.0], [67.4, 1388.0], [67.5, 1389.0], [67.6, 1390.0], [67.7, 1391.0], [67.8, 1394.0], [67.9, 1396.0], [68.0, 1397.0], [68.1, 1398.0], [68.2, 1398.0], [68.3, 1398.0], [68.4, 1401.0], [68.5, 1401.0], [68.6, 1402.0], [68.7, 1402.0], [68.8, 1405.0], [68.9, 1406.0], [69.0, 1407.0], [69.1, 1409.0], [69.2, 1409.0], [69.3, 1409.0], [69.4, 1409.0], [69.5, 1412.0], [69.6, 1412.0], [69.7, 1420.0], [69.8, 1421.0], [69.9, 1424.0], [70.0, 1424.0], [70.1, 1424.0], [70.2, 1425.0], [70.3, 1425.0], [70.4, 1426.0], [70.5, 1427.0], [70.6, 1428.0], [70.7, 1428.0], [70.8, 1429.0], [70.9, 1431.0], [71.0, 1431.0], [71.1, 1431.0], [71.2, 1434.0], [71.3, 1434.0], [71.4, 1435.0], [71.5, 1436.0], [71.6, 1437.0], [71.7, 1438.0], [71.8, 1439.0], [71.9, 1441.0], [72.0, 1441.0], [72.1, 1441.0], [72.2, 1442.0], [72.3, 1443.0], [72.4, 1446.0], [72.5, 1446.0], [72.6, 1447.0], [72.7, 1449.0], [72.8, 1450.0], [72.9, 1450.0], [73.0, 1450.0], [73.1, 1453.0], [73.2, 1457.0], [73.3, 1458.0], [73.4, 1460.0], [73.5, 1461.0], [73.6, 1461.0], [73.7, 1464.0], [73.8, 1464.0], [73.9, 1464.0], [74.0, 1465.0], [74.1, 1466.0], [74.2, 1469.0], [74.3, 1469.0], [74.4, 1470.0], [74.5, 1473.0], [74.6, 1474.0], [74.7, 1475.0], [74.8, 1475.0], [74.9, 1477.0], [75.0, 1477.0], [75.1, 1478.0], [75.2, 1479.0], [75.3, 1482.0], [75.4, 1487.0], [75.5, 1488.0], [75.6, 1490.0], [75.7, 1490.0], [75.8, 1490.0], [75.9, 1494.0], [76.0, 1496.0], [76.1, 1497.0], [76.2, 1500.0], [76.3, 1500.0], [76.4, 1504.0], [76.5, 1506.0], [76.6, 1506.0], [76.7, 1506.0], [76.8, 1508.0], [76.9, 1508.0], [77.0, 1509.0], [77.1, 1509.0], [77.2, 1511.0], [77.3, 1511.0], [77.4, 1515.0], [77.5, 1515.0], [77.6, 1515.0], [77.7, 1519.0], [77.8, 1520.0], [77.9, 1523.0], [78.0, 1523.0], [78.1, 1524.0], [78.2, 1527.0], [78.3, 1530.0], [78.4, 1533.0], [78.5, 1534.0], [78.6, 1534.0], [78.7, 1535.0], [78.8, 1535.0], [78.9, 1536.0], [79.0, 1537.0], [79.1, 1539.0], [79.2, 1541.0], [79.3, 1541.0], [79.4, 1543.0], [79.5, 1543.0], [79.6, 1545.0], [79.7, 1546.0], [79.8, 1548.0], [79.9, 1549.0], [80.0, 1549.0], [80.1, 1552.0], [80.2, 1552.0], [80.3, 1559.0], [80.4, 1559.0], [80.5, 1561.0], [80.6, 1563.0], [80.7, 1566.0], [80.8, 1567.0], [80.9, 1570.0], [81.0, 1571.0], [81.1, 1574.0], [81.2, 1574.0], [81.3, 1578.0], [81.4, 1578.0], [81.5, 1582.0], [81.6, 1583.0], [81.7, 1585.0], [81.8, 1587.0], [81.9, 1589.0], [82.0, 1590.0], [82.1, 1592.0], [82.2, 1592.0], [82.3, 1592.0], [82.4, 1593.0], [82.5, 1597.0], [82.6, 1605.0], [82.7, 1605.0], [82.8, 1606.0], [82.9, 1609.0], [83.0, 1609.0], [83.1, 1614.0], [83.2, 1614.0], [83.3, 1615.0], [83.4, 1616.0], [83.5, 1616.0], [83.6, 1617.0], [83.7, 1619.0], [83.8, 1622.0], [83.9, 1623.0], [84.0, 1625.0], [84.1, 1627.0], [84.2, 1627.0], [84.3, 1635.0], [84.4, 1636.0], [84.5, 1640.0], [84.6, 1641.0], [84.7, 1642.0], [84.8, 1644.0], [84.9, 1648.0], [85.0, 1650.0], [85.1, 1650.0], [85.2, 1653.0], [85.3, 1654.0], [85.4, 1655.0], [85.5, 1661.0], [85.6, 1663.0], [85.7, 1665.0], [85.8, 1672.0], [85.9, 1672.0], [86.0, 1672.0], [86.1, 1677.0], [86.2, 1678.0], [86.3, 1679.0], [86.4, 1685.0], [86.5, 1686.0], [86.6, 1687.0], [86.7, 1688.0], [86.8, 1691.0], [86.9, 1692.0], [87.0, 1692.0], [87.1, 1692.0], [87.2, 1692.0], [87.3, 1692.0], [87.4, 1693.0], [87.5, 1694.0], [87.6, 1695.0], [87.7, 1696.0], [87.8, 1696.0], [87.9, 1696.0], [88.0, 1699.0], [88.1, 1699.0], [88.2, 1701.0], [88.3, 1701.0], [88.4, 1702.0], [88.5, 1704.0], [88.6, 1706.0], [88.7, 1709.0], [88.8, 1709.0], [88.9, 1711.0], [89.0, 1714.0], [89.1, 1715.0], [89.2, 1720.0], [89.3, 1721.0], [89.4, 1726.0], [89.5, 1728.0], [89.6, 1736.0], [89.7, 1737.0], [89.8, 1737.0], [89.9, 1737.0], [90.0, 1738.0], [90.1, 1741.0], [90.2, 1743.0], [90.3, 1746.0], [90.4, 1748.0], [90.5, 1751.0], [90.6, 1752.0], [90.7, 1752.0], [90.8, 1756.0], [90.9, 1757.0], [91.0, 1758.0], [91.1, 1758.0], [91.2, 1761.0], [91.3, 1767.0], [91.4, 1772.0], [91.5, 1775.0], [91.6, 1775.0], [91.7, 1776.0], [91.8, 1778.0], [91.9, 1779.0], [92.0, 1782.0], [92.1, 1783.0], [92.2, 1784.0], [92.3, 1788.0], [92.4, 1793.0], [92.5, 1797.0], [92.6, 1797.0], [92.7, 1798.0], [92.8, 1805.0], [92.9, 1806.0], [93.0, 1817.0], [93.1, 1819.0], [93.2, 1829.0], [93.3, 1832.0], [93.4, 1833.0], [93.5, 1833.0], [93.6, 1841.0], [93.7, 1842.0], [93.8, 1845.0], [93.9, 1847.0], [94.0, 1847.0], [94.1, 1847.0], [94.2, 1860.0], [94.3, 1865.0], [94.4, 1865.0], [94.5, 1865.0], [94.6, 1867.0], [94.7, 1875.0], [94.8, 1877.0], [94.9, 1878.0], [95.0, 1878.0], [95.1, 1888.0], [95.2, 1907.0], [95.3, 1921.0], [95.4, 1921.0], [95.5, 1925.0], [95.6, 1928.0], [95.7, 1937.0], [95.8, 1943.0], [95.9, 1947.0], [96.0, 1948.0], [96.1, 1954.0], [96.2, 1955.0], [96.3, 1955.0], [96.4, 1961.0], [96.5, 1983.0], [96.6, 1999.0], [96.7, 2010.0], [96.8, 2018.0], [96.9, 2020.0], [97.0, 2028.0], [97.1, 2036.0], [97.2, 2036.0], [97.3, 2036.0], [97.4, 2044.0], [97.5, 2045.0], [97.6, 2063.0], [97.7, 2069.0], [97.8, 2109.0], [97.9, 2118.0], [98.0, 2119.0], [98.1, 2147.0], [98.2, 2147.0], [98.3, 2151.0], [98.4, 2167.0], [98.5, 2212.0], [98.6, 2219.0], [98.7, 2245.0], [98.8, 2284.0], [98.9, 2297.0], [99.0, 2317.0], [99.1, 2317.0], [99.2, 2320.0], [99.3, 2353.0], [99.4, 2391.0], [99.5, 2403.0], [99.6, 2430.0], [99.7, 2434.0], [99.8, 2467.0], [99.9, 2633.0], [100.0, 2633.0]], "isOverall": false, "label": "Get PROB ID", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 173.0], [1.3, 177.0], [1.4, 219.0], [1.5, 220.0], [1.6, 230.0], [1.7, 238.0], [1.8, 272.0], [1.9, 307.0], [2.0, 326.0], [2.1, 333.0], [2.2, 347.0], [2.3, 367.0], [2.4, 372.0], [2.5, 378.0], [2.6, 390.0], [2.7, 398.0], [2.8, 413.0], [2.9, 446.0], [3.0, 469.0], [3.1, 484.0], [3.2, 495.0], [3.3, 497.0], [3.4, 500.0], [3.5, 542.0], [3.6, 553.0], [3.7, 575.0], [3.8, 594.0], [3.9, 613.0], [4.0, 623.0], [4.1, 625.0], [4.2, 627.0], [4.3, 635.0], [4.4, 655.0], [4.5, 669.0], [4.6, 678.0], [4.7, 700.0], [4.8, 706.0], [4.9, 716.0], [5.0, 719.0], [5.1, 722.0], [5.2, 728.0], [5.3, 738.0], [5.4, 765.0], [5.5, 766.0], [5.6, 769.0], [5.7, 777.0], [5.8, 782.0], [5.9, 793.0], [6.0, 798.0], [6.1, 808.0], [6.2, 822.0], [6.3, 830.0], [6.4, 831.0], [6.5, 837.0], [6.6, 844.0], [6.7, 862.0], [6.8, 870.0], [6.9, 875.0], [7.0, 878.0], [7.1, 894.0], [7.2, 900.0], [7.3, 916.0], [7.4, 947.0], [7.5, 952.0], [7.6, 963.0], [7.7, 973.0], [7.8, 978.0], [7.9, 981.0], [8.0, 982.0], [8.1, 999.0], [8.2, 1002.0], [8.3, 1034.0], [8.4, 1043.0], [8.5, 1060.0], [8.6, 1070.0], [8.7, 1085.0], [8.8, 1094.0], [8.9, 1099.0], [9.0, 1101.0], [9.1, 1112.0], [9.2, 1120.0], [9.3, 1127.0], [9.4, 1149.0], [9.5, 1159.0], [9.6, 1163.0], [9.7, 1170.0], [9.8, 1172.0], [9.9, 1181.0], [10.0, 1193.0], [10.1, 1199.0], [10.2, 1201.0], [10.3, 1218.0], [10.4, 1227.0], [10.5, 1231.0], [10.6, 1241.0], [10.7, 1258.0], [10.8, 1270.0], [10.9, 1275.0], [11.0, 1277.0], [11.1, 1280.0], [11.2, 1285.0], [11.3, 1287.0], [11.4, 1292.0], [11.5, 1294.0], [11.6, 1300.0], [11.7, 1308.0], [11.8, 1314.0], [11.9, 1336.0], [12.0, 1346.0], [12.1, 1349.0], [12.2, 1353.0], [12.3, 1358.0], [12.4, 1366.0], [12.5, 1368.0], [12.6, 1379.0], [12.7, 1382.0], [12.8, 1389.0], [12.9, 1391.0], [13.0, 1397.0], [13.1, 1398.0], [13.2, 1403.0], [13.3, 1408.0], [13.4, 1416.0], [13.5, 1420.0], [13.6, 1423.0], [13.7, 1424.0], [13.8, 1430.0], [13.9, 1436.0], [14.0, 1437.0], [14.1, 1440.0], [14.2, 1451.0], [14.3, 1459.0], [14.4, 1468.0], [14.5, 1473.0], [14.6, 1479.0], [14.7, 1483.0], [14.8, 1485.0], [14.9, 1486.0], [15.0, 1492.0], [15.1, 1494.0], [15.2, 1496.0], [15.3, 1497.0], [15.4, 1503.0], [15.5, 1504.0], [15.6, 1508.0], [15.7, 1515.0], [15.8, 1520.0], [15.9, 1521.0], [16.0, 1527.0], [16.1, 1535.0], [16.2, 1536.0], [16.3, 1538.0], [16.4, 1546.0], [16.5, 1549.0], [16.6, 1552.0], [16.7, 1559.0], [16.8, 1560.0], [16.9, 1560.0], [17.0, 1563.0], [17.1, 1565.0], [17.2, 1569.0], [17.3, 1571.0], [17.4, 1580.0], [17.5, 1585.0], [17.6, 1593.0], [17.7, 1597.0], [17.8, 1600.0], [17.9, 1608.0], [18.0, 1610.0], [18.1, 1614.0], [18.2, 1617.0], [18.3, 1626.0], [18.4, 1627.0], [18.5, 1627.0], [18.6, 1631.0], [18.7, 1634.0], [18.8, 1634.0], [18.9, 1636.0], [19.0, 1636.0], [19.1, 1639.0], [19.2, 1643.0], [19.3, 1644.0], [19.4, 1646.0], [19.5, 1647.0], [19.6, 1650.0], [19.7, 1652.0], [19.8, 1653.0], [19.9, 1656.0], [20.0, 1658.0], [20.1, 1659.0], [20.2, 1660.0], [20.3, 1666.0], [20.4, 1673.0], [20.5, 1676.0], [20.6, 1683.0], [20.7, 1683.0], [20.8, 1684.0], [20.9, 1690.0], [21.0, 1697.0], [21.1, 1700.0], [21.2, 1703.0], [21.3, 1705.0], [21.4, 1708.0], [21.5, 1708.0], [21.6, 1708.0], [21.7, 1710.0], [21.8, 1713.0], [21.9, 1714.0], [22.0, 1715.0], [22.1, 1722.0], [22.2, 1723.0], [22.3, 1725.0], [22.4, 1727.0], [22.5, 1728.0], [22.6, 1731.0], [22.7, 1734.0], [22.8, 1736.0], [22.9, 1738.0], [23.0, 1739.0], [23.1, 1741.0], [23.2, 1742.0], [23.3, 1744.0], [23.4, 1746.0], [23.5, 1747.0], [23.6, 1748.0], [23.7, 1751.0], [23.8, 1752.0], [23.9, 1756.0], [24.0, 1757.0], [24.1, 1760.0], [24.2, 1763.0], [24.3, 1764.0], [24.4, 1766.0], [24.5, 1768.0], [24.6, 1769.0], [24.7, 1769.0], [24.8, 1771.0], [24.9, 1771.0], [25.0, 1773.0], [25.1, 1777.0], [25.2, 1779.0], [25.3, 1779.0], [25.4, 1782.0], [25.5, 1784.0], [25.6, 1784.0], [25.7, 1785.0], [25.8, 1787.0], [25.9, 1789.0], [26.0, 1796.0], [26.1, 1798.0], [26.2, 1799.0], [26.3, 1800.0], [26.4, 1800.0], [26.5, 1801.0], [26.6, 1803.0], [26.7, 1805.0], [26.8, 1806.0], [26.9, 1808.0], [27.0, 1811.0], [27.1, 1815.0], [27.2, 1817.0], [27.3, 1817.0], [27.4, 1819.0], [27.5, 1820.0], [27.6, 1822.0], [27.7, 1823.0], [27.8, 1824.0], [27.9, 1825.0], [28.0, 1825.0], [28.1, 1825.0], [28.2, 1826.0], [28.3, 1827.0], [28.4, 1827.0], [28.5, 1831.0], [28.6, 1831.0], [28.7, 1832.0], [28.8, 1832.0], [28.9, 1840.0], [29.0, 1843.0], [29.1, 1843.0], [29.2, 1849.0], [29.3, 1851.0], [29.4, 1851.0], [29.5, 1852.0], [29.6, 1852.0], [29.7, 1853.0], [29.8, 1856.0], [29.9, 1856.0], [30.0, 1858.0], [30.1, 1860.0], [30.2, 1862.0], [30.3, 1863.0], [30.4, 1863.0], [30.5, 1867.0], [30.6, 1869.0], [30.7, 1871.0], [30.8, 1872.0], [30.9, 1873.0], [31.0, 1881.0], [31.1, 1888.0], [31.2, 1889.0], [31.3, 1890.0], [31.4, 1893.0], [31.5, 1895.0], [31.6, 1897.0], [31.7, 1899.0], [31.8, 1899.0], [31.9, 1901.0], [32.0, 1901.0], [32.1, 1904.0], [32.2, 1904.0], [32.3, 1905.0], [32.4, 1909.0], [32.5, 1909.0], [32.6, 1911.0], [32.7, 1912.0], [32.8, 1914.0], [32.9, 1915.0], [33.0, 1915.0], [33.1, 1916.0], [33.2, 1917.0], [33.3, 1920.0], [33.4, 1921.0], [33.5, 1922.0], [33.6, 1923.0], [33.7, 1924.0], [33.8, 1927.0], [33.9, 1927.0], [34.0, 1929.0], [34.1, 1930.0], [34.2, 1932.0], [34.3, 1932.0], [34.4, 1933.0], [34.5, 1937.0], [34.6, 1937.0], [34.7, 1938.0], [34.8, 1940.0], [34.9, 1944.0], [35.0, 1946.0], [35.1, 1948.0], [35.2, 1950.0], [35.3, 1951.0], [35.4, 1955.0], [35.5, 1956.0], [35.6, 1959.0], [35.7, 1960.0], [35.8, 1962.0], [35.9, 1962.0], [36.0, 1964.0], [36.1, 1965.0], [36.2, 1968.0], [36.3, 1971.0], [36.4, 1973.0], [36.5, 1973.0], [36.6, 1978.0], [36.7, 1980.0], [36.8, 1981.0], [36.9, 1982.0], [37.0, 1985.0], [37.1, 1986.0], [37.2, 1987.0], [37.3, 1990.0], [37.4, 1992.0], [37.5, 1994.0], [37.6, 1994.0], [37.7, 1995.0], [37.8, 1996.0], [37.9, 1997.0], [38.0, 1998.0], [38.1, 1998.0], [38.2, 2002.0], [38.3, 2003.0], [38.4, 2005.0], [38.5, 2006.0], [38.6, 2007.0], [38.7, 2008.0], [38.8, 2009.0], [38.9, 2010.0], [39.0, 2012.0], [39.1, 2014.0], [39.2, 2015.0], [39.3, 2019.0], [39.4, 2020.0], [39.5, 2021.0], [39.6, 2022.0], [39.7, 2026.0], [39.8, 2027.0], [39.9, 2029.0], [40.0, 2029.0], [40.1, 2034.0], [40.2, 2035.0], [40.3, 2036.0], [40.4, 2037.0], [40.5, 2038.0], [40.6, 2039.0], [40.7, 2040.0], [40.8, 2040.0], [40.9, 2044.0], [41.0, 2045.0], [41.1, 2046.0], [41.2, 2047.0], [41.3, 2048.0], [41.4, 2048.0], [41.5, 2049.0], [41.6, 2049.0], [41.7, 2050.0], [41.8, 2050.0], [41.9, 2052.0], [42.0, 2053.0], [42.1, 2054.0], [42.2, 2056.0], [42.3, 2061.0], [42.4, 2061.0], [42.5, 2062.0], [42.6, 2063.0], [42.7, 2065.0], [42.8, 2066.0], [42.9, 2068.0], [43.0, 2070.0], [43.1, 2070.0], [43.2, 2071.0], [43.3, 2072.0], [43.4, 2073.0], [43.5, 2076.0], [43.6, 2076.0], [43.7, 2078.0], [43.8, 2080.0], [43.9, 2081.0], [44.0, 2083.0], [44.1, 2083.0], [44.2, 2088.0], [44.3, 2091.0], [44.4, 2092.0], [44.5, 2093.0], [44.6, 2099.0], [44.7, 2100.0], [44.8, 2100.0], [44.9, 2101.0], [45.0, 2101.0], [45.1, 2103.0], [45.2, 2104.0], [45.3, 2106.0], [45.4, 2107.0], [45.5, 2107.0], [45.6, 2107.0], [45.7, 2111.0], [45.8, 2112.0], [45.9, 2115.0], [46.0, 2116.0], [46.1, 2117.0], [46.2, 2119.0], [46.3, 2121.0], [46.4, 2125.0], [46.5, 2125.0], [46.6, 2126.0], [46.7, 2127.0], [46.8, 2130.0], [46.9, 2133.0], [47.0, 2136.0], [47.1, 2137.0], [47.2, 2139.0], [47.3, 2140.0], [47.4, 2140.0], [47.5, 2142.0], [47.6, 2144.0], [47.7, 2144.0], [47.8, 2145.0], [47.9, 2146.0], [48.0, 2146.0], [48.1, 2147.0], [48.2, 2148.0], [48.3, 2149.0], [48.4, 2149.0], [48.5, 2149.0], [48.6, 2151.0], [48.7, 2152.0], [48.8, 2155.0], [48.9, 2155.0], [49.0, 2157.0], [49.1, 2160.0], [49.2, 2161.0], [49.3, 2164.0], [49.4, 2165.0], [49.5, 2166.0], [49.6, 2167.0], [49.7, 2167.0], [49.8, 2170.0], [49.9, 2174.0], [50.0, 2175.0], [50.1, 2176.0], [50.2, 2181.0], [50.3, 2183.0], [50.4, 2183.0], [50.5, 2185.0], [50.6, 2186.0], [50.7, 2187.0], [50.8, 2188.0], [50.9, 2190.0], [51.0, 2191.0], [51.1, 2192.0], [51.2, 2192.0], [51.3, 2194.0], [51.4, 2195.0], [51.5, 2199.0], [51.6, 2200.0], [51.7, 2201.0], [51.8, 2204.0], [51.9, 2204.0], [52.0, 2206.0], [52.1, 2208.0], [52.2, 2209.0], [52.3, 2209.0], [52.4, 2214.0], [52.5, 2215.0], [52.6, 2217.0], [52.7, 2218.0], [52.8, 2219.0], [52.9, 2220.0], [53.0, 2221.0], [53.1, 2224.0], [53.2, 2227.0], [53.3, 2229.0], [53.4, 2231.0], [53.5, 2232.0], [53.6, 2233.0], [53.7, 2234.0], [53.8, 2235.0], [53.9, 2236.0], [54.0, 2238.0], [54.1, 2239.0], [54.2, 2240.0], [54.3, 2243.0], [54.4, 2244.0], [54.5, 2245.0], [54.6, 2248.0], [54.7, 2249.0], [54.8, 2251.0], [54.9, 2252.0], [55.0, 2253.0], [55.1, 2254.0], [55.2, 2254.0], [55.3, 2255.0], [55.4, 2256.0], [55.5, 2257.0], [55.6, 2259.0], [55.7, 2260.0], [55.8, 2262.0], [55.9, 2262.0], [56.0, 2262.0], [56.1, 2264.0], [56.2, 2265.0], [56.3, 2267.0], [56.4, 2269.0], [56.5, 2272.0], [56.6, 2273.0], [56.7, 2275.0], [56.8, 2277.0], [56.9, 2278.0], [57.0, 2279.0], [57.1, 2280.0], [57.2, 2281.0], [57.3, 2284.0], [57.4, 2284.0], [57.5, 2285.0], [57.6, 2286.0], [57.7, 2287.0], [57.8, 2288.0], [57.9, 2293.0], [58.0, 2294.0], [58.1, 2296.0], [58.2, 2297.0], [58.3, 2298.0], [58.4, 2299.0], [58.5, 2301.0], [58.6, 2304.0], [58.7, 2305.0], [58.8, 2308.0], [58.9, 2310.0], [59.0, 2310.0], [59.1, 2311.0], [59.2, 2312.0], [59.3, 2316.0], [59.4, 2317.0], [59.5, 2319.0], [59.6, 2320.0], [59.7, 2322.0], [59.8, 2323.0], [59.9, 2324.0], [60.0, 2325.0], [60.1, 2326.0], [60.2, 2328.0], [60.3, 2328.0], [60.4, 2329.0], [60.5, 2333.0], [60.6, 2334.0], [60.7, 2335.0], [60.8, 2337.0], [60.9, 2338.0], [61.0, 2340.0], [61.1, 2341.0], [61.2, 2342.0], [61.3, 2342.0], [61.4, 2343.0], [61.5, 2343.0], [61.6, 2343.0], [61.7, 2345.0], [61.8, 2346.0], [61.9, 2347.0], [62.0, 2348.0], [62.1, 2351.0], [62.2, 2351.0], [62.3, 2353.0], [62.4, 2356.0], [62.5, 2356.0], [62.6, 2356.0], [62.7, 2358.0], [62.8, 2359.0], [62.9, 2359.0], [63.0, 2361.0], [63.1, 2362.0], [63.2, 2363.0], [63.3, 2364.0], [63.4, 2365.0], [63.5, 2366.0], [63.6, 2369.0], [63.7, 2373.0], [63.8, 2374.0], [63.9, 2375.0], [64.0, 2376.0], [64.1, 2379.0], [64.2, 2380.0], [64.3, 2381.0], [64.4, 2383.0], [64.5, 2384.0], [64.6, 2385.0], [64.7, 2386.0], [64.8, 2386.0], [64.9, 2387.0], [65.0, 2389.0], [65.1, 2395.0], [65.2, 2395.0], [65.3, 2397.0], [65.4, 2398.0], [65.5, 2399.0], [65.6, 2399.0], [65.7, 2400.0], [65.8, 2401.0], [65.9, 2402.0], [66.0, 2407.0], [66.1, 2408.0], [66.2, 2411.0], [66.3, 2414.0], [66.4, 2416.0], [66.5, 2416.0], [66.6, 2418.0], [66.7, 2419.0], [66.8, 2421.0], [66.9, 2426.0], [67.0, 2430.0], [67.1, 2431.0], [67.2, 2431.0], [67.3, 2432.0], [67.4, 2434.0], [67.5, 2435.0], [67.6, 2437.0], [67.7, 2438.0], [67.8, 2440.0], [67.9, 2442.0], [68.0, 2444.0], [68.1, 2447.0], [68.2, 2450.0], [68.3, 2451.0], [68.4, 2454.0], [68.5, 2456.0], [68.6, 2459.0], [68.7, 2460.0], [68.8, 2461.0], [68.9, 2463.0], [69.0, 2464.0], [69.1, 2467.0], [69.2, 2467.0], [69.3, 2468.0], [69.4, 2469.0], [69.5, 2471.0], [69.6, 2471.0], [69.7, 2473.0], [69.8, 2474.0], [69.9, 2474.0], [70.0, 2477.0], [70.1, 2478.0], [70.2, 2478.0], [70.3, 2479.0], [70.4, 2479.0], [70.5, 2480.0], [70.6, 2484.0], [70.7, 2484.0], [70.8, 2485.0], [70.9, 2487.0], [71.0, 2490.0], [71.1, 2491.0], [71.2, 2495.0], [71.3, 2497.0], [71.4, 2498.0], [71.5, 2501.0], [71.6, 2502.0], [71.7, 2503.0], [71.8, 2503.0], [71.9, 2504.0], [72.0, 2504.0], [72.1, 2505.0], [72.2, 2505.0], [72.3, 2508.0], [72.4, 2508.0], [72.5, 2511.0], [72.6, 2515.0], [72.7, 2516.0], [72.8, 2516.0], [72.9, 2519.0], [73.0, 2522.0], [73.1, 2525.0], [73.2, 2527.0], [73.3, 2528.0], [73.4, 2529.0], [73.5, 2531.0], [73.6, 2532.0], [73.7, 2532.0], [73.8, 2535.0], [73.9, 2536.0], [74.0, 2538.0], [74.1, 2540.0], [74.2, 2542.0], [74.3, 2544.0], [74.4, 2544.0], [74.5, 2545.0], [74.6, 2546.0], [74.7, 2550.0], [74.8, 2551.0], [74.9, 2553.0], [75.0, 2555.0], [75.1, 2557.0], [75.2, 2557.0], [75.3, 2558.0], [75.4, 2561.0], [75.5, 2562.0], [75.6, 2564.0], [75.7, 2566.0], [75.8, 2569.0], [75.9, 2574.0], [76.0, 2576.0], [76.1, 2576.0], [76.2, 2579.0], [76.3, 2580.0], [76.4, 2581.0], [76.5, 2587.0], [76.6, 2589.0], [76.7, 2590.0], [76.8, 2591.0], [76.9, 2594.0], [77.0, 2600.0], [77.1, 2601.0], [77.2, 2602.0], [77.3, 2603.0], [77.4, 2604.0], [77.5, 2604.0], [77.6, 2604.0], [77.7, 2605.0], [77.8, 2605.0], [77.9, 2606.0], [78.0, 2607.0], [78.1, 2611.0], [78.2, 2616.0], [78.3, 2617.0], [78.4, 2622.0], [78.5, 2623.0], [78.6, 2625.0], [78.7, 2627.0], [78.8, 2628.0], [78.9, 2629.0], [79.0, 2631.0], [79.1, 2633.0], [79.2, 2641.0], [79.3, 2642.0], [79.4, 2643.0], [79.5, 2645.0], [79.6, 2647.0], [79.7, 2647.0], [79.8, 2650.0], [79.9, 2653.0], [80.0, 2656.0], [80.1, 2657.0], [80.2, 2661.0], [80.3, 2662.0], [80.4, 2666.0], [80.5, 2668.0], [80.6, 2669.0], [80.7, 2671.0], [80.8, 2672.0], [80.9, 2673.0], [81.0, 2675.0], [81.1, 2677.0], [81.2, 2678.0], [81.3, 2680.0], [81.4, 2680.0], [81.5, 2684.0], [81.6, 2684.0], [81.7, 2686.0], [81.8, 2687.0], [81.9, 2688.0], [82.0, 2691.0], [82.1, 2692.0], [82.2, 2693.0], [82.3, 2694.0], [82.4, 2695.0], [82.5, 2695.0], [82.6, 2698.0], [82.7, 2700.0], [82.8, 2702.0], [82.9, 2706.0], [83.0, 2709.0], [83.1, 2713.0], [83.2, 2714.0], [83.3, 2715.0], [83.4, 2716.0], [83.5, 2730.0], [83.6, 2736.0], [83.7, 2740.0], [83.8, 2741.0], [83.9, 2744.0], [84.0, 2747.0], [84.1, 2747.0], [84.2, 2748.0], [84.3, 2751.0], [84.4, 2752.0], [84.5, 2758.0], [84.6, 2760.0], [84.7, 2762.0], [84.8, 2764.0], [84.9, 2765.0], [85.0, 2771.0], [85.1, 2773.0], [85.2, 2778.0], [85.3, 2780.0], [85.4, 2783.0], [85.5, 2788.0], [85.6, 2792.0], [85.7, 2794.0], [85.8, 2798.0], [85.9, 2800.0], [86.0, 2805.0], [86.1, 2806.0], [86.2, 2812.0], [86.3, 2814.0], [86.4, 2819.0], [86.5, 2820.0], [86.6, 2824.0], [86.7, 2830.0], [86.8, 2833.0], [86.9, 2837.0], [87.0, 2843.0], [87.1, 2844.0], [87.2, 2847.0], [87.3, 2848.0], [87.4, 2850.0], [87.5, 2857.0], [87.6, 2861.0], [87.7, 2863.0], [87.8, 2873.0], [87.9, 2875.0], [88.0, 2877.0], [88.1, 2878.0], [88.2, 2882.0], [88.3, 2886.0], [88.4, 2889.0], [88.5, 2889.0], [88.6, 2898.0], [88.7, 2901.0], [88.8, 2901.0], [88.9, 2901.0], [89.0, 2903.0], [89.1, 2907.0], [89.2, 2911.0], [89.3, 2914.0], [89.4, 2919.0], [89.5, 2924.0], [89.6, 2926.0], [89.7, 2926.0], [89.8, 2930.0], [89.9, 2934.0], [90.0, 2942.0], [90.1, 2945.0], [90.2, 2948.0], [90.3, 2951.0], [90.4, 2954.0], [90.5, 2955.0], [90.6, 2962.0], [90.7, 2965.0], [90.8, 2965.0], [90.9, 2968.0], [91.0, 2972.0], [91.1, 2974.0], [91.2, 2976.0], [91.3, 2976.0], [91.4, 2981.0], [91.5, 2984.0], [91.6, 2988.0], [91.7, 2995.0], [91.8, 2997.0], [91.9, 2999.0], [92.0, 3005.0], [92.1, 3005.0], [92.2, 3013.0], [92.3, 3018.0], [92.4, 3019.0], [92.5, 3023.0], [92.6, 3029.0], [92.7, 3037.0], [92.8, 3039.0], [92.9, 3043.0], [93.0, 3049.0], [93.1, 3050.0], [93.2, 3053.0], [93.3, 3055.0], [93.4, 3057.0], [93.5, 3058.0], [93.6, 3062.0], [93.7, 3069.0], [93.8, 3073.0], [93.9, 3074.0], [94.0, 3077.0], [94.1, 3093.0], [94.2, 3098.0], [94.3, 3102.0], [94.4, 3104.0], [94.5, 3108.0], [94.6, 3113.0], [94.7, 3117.0], [94.8, 3135.0], [94.9, 3155.0], [95.0, 3159.0], [95.1, 3160.0], [95.2, 3165.0], [95.3, 3171.0], [95.4, 3172.0], [95.5, 3174.0], [95.6, 3176.0], [95.7, 3184.0], [95.8, 3191.0], [95.9, 3202.0], [96.0, 3211.0], [96.1, 3211.0], [96.2, 3218.0], [96.3, 3220.0], [96.4, 3223.0], [96.5, 3225.0], [96.6, 3228.0], [96.7, 3236.0], [96.8, 3246.0], [96.9, 3246.0], [97.0, 3263.0], [97.1, 3275.0], [97.2, 3282.0], [97.3, 3288.0], [97.4, 3291.0], [97.5, 3293.0], [97.6, 3304.0], [97.7, 3305.0], [97.8, 3308.0], [97.9, 3331.0], [98.0, 3340.0], [98.1, 3366.0], [98.2, 3385.0], [98.3, 3422.0], [98.4, 3444.0], [98.5, 3460.0], [98.6, 3462.0], [98.7, 3486.0], [98.8, 3525.0], [98.9, 3578.0], [99.0, 3598.0], [99.1, 3617.0], [99.2, 3662.0], [99.3, 3675.0], [99.4, 3700.0], [99.5, 3766.0], [99.6, 3890.0], [99.7, 4001.0], [99.8, 4038.0], [99.9, 4105.0]], "isOverall": false, "label": "Get PROB list", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 136.0, "series": [{"data": [[0.0, 47.0], [600.0, 117.0], [700.0, 106.0], [200.0, 62.0], [800.0, 107.0], [900.0, 80.0], [1000.0, 43.0], [1100.0, 18.0], [300.0, 54.0], [1200.0, 12.0], [1300.0, 3.0], [1400.0, 1.0], [100.0, 34.0], [400.0, 83.0], [500.0, 118.0]], "isOverall": false, "label": "Post PROB UNREMOVE", "isController": false}, {"data": [[0.0, 23.0], [100.0, 9.0], [32900.0, 6.0], [33300.0, 7.0], [34100.0, 9.0], [33700.0, 4.0], [34500.0, 3.0], [34900.0, 3.0], [35300.0, 4.0], [35700.0, 4.0], [36500.0, 7.0], [36100.0, 3.0], [37700.0, 1.0], [36900.0, 1.0], [200.0, 9.0], [300.0, 7.0], [400.0, 9.0], [500.0, 7.0], [600.0, 2.0], [700.0, 8.0], [800.0, 11.0], [900.0, 8.0], [1000.0, 8.0], [1100.0, 5.0], [1200.0, 11.0], [1300.0, 7.0], [1400.0, 6.0], [1500.0, 5.0], [1600.0, 1.0], [1700.0, 9.0], [1800.0, 5.0], [1900.0, 5.0], [2000.0, 4.0], [2100.0, 3.0], [2200.0, 4.0], [2300.0, 2.0], [2400.0, 4.0], [2500.0, 1.0], [2600.0, 5.0], [2700.0, 2.0], [3000.0, 1.0], [3200.0, 1.0], [3500.0, 3.0], [3700.0, 2.0], [3600.0, 2.0], [4000.0, 1.0], [4300.0, 2.0], [4600.0, 3.0], [4500.0, 3.0], [4900.0, 1.0], [5000.0, 2.0], [5200.0, 1.0], [5300.0, 1.0], [5400.0, 1.0], [5700.0, 2.0], [5800.0, 1.0], [6000.0, 4.0], [6100.0, 3.0], [6300.0, 3.0], [6200.0, 1.0], [6600.0, 10.0], [6500.0, 7.0], [6400.0, 1.0], [6800.0, 3.0], [6700.0, 5.0], [6900.0, 7.0], [7100.0, 15.0], [7000.0, 13.0], [7300.0, 9.0], [7200.0, 6.0], [7400.0, 7.0], [7500.0, 4.0], [7600.0, 6.0], [7700.0, 6.0], [7800.0, 6.0], [7900.0, 5.0], [8000.0, 3.0], [8100.0, 1.0], [8500.0, 1.0], [8200.0, 3.0], [8400.0, 2.0], [8600.0, 1.0], [8300.0, 1.0], [8700.0, 1.0], [8800.0, 1.0], [9100.0, 2.0], [9200.0, 2.0], [9000.0, 1.0], [9300.0, 1.0], [9700.0, 1.0], [9500.0, 1.0], [9600.0, 1.0], [10000.0, 2.0], [9800.0, 2.0], [9900.0, 1.0], [10100.0, 1.0], [10300.0, 3.0], [10400.0, 1.0], [10500.0, 2.0], [11200.0, 1.0], [11300.0, 2.0], [12100.0, 2.0], [11800.0, 2.0], [12000.0, 1.0], [12600.0, 3.0], [12700.0, 1.0], [12400.0, 3.0], [13000.0, 1.0], [13100.0, 2.0], [13300.0, 3.0], [13200.0, 2.0], [12800.0, 1.0], [13500.0, 2.0], [13700.0, 3.0], [13400.0, 2.0], [13600.0, 3.0], [13800.0, 1.0], [14200.0, 1.0], [14100.0, 1.0], [14800.0, 2.0], [14400.0, 3.0], [14500.0, 1.0], [14600.0, 2.0], [14700.0, 1.0], [14900.0, 2.0], [15200.0, 1.0], [15300.0, 5.0], [15000.0, 2.0], [15100.0, 5.0], [15400.0, 5.0], [15600.0, 10.0], [15700.0, 3.0], [15800.0, 6.0], [15500.0, 5.0], [16100.0, 7.0], [16200.0, 6.0], [15900.0, 8.0], [16300.0, 3.0], [16000.0, 5.0], [16400.0, 2.0], [16600.0, 3.0], [17400.0, 2.0], [17000.0, 2.0], [18200.0, 2.0], [18000.0, 1.0], [18400.0, 2.0], [18600.0, 1.0], [19200.0, 3.0], [19400.0, 2.0], [20000.0, 2.0], [20400.0, 5.0], [19800.0, 1.0], [19600.0, 1.0], [20800.0, 3.0], [20600.0, 2.0], [21400.0, 1.0], [21000.0, 1.0], [21200.0, 1.0], [22200.0, 1.0], [21800.0, 2.0], [22400.0, 1.0], [23400.0, 2.0], [23000.0, 1.0], [22800.0, 3.0], [23600.0, 2.0], [24200.0, 2.0], [24400.0, 2.0], [24000.0, 1.0], [25400.0, 1.0], [25000.0, 2.0], [25200.0, 3.0], [26400.0, 5.0], [25600.0, 4.0], [25800.0, 5.0], [26000.0, 4.0], [26200.0, 2.0], [26600.0, 1.0], [26800.0, 3.0], [27000.0, 1.0], [27200.0, 2.0], [27400.0, 2.0], [27600.0, 3.0], [28000.0, 2.0], [27800.0, 4.0], [28200.0, 3.0], [28600.0, 2.0], [28800.0, 4.0], [29000.0, 4.0], [29600.0, 2.0], [29200.0, 2.0], [29800.0, 6.0], [30600.0, 2.0], [30400.0, 2.0], [30200.0, 1.0], [30800.0, 2.0], [31000.0, 2.0], [31400.0, 2.0], [31600.0, 1.0], [31800.0, 1.0], [32400.0, 6.0], [32200.0, 4.0], [32600.0, 2.0], [32000.0, 1.0], [32800.0, 5.0], [33200.0, 6.0], [33600.0, 5.0], [34000.0, 6.0], [34800.0, 4.0], [34400.0, 3.0], [35200.0, 3.0], [35600.0, 5.0], [36000.0, 8.0], [36400.0, 4.0], [36800.0, 3.0], [37200.0, 3.0], [33100.0, 7.0], [33900.0, 9.0], [33500.0, 7.0], [34700.0, 2.0], [34300.0, 2.0], [35500.0, 4.0], [36700.0, 2.0], [35900.0, 14.0], [36300.0, 1.0], [35100.0, 1.0], [37100.0, 2.0], [16500.0, 1.0], [16900.0, 2.0], [17100.0, 2.0], [17500.0, 1.0], [17700.0, 1.0], [19300.0, 2.0], [19100.0, 1.0], [19700.0, 1.0], [19500.0, 1.0], [19900.0, 1.0], [20100.0, 1.0], [20300.0, 1.0], [20500.0, 3.0], [21300.0, 2.0], [20900.0, 2.0], [21500.0, 2.0], [22500.0, 3.0], [21700.0, 2.0], [23100.0, 2.0], [22700.0, 1.0], [22900.0, 2.0], [23500.0, 1.0], [23700.0, 3.0], [24100.0, 1.0], [24300.0, 2.0], [25500.0, 1.0], [24700.0, 1.0], [25700.0, 2.0], [26100.0, 2.0], [25900.0, 5.0], [26300.0, 4.0], [26500.0, 4.0], [26700.0, 4.0], [26900.0, 6.0], [27100.0, 2.0], [27700.0, 2.0], [28300.0, 2.0], [27900.0, 1.0], [28500.0, 2.0], [28100.0, 1.0], [28700.0, 6.0], [28900.0, 5.0], [29500.0, 4.0], [29300.0, 4.0], [29100.0, 4.0], [29700.0, 5.0], [29900.0, 3.0], [30100.0, 5.0], [30700.0, 2.0], [30500.0, 1.0], [30900.0, 3.0], [31100.0, 2.0], [31700.0, 1.0], [31500.0, 1.0], [32300.0, 1.0], [32700.0, 8.0], [32500.0, 5.0], [31900.0, 1.0], [33400.0, 5.0], [33000.0, 6.0], [33800.0, 4.0], [34600.0, 6.0], [34200.0, 1.0], [35000.0, 3.0], [35800.0, 6.0], [36200.0, 5.0], [35400.0, 3.0], [36600.0, 4.0], [37000.0, 1.0]], "isOverall": false, "label": "Post PROB", "isController": false}, {"data": [[0.0, 26.0], [600.0, 13.0], [700.0, 24.0], [800.0, 33.0], [900.0, 36.0], [1000.0, 61.0], [1100.0, 67.0], [1200.0, 73.0], [1300.0, 86.0], [1400.0, 79.0], [1500.0, 75.0], [100.0, 12.0], [1600.0, 56.0], [1700.0, 66.0], [1800.0, 34.0], [1900.0, 25.0], [2000.0, 25.0], [2100.0, 15.0], [2200.0, 6.0], [2300.0, 5.0], [2400.0, 4.0], [2500.0, 3.0], [2600.0, 2.0], [2900.0, 1.0], [200.0, 17.0], [300.0, 16.0], [400.0, 9.0], [500.0, 20.0]], "isOverall": false, "label": "Delete PROB", "isController": false}, {"data": [[0.0, 18.0], [600.0, 16.0], [700.0, 30.0], [800.0, 52.0], [900.0, 72.0], [1000.0, 81.0], [1100.0, 86.0], [1200.0, 94.0], [1300.0, 81.0], [1400.0, 70.0], [1500.0, 57.0], [100.0, 9.0], [1600.0, 50.0], [1700.0, 41.0], [1800.0, 22.0], [1900.0, 13.0], [2000.0, 10.0], [2100.0, 6.0], [2200.0, 5.0], [2300.0, 4.0], [2400.0, 4.0], [2600.0, 1.0], [200.0, 7.0], [300.0, 16.0], [400.0, 24.0], [500.0, 24.0]], "isOverall": false, "label": "Get PROB ID", "isController": false}, {"data": [[0.0, 21.0], [600.0, 16.0], [700.0, 25.0], [800.0, 21.0], [900.0, 18.0], [1000.0, 15.0], [1100.0, 23.0], [1200.0, 26.0], [1300.0, 30.0], [1400.0, 42.0], [1500.0, 45.0], [100.0, 4.0], [1600.0, 62.0], [1700.0, 98.0], [1800.0, 104.0], [1900.0, 119.0], [2000.0, 122.0], [2100.0, 128.0], [2300.0, 136.0], [2200.0, 129.0], [2400.0, 108.0], [2500.0, 104.0], [2600.0, 107.0], [2700.0, 60.0], [2800.0, 52.0], [2900.0, 62.0], [3000.0, 43.0], [3100.0, 31.0], [200.0, 10.0], [3200.0, 32.0], [3300.0, 12.0], [3400.0, 10.0], [3500.0, 5.0], [3600.0, 6.0], [3700.0, 3.0], [3800.0, 2.0], [3900.0, 1.0], [4000.0, 4.0], [4200.0, 1.0], [4100.0, 1.0], [300.0, 16.0], [400.0, 12.0], [500.0, 9.0]], "isOverall": false, "label": "Get PROB list", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 37700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 90.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2954.0, "series": [{"data": [[1.0, 1993.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 90.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 477.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 2954.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 16.91182364729458, "minX": 1.52712468E12, "maxY": 95.0, "series": [{"data": [[1.52712492E12, 86.01666666666665], [1.5271251E12, 73.87401574803148], [1.52712504E12, 95.0], [1.52712474E12, 28.15243243243243], [1.52712468E12, 16.91182364729458], [1.52712486E12, 67.77466504263096], [1.5271248E12, 48.00470035252638], [1.52712498E12, 95.0]], "isOverall": false, "label": "jp@gc Ultima Thread - Patient Problem", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5271251E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.5, "minX": 1.0, "maxY": 34976.333333333336, "series": [{"data": [[4.0, 4.0], [5.0, 22.0], [7.0, 10.0], [8.0, 142.5], [9.0, 91.33333333333333], [11.0, 265.0], [12.0, 96.0], [13.0, 145.5], [14.0, 88.0], [15.0, 277.5], [16.0, 307.0], [17.0, 8.2], [18.0, 0.6], [19.0, 97.2], [20.0, 306.49565217391313], [21.0, 120.33333333333334], [22.0, 180.77777777777777], [23.0, 602.0], [28.0, 147.25], [29.0, 256.5], [30.0, 685.0], [32.0, 989.0], [33.0, 540.0], [34.0, 346.0], [35.0, 408.0], [36.0, 424.0], [37.0, 696.0], [38.0, 521.5], [39.0, 580.0], [40.0, 531.1196581196582], [43.0, 1007.75], [44.0, 858.0], [45.0, 1057.0], [46.0, 859.0], [47.0, 727.0], [48.0, 700.0], [49.0, 790.0], [50.0, 898.5], [51.0, 862.0], [52.0, 968.5], [53.0, 1130.5], [55.0, 748.0], [57.0, 850.0], [58.0, 758.75], [59.0, 650.0], [60.0, 629.8558558558558], [61.0, 493.5], [62.0, 867.0], [64.0, 502.0], [65.0, 703.0], [66.0, 687.0], [68.0, 975.5], [69.0, 822.3333333333334], [70.0, 826.0], [71.0, 744.0], [73.0, 904.5], [75.0, 1241.0], [76.0, 841.0], [78.0, 801.0], [79.0, 942.0], [80.0, 640.5436893203885], [81.0, 830.0], [82.0, 631.6666666666666], [83.0, 573.0], [85.0, 1348.6666666666667], [86.0, 1010.0], [88.0, 964.8], [89.0, 837.5], [90.0, 1080.0], [92.0, 987.0], [94.0, 884.0], [95.0, 802.1254237288134]], "isOverall": false, "label": "Post PROB UNREMOVE", "isController": false}, {"data": [[64.12994350282493, 623.8531073446326]], "isOverall": false, "label": "Post PROB UNREMOVE-Aggregated", "isController": false}, {"data": [[2.0, 37.0], [4.0, 25.0], [5.0, 17.0], [6.0, 159.33333333333334], [7.0, 48.0], [8.0, 110.0], [9.0, 403.0], [10.0, 714.3333333333334], [11.0, 202.66666666666666], [12.0, 660.0], [13.0, 374.6666666666667], [14.0, 87.5], [16.0, 1719.0], [17.0, 347.5], [18.0, 0.6250000000000001], [20.0, 1233.126050420168], [21.0, 793.4], [22.0, 217.0], [24.0, 2138.0], [26.0, 3010.0], [27.0, 3153.0], [28.0, 1699.0], [29.0, 2043.5], [30.0, 2665.0], [31.0, 3292.0], [32.0, 3676.5], [33.0, 4517.5], [34.0, 4633.0], [35.0, 5338.0], [36.0, 4540.0], [37.0, 4184.5], [38.0, 4587.0], [39.0, 4968.0], [40.0, 7088.245762711864], [41.0, 7869.0], [42.0, 7611.0], [43.0, 7883.0], [44.0, 7194.0], [45.0, 7866.0], [46.0, 8497.0], [47.0, 8796.0], [48.0, 8650.0], [49.0, 4233.0], [50.0, 5692.5], [51.0, 5215.6], [52.0, 7082.4], [53.0, 8928.75], [54.0, 9502.25], [55.0, 9603.0], [56.0, 11343.75], [57.0, 13142.75], [58.0, 13184.2], [59.0, 14876.0], [60.0, 14775.283185840706], [61.0, 17947.0], [62.0, 19101.666666666668], [63.0, 20329.333333333332], [64.0, 21678.0], [65.0, 22807.75], [66.0, 24833.2], [67.0, 26197.25], [68.0, 25439.4], [69.0, 24510.75], [70.0, 26671.8], [71.0, 28426.0], [73.0, 18139.5], [74.0, 18295.0], [75.0, 18661.0], [72.0, 34976.333333333336], [76.0, 19254.0], [77.0, 19331.0], [78.0, 19353.0], [79.0, 19749.0], [80.0, 24071.2380952381], [81.0, 26428.0], [82.0, 26054.0], [83.0, 26330.5], [85.0, 27390.0], [86.0, 27097.333333333332], [87.0, 26976.0], [88.0, 30700.0], [89.0, 27633.0], [90.0, 27662.0], [91.0, 28392.0], [92.0, 28381.0], [93.0, 28888.0], [94.0, 29290.5], [95.0, 33277.97972972974]], "isOverall": false, "label": "Post PROB", "isController": false}, {"data": [[63.16769547325099, 18327.698559670764]], "isOverall": false, "label": "Post PROB-Aggregated", "isController": false}, {"data": [[4.0, 19.0], [6.0, 184.0], [7.0, 37.0], [8.0, 161.5], [10.0, 291.0], [11.0, 469.0], [12.0, 694.0], [13.0, 413.66666666666663], [14.0, 134.0], [15.0, 957.0], [17.0, 345.2], [18.0, 0.5], [19.0, 78.0], [20.0, 706.2413793103447], [21.0, 317.5], [27.0, 1073.0], [28.0, 685.0], [29.0, 746.0], [30.0, 984.0], [32.0, 1625.0], [33.0, 1493.3333333333333], [34.0, 1039.0], [35.0, 1145.5], [36.0, 1335.5], [37.0, 1392.0], [38.0, 1288.0], [39.0, 974.0], [40.0, 1220.9561403508774], [41.0, 1393.0], [42.0, 1744.0], [43.0, 1862.0], [44.0, 2133.0], [46.0, 1846.0], [47.0, 2156.0], [48.0, 1931.0], [49.0, 2042.5], [50.0, 2046.0], [51.0, 1863.5], [53.0, 1947.0], [56.0, 2400.0], [57.0, 1887.0], [58.0, 2109.0], [59.0, 1813.0], [60.0, 1298.4464285714282], [61.0, 1384.5], [62.0, 1369.0], [63.0, 1649.0], [64.0, 1579.5], [65.0, 1772.0], [66.0, 1729.0], [67.0, 1440.5], [68.0, 1598.0], [69.0, 1687.5], [70.0, 1484.0], [71.0, 1614.0], [73.0, 1905.5], [75.0, 2028.0], [76.0, 2296.0], [77.0, 2104.0], [79.0, 1889.3333333333333], [80.0, 1346.0865384615386], [81.0, 1623.0], [82.0, 1489.0], [83.0, 1222.0], [84.0, 1488.0], [85.0, 2195.0], [86.0, 2070.0], [87.0, 1733.5], [88.0, 1795.0], [89.0, 1987.0], [90.0, 1851.0], [91.0, 1883.0], [92.0, 1879.0], [93.0, 2156.3333333333335], [94.0, 1850.6666666666667], [95.0, 1562.4421768707493]], "isOverall": false, "label": "Delete PROB", "isController": false}, {"data": [[64.07086614173231, 1293.141732283463]], "isOverall": false, "label": "Delete PROB-Aggregated", "isController": false}, {"data": [[4.0, 20.5], [6.0, 169.5], [7.0, 13.0], [8.0, 200.0], [10.0, 408.0], [11.0, 56.0], [12.0, 427.0], [13.0, 416.0], [14.0, 121.0], [15.0, 647.0], [16.0, 924.0], [17.0, 362.33333333333337], [18.0, 0.6], [19.0, 248.33333333333331], [20.0, 778.1260504201681], [21.0, 542.2], [25.0, 1701.0], [26.0, 1832.0], [27.0, 1091.0], [28.0, 297.5], [29.0, 754.0], [30.0, 1018.0], [31.0, 1131.5], [32.0, 919.0], [33.0, 1022.5], [34.0, 1051.0], [35.0, 949.0], [36.0, 1006.5], [37.0, 1001.3333333333334], [38.0, 786.0], [39.0, 866.5], [40.0, 1060.3999999999999], [41.0, 1151.0], [43.0, 1832.0], [44.0, 1616.0], [45.0, 1455.0], [46.0, 1752.0], [47.0, 1827.5], [48.0, 1660.5], [50.0, 1536.0], [52.0, 1535.0], [53.0, 2227.0], [54.0, 1780.5], [55.0, 2467.0], [56.0, 1650.0], [57.0, 2160.0], [58.0, 1524.0], [60.0, 1132.2702702702702], [62.0, 1385.3333333333333], [63.0, 1347.0], [64.0, 1425.0], [65.0, 1369.3333333333333], [66.0, 1498.5], [68.0, 1431.0], [69.0, 1373.0], [70.0, 1442.0], [71.0, 1302.0], [72.0, 1527.0], [73.0, 1862.0], [75.0, 2028.0], [76.0, 1240.0], [77.0, 1623.6666666666667], [78.0, 1768.0], [80.0, 1227.730769230769], [81.0, 1437.0], [82.0, 1440.0], [83.0, 1154.0], [84.0, 1692.0], [85.0, 2119.0], [86.0, 2093.3333333333335], [87.0, 1543.0], [88.0, 1948.0], [89.0, 1938.0], [90.0, 1847.3333333333333], [91.0, 1624.0], [92.0, 1960.6666666666667], [93.0, 1842.0], [95.0, 1443.4848484848487]], "isOverall": false, "label": "Get PROB ID", "isController": false}, {"data": [[63.8835386338186, 1193.5039193728994]], "isOverall": false, "label": "Get PROB ID-Aggregated", "isController": false}, {"data": [[2.0, 261.0], [3.0, 372.0], [4.0, 499.33333333333337], [5.0, 323.3333333333333], [6.0, 355.3333333333333], [7.0, 232.33333333333334], [8.0, 424.0], [9.0, 314.3333333333333], [10.0, 704.8333333333334], [11.0, 332.5], [12.0, 702.2], [13.0, 557.4], [14.0, 383.5], [15.0, 891.6666666666666], [16.0, 1227.0], [17.0, 355.6363636363637], [18.0, 0.6875], [20.0, 1438.817073170732], [21.0, 966.25], [22.0, 326.5], [23.0, 1115.5], [24.0, 1888.0], [25.0, 2415.1428571428573], [26.0, 2814.4285714285716], [27.0, 2075.166666666667], [28.0, 936.0], [29.0, 922.5], [30.0, 1231.0], [31.0, 1970.4], [32.0, 2337.142857142857], [33.0, 2205.25], [34.0, 2012.3333333333333], [35.0, 1909.0], [36.0, 1767.3333333333333], [37.0, 1865.5], [38.0, 1786.2], [39.0, 1785.6666666666667], [40.0, 1921.9194915254243], [41.0, 1937.3333333333333], [42.0, 2342.0], [43.0, 2442.0], [44.0, 2502.0], [45.0, 2815.0], [46.0, 2491.5], [47.0, 2804.2], [48.0, 3087.3333333333335], [49.0, 3187.6666666666665], [50.0, 3043.75], [51.0, 3335.3333333333335], [52.0, 2960.5], [53.0, 3402.25], [54.0, 3209.75], [55.0, 3203.75], [56.0, 3196.0], [57.0, 3241.25], [58.0, 2929.4], [59.0, 2825.0], [60.0, 2112.318584070796], [61.0, 1944.3333333333333], [62.0, 2326.5], [63.0, 2249.1428571428573], [64.0, 2601.0], [65.0, 2568.0], [66.0, 2607.833333333333], [67.0, 2976.5], [68.0, 2747.25], [69.0, 2597.0], [70.0, 2292.75], [71.0, 2361.5], [72.0, 2332.8], [73.0, 2353.0], [74.0, 3361.25], [75.0, 3119.0], [76.0, 2681.5], [77.0, 3041.6666666666665], [78.0, 2493.0], [79.0, 2546.5], [80.0, 2112.1121951219516], [81.0, 2589.5], [82.0, 2282.1666666666665], [83.0, 2519.8], [84.0, 2484.3333333333335], [85.0, 2742.6666666666665], [86.0, 3292.625], [87.0, 3369.6666666666665], [88.0, 2944.8571428571427], [89.0, 2833.25], [90.0, 3202.3333333333335], [91.0, 2990.3333333333335], [92.0, 2886.5], [93.0, 2918.5], [94.0, 2894.0], [95.0, 2485.2495784148405], [1.0, 390.0]], "isOverall": false, "label": "Get PROB list", "isController": false}, {"data": [[63.37813333333336, 2114.513599999998]], "isOverall": false, "label": "Get PROB list-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 95.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1379.45, "minX": 1.52712468E12, "maxY": 1.1668671666666666E7, "series": [{"data": [[1.52712492E12, 1.1308950616666667E7], [1.5271251E12, 997747.45], [1.52712504E12, 1.11163951E7], [1.52712474E12, 1.12700607E7], [1.52712468E12, 4952515.7], [1.52712486E12, 1.1477399866666667E7], [1.5271248E12, 1.1194762466666667E7], [1.52712498E12, 1.1668671666666666E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.52712492E12, 4093.383333333333], [1.5271251E12, 1379.45], [1.52712504E12, 3811.05], [1.52712474E12, 4875.85], [1.52712468E12, 2218.5], [1.52712486E12, 4245.35], [1.5271248E12, 4441.3], [1.52712498E12, 4167.366666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5271251E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 222.6578947368421, "minX": 1.52712468E12, "maxY": 35518.85950413225, "series": [{"data": [[1.52712492E12, 738.7596899224811], [1.5271251E12, 826.5], [1.52712504E12, 834.1260504201682], [1.52712474E12, 353.44370860927154], [1.52712468E12, 222.6578947368421], [1.52712486E12, 676.3283582089553], [1.5271248E12, 642.2262773722633], [1.52712498E12, 778.8702290076341]], "isOverall": false, "label": "Post PROB UNREMOVE", "isController": false}, {"data": [[1.52712492E12, 26950.07751937984], [1.5271251E12, 20466.858974358976], [1.52712504E12, 35518.85950413225], [1.52712474E12, 3212.335483870967], [1.52712468E12, 902.5977011494253], [1.52712486E12, 17628.625954198476], [1.5271248E12, 9304.316546762591], [1.52712498E12, 32308.166666666664]], "isOverall": false, "label": "Post PROB", "isController": false}, {"data": [[1.52712492E12, 1507.1250000000005], [1.5271251E12, 1578.9], [1.52712504E12, 1638.0833333333328], [1.52712474E12, 843.2027027027026], [1.52712468E12, 539.0625000000001], [1.52712486E12, 1381.2105263157903], [1.5271248E12, 1426.9712230215825], [1.52712498E12, 1483.6870229007636]], "isOverall": false, "label": "Delete PROB", "isController": false}, {"data": [[1.52712492E12, 1396.792], [1.5271251E12, 1478.8999999999996], [1.52712504E12, 1518.8347107438024], [1.52712474E12, 878.5733333333334], [1.52712468E12, 511.76829268292676], [1.52712486E12, 1254.4444444444446], [1.5271248E12, 1233.1739130434785], [1.52712498E12, 1358.7348484848478]], "isOverall": false, "label": "Get PROB ID", "isController": false}, {"data": [[1.52712492E12, 2399.066914498141], [1.5271251E12, 2521.0476190476193], [1.52712504E12, 2637.658333333332], [1.52712474E12, 1662.8535825545168], [1.52712468E12, 926.0919540229884], [1.52712486E12, 2246.979166666665], [1.5271248E12, 2283.963087248321], [1.52712498E12, 2313.3219696969677]], "isOverall": false, "label": "Get PROB list", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5271251E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 222.06578947368428, "minX": 1.52712468E12, "maxY": 35518.85950413225, "series": [{"data": [[1.52712492E12, 738.7364341085269], [1.5271251E12, 826.5], [1.52712504E12, 834.1260504201682], [1.52712474E12, 353.44370860927154], [1.52712468E12, 222.06578947368428], [1.52712486E12, 676.3283582089553], [1.5271248E12, 642.2189781021904], [1.52712498E12, 778.8625954198478]], "isOverall": false, "label": "Post PROB UNREMOVE", "isController": false}, {"data": [[1.52712492E12, 26950.062015503874], [1.5271251E12, 20466.84615384616], [1.52712504E12, 35518.85950413225], [1.52712474E12, 3212.32258064516], [1.52712468E12, 877.3908045977008], [1.52712486E12, 17628.61832061068], [1.5271248E12, 9304.309352517987], [1.52712498E12, 32308.15909090909]], "isOverall": false, "label": "Post PROB", "isController": false}, {"data": [[1.52712492E12, 1507.1171875], [1.5271251E12, 1578.9], [1.52712504E12, 1638.075], [1.52712474E12, 843.2027027027026], [1.52712468E12, 538.975], [1.52712486E12, 1381.2030075187974], [1.5271248E12, 1426.964028776978], [1.52712498E12, 1483.6717557251907]], "isOverall": false, "label": "Delete PROB", "isController": false}, {"data": [[1.52712492E12, 1396.7839999999999], [1.5271251E12, 1478.7999999999997], [1.52712504E12, 1518.8264462809918], [1.52712474E12, 878.566666666667], [1.52712468E12, 511.67073170731703], [1.52712486E12, 1254.4296296296295], [1.5271248E12, 1233.1086956521742], [1.52712498E12, 1358.7272727272723]], "isOverall": false, "label": "Get PROB ID", "isController": false}, {"data": [[1.52712492E12, 1891.1970260223056], [1.5271251E12, 2012.7619047619048], [1.52712504E12, 1962.954166666667], [1.52712474E12, 1361.1246105919], [1.52712468E12, 754.1379310344827], [1.52712486E12, 1793.8819444444441], [1.5271248E12, 1847.8892617449671], [1.52712498E12, 1751.5681818181806]], "isOverall": false, "label": "Get PROB list", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5271251E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.52712468E12, "maxY": 0.53448275862069, "series": [{"data": [[1.52712492E12, 0.27906976744186046], [1.5271251E12, 0.12500000000000003], [1.52712504E12, 0.2268907563025211], [1.52712474E12, 0.1523178807947019], [1.52712468E12, 0.27631578947368424], [1.52712486E12, 0.23880597014925387], [1.5271248E12, 0.2773722627737227], [1.52712498E12, 0.2595419847328245]], "isOverall": false, "label": "Post PROB UNREMOVE", "isController": false}, {"data": [[1.52712492E12, 0.36434108527131776], [1.5271251E12, 0.35897435897435886], [1.52712504E12, 0.28925619834710753], [1.52712474E12, 0.32258064516129037], [1.52712468E12, 0.3563218390804597], [1.52712486E12, 0.3358778625954197], [1.5271248E12, 0.2661870503597124], [1.52712498E12, 0.2878787878787878]], "isOverall": false, "label": "Post PROB", "isController": false}, {"data": [[1.52712492E12, 0.07031249999999999], [1.5271251E12, 0.0], [1.52712504E12, 0.06666666666666665], [1.52712474E12, 0.12162162162162157], [1.52712468E12, 0.17500000000000002], [1.52712486E12, 0.052631578947368425], [1.5271248E12, 0.03597122302158274], [1.52712498E12, 0.03816793893129771]], "isOverall": false, "label": "Delete PROB", "isController": false}, {"data": [[1.52712492E12, 0.27200000000000013], [1.5271251E12, 0.3], [1.52712504E12, 0.3636363636363637], [1.52712474E12, 0.19999999999999998], [1.52712468E12, 0.32926829268292673], [1.52712486E12, 0.30370370370370375], [1.5271248E12, 0.2608695652173914], [1.52712498E12, 0.32575757575757586]], "isOverall": false, "label": "Get PROB ID", "isController": false}, {"data": [[1.52712492E12, 0.15241635687732344], [1.5271251E12, 0.09523809523809525], [1.52712504E12, 0.2166666666666666], [1.52712474E12, 0.1557632398753894], [1.52712468E12, 0.53448275862069], [1.52712486E12, 0.2013888888888888], [1.5271248E12, 0.1979865771812082], [1.52712498E12, 0.1628787878787879]], "isOverall": false, "label": "Get PROB list", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5271251E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 4.0, "minX": 1.52712468E12, "maxY": 37737.0, "series": [{"data": [[1.52712492E12, 30139.0], [1.5271251E12, 36693.0], [1.52712504E12, 37737.0], [1.52712474E12, 7846.0], [1.52712468E12, 3093.0], [1.52712486E12, 23496.0], [1.5271248E12, 14991.0], [1.52712498E12, 34909.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.52712492E12, 221.0], [1.5271251E12, 436.0], [1.52712504E12, 151.0], [1.52712474E12, 6.0], [1.52712468E12, 4.0], [1.52712486E12, 188.0], [1.5271248E12, 143.0], [1.52712498E12, 388.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.52712492E12, 7172.500000000001], [1.5271251E12, 15519.0], [1.52712504E12, 13487.999999999998], [1.52712474E12, 2272.0], [1.52712468E12, 1626.0], [1.52712486E12, 6524.3], [1.5271248E12, 3297.800000000001], [1.52712498E12, 8054.600000000011]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.52712492E12, 28262.150000000005], [1.5271251E12, 35925.5], [1.52712504E12, 35915.04], [1.52712474E12, 7166.450000000001], [1.52712468E12, 2865.4999999999977], [1.52712486E12, 20401.739999999998], [1.5271248E12, 13209.159999999994], [1.52712498E12, 33206.84]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.52712492E12, 16413.449999999997], [1.5271251E12, 29736.5], [1.52712504E12, 29130.699999999975], [1.52712474E12, 3046.5], [1.52712468E12, 2116.0], [1.52712486E12, 13342.600000000006], [1.5271248E12, 7292.799999999999], [1.52712498E12, 25884.6]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5271251E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1.0, "minX": 2.0, "maxY": 9033.0, "series": [{"data": [[8.0, 660.0], [2.0, 9033.0], [12.0, 2028.0], [13.0, 1822.0], [14.0, 1756.0], [15.0, 1094.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 1.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 15.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 2.0, "maxY": 9033.0, "series": [{"data": [[8.0, 627.0], [2.0, 9033.0], [12.0, 1767.0], [13.0, 1588.0], [14.0, 1509.0], [15.0, 1023.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 15.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.5833333333333334, "minX": 1.52712468E12, "maxY": 15.883333333333333, "series": [{"data": [[1.52712492E12, 13.216666666666667], [1.5271251E12, 0.5833333333333334], [1.52712504E12, 12.066666666666666], [1.52712474E12, 15.883333333333333], [1.52712468E12, 8.5], [1.52712486E12, 14.066666666666666], [1.5271248E12, 14.466666666666667], [1.52712498E12, 13.116666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5271251E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.08333333333333333, "minX": 1.52712468E12, "maxY": 15.416666666666666, "series": [{"data": [[1.52712492E12, 13.0], [1.5271251E12, 2.1166666666666667], [1.52712504E12, 12.016666666666667], [1.52712474E12, 15.416666666666666], [1.52712468E12, 6.816666666666666], [1.52712486E12, 13.683333333333334], [1.5271248E12, 14.183333333333334], [1.52712498E12, 13.166666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.52712468E12, 0.95]], "isOverall": false, "label": "Non HTTP response code: java.net.ConnectException", "isController": false}, {"data": [[1.52712468E12, 0.2833333333333333]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.52712468E12, 0.18333333333333332]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.52712468E12, 0.08333333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5271251E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.52712468E12, "maxY": 5.35, "series": [{"data": [[1.52712492E12, 2.1333333333333333], [1.5271251E12, 0.16666666666666666], [1.52712504E12, 2.0], [1.52712474E12, 2.466666666666667], [1.52712468E12, 1.05], [1.52712486E12, 2.216666666666667], [1.5271248E12, 2.316666666666667], [1.52712498E12, 2.183333333333333]], "isOverall": false, "label": "Delete PROB-success", "isController": false}, {"data": [[1.52712468E12, 0.3333333333333333]], "isOverall": false, "label": "Post PROB UNREMOVE-failure", "isController": false}, {"data": [[1.52712492E12, 2.15], [1.5271251E12, 0.13333333333333333], [1.52712504E12, 1.9833333333333334], [1.52712474E12, 2.5166666666666666], [1.52712468E12, 0.9333333333333333], [1.52712486E12, 2.2333333333333334], [1.5271248E12, 2.283333333333333], [1.52712498E12, 2.183333333333333]], "isOverall": false, "label": "Post PROB UNREMOVE-success", "isController": false}, {"data": [[1.52712468E12, 0.4166666666666667]], "isOverall": false, "label": "Get PROB list-failure", "isController": false}, {"data": [[1.52712492E12, 4.483333333333333], [1.5271251E12, 0.35], [1.52712504E12, 4.0], [1.52712474E12, 5.35], [1.52712468E12, 2.4833333333333334], [1.52712486E12, 4.8], [1.5271248E12, 4.966666666666667], [1.52712498E12, 4.4]], "isOverall": false, "label": "Get PROB list-success", "isController": false}, {"data": [[1.52712492E12, 2.15], [1.5271251E12, 1.3], [1.52712504E12, 2.0166666666666666], [1.52712474E12, 2.5833333333333335], [1.52712468E12, 1.1666666666666667], [1.52712486E12, 2.183333333333333], [1.5271248E12, 2.316666666666667], [1.52712498E12, 2.2]], "isOverall": false, "label": "Post PROB-success", "isController": false}, {"data": [[1.52712492E12, 2.0833333333333335], [1.5271251E12, 0.16666666666666666], [1.52712504E12, 2.0166666666666666], [1.52712474E12, 2.5], [1.52712468E12, 1.1833333333333333], [1.52712486E12, 2.25], [1.5271248E12, 2.3], [1.52712498E12, 2.2]], "isOverall": false, "label": "Get PROB ID-success", "isController": false}, {"data": [[1.52712468E12, 0.2833333333333333]], "isOverall": false, "label": "Post PROB-failure", "isController": false}, {"data": [[1.52712468E12, 0.18333333333333332]], "isOverall": false, "label": "Get PROB ID-failure", "isController": false}, {"data": [[1.52712468E12, 0.2833333333333333]], "isOverall": false, "label": "Delete PROB-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5271251E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
