/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -36000000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -36000000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 21139.0, "series": [{"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 3.0], [5.8, 3.0], [5.9, 3.0], [6.0, 3.0], [6.1, 3.0], [6.2, 3.0], [6.3, 3.0], [6.4, 3.0], [6.5, 3.0], [6.6, 3.0], [6.7, 3.0], [6.8, 3.0], [6.9, 3.0], [7.0, 3.0], [7.1, 3.0], [7.2, 3.0], [7.3, 3.0], [7.4, 3.0], [7.5, 3.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 3.0], [8.6, 3.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 4.0], [13.5, 4.0], [13.6, 4.0], [13.7, 4.0], [13.8, 4.0], [13.9, 4.0], [14.0, 4.0], [14.1, 4.0], [14.2, 4.0], [14.3, 4.0], [14.4, 4.0], [14.5, 4.0], [14.6, 4.0], [14.7, 4.0], [14.8, 4.0], [14.9, 4.0], [15.0, 4.0], [15.1, 4.0], [15.2, 4.0], [15.3, 4.0], [15.4, 4.0], [15.5, 4.0], [15.6, 4.0], [15.7, 4.0], [15.8, 4.0], [15.9, 4.0], [16.0, 4.0], [16.1, 4.0], [16.2, 4.0], [16.3, 4.0], [16.4, 4.0], [16.5, 4.0], [16.6, 4.0], [16.7, 4.0], [16.8, 4.0], [16.9, 5.0], [17.0, 5.0], [17.1, 5.0], [17.2, 5.0], [17.3, 5.0], [17.4, 5.0], [17.5, 5.0], [17.6, 5.0], [17.7, 5.0], [17.8, 5.0], [17.9, 5.0], [18.0, 5.0], [18.1, 5.0], [18.2, 5.0], [18.3, 5.0], [18.4, 5.0], [18.5, 5.0], [18.6, 5.0], [18.7, 5.0], [18.8, 6.0], [18.9, 6.0], [19.0, 6.0], [19.1, 6.0], [19.2, 6.0], [19.3, 6.0], [19.4, 6.0], [19.5, 6.0], [19.6, 6.0], [19.7, 6.0], [19.8, 6.0], [19.9, 6.0], [20.0, 6.0], [20.1, 7.0], [20.2, 7.0], [20.3, 7.0], [20.4, 7.0], [20.5, 7.0], [20.6, 7.0], [20.7, 7.0], [20.8, 8.0], [20.9, 8.0], [21.0, 8.0], [21.1, 8.0], [21.2, 8.0], [21.3, 8.0], [21.4, 8.0], [21.5, 8.0], [21.6, 8.0], [21.7, 9.0], [21.8, 9.0], [21.9, 9.0], [22.0, 9.0], [22.1, 9.0], [22.2, 9.0], [22.3, 9.0], [22.4, 10.0], [22.5, 10.0], [22.6, 10.0], [22.7, 10.0], [22.8, 10.0], [22.9, 10.0], [23.0, 10.0], [23.1, 10.0], [23.2, 11.0], [23.3, 11.0], [23.4, 11.0], [23.5, 12.0], [23.6, 12.0], [23.7, 12.0], [23.8, 12.0], [23.9, 12.0], [24.0, 12.0], [24.1, 12.0], [24.2, 12.0], [24.3, 13.0], [24.4, 13.0], [24.5, 13.0], [24.6, 13.0], [24.7, 13.0], [24.8, 13.0], [24.9, 13.0], [25.0, 14.0], [25.1, 14.0], [25.2, 14.0], [25.3, 14.0], [25.4, 14.0], [25.5, 14.0], [25.6, 15.0], [25.7, 15.0], [25.8, 15.0], [25.9, 15.0], [26.0, 16.0], [26.1, 16.0], [26.2, 16.0], [26.3, 16.0], [26.4, 16.0], [26.5, 16.0], [26.6, 16.0], [26.7, 16.0], [26.8, 17.0], [26.9, 17.0], [27.0, 17.0], [27.1, 17.0], [27.2, 18.0], [27.3, 18.0], [27.4, 18.0], [27.5, 19.0], [27.6, 19.0], [27.7, 19.0], [27.8, 19.0], [27.9, 19.0], [28.0, 20.0], [28.1, 20.0], [28.2, 21.0], [28.3, 21.0], [28.4, 21.0], [28.5, 21.0], [28.6, 21.0], [28.7, 22.0], [28.8, 22.0], [28.9, 22.0], [29.0, 22.0], [29.1, 22.0], [29.2, 22.0], [29.3, 22.0], [29.4, 22.0], [29.5, 23.0], [29.6, 23.0], [29.7, 23.0], [29.8, 23.0], [29.9, 23.0], [30.0, 24.0], [30.1, 24.0], [30.2, 24.0], [30.3, 25.0], [30.4, 25.0], [30.5, 25.0], [30.6, 25.0], [30.7, 25.0], [30.8, 26.0], [30.9, 26.0], [31.0, 26.0], [31.1, 26.0], [31.2, 27.0], [31.3, 27.0], [31.4, 27.0], [31.5, 27.0], [31.6, 27.0], [31.7, 28.0], [31.8, 28.0], [31.9, 28.0], [32.0, 28.0], [32.1, 28.0], [32.2, 29.0], [32.3, 29.0], [32.4, 29.0], [32.5, 30.0], [32.6, 30.0], [32.7, 30.0], [32.8, 30.0], [32.9, 30.0], [33.0, 30.0], [33.1, 31.0], [33.2, 31.0], [33.3, 31.0], [33.4, 31.0], [33.5, 31.0], [33.6, 32.0], [33.7, 32.0], [33.8, 32.0], [33.9, 32.0], [34.0, 33.0], [34.1, 33.0], [34.2, 33.0], [34.3, 34.0], [34.4, 34.0], [34.5, 34.0], [34.6, 34.0], [34.7, 35.0], [34.8, 35.0], [34.9, 35.0], [35.0, 35.0], [35.1, 35.0], [35.2, 35.0], [35.3, 36.0], [35.4, 37.0], [35.5, 37.0], [35.6, 37.0], [35.7, 38.0], [35.8, 38.0], [35.9, 38.0], [36.0, 38.0], [36.1, 39.0], [36.2, 39.0], [36.3, 40.0], [36.4, 40.0], [36.5, 40.0], [36.6, 41.0], [36.7, 41.0], [36.8, 42.0], [36.9, 42.0], [37.0, 42.0], [37.1, 42.0], [37.2, 42.0], [37.3, 42.0], [37.4, 43.0], [37.5, 44.0], [37.6, 44.0], [37.7, 44.0], [37.8, 45.0], [37.9, 45.0], [38.0, 45.0], [38.1, 45.0], [38.2, 45.0], [38.3, 46.0], [38.4, 46.0], [38.5, 47.0], [38.6, 47.0], [38.7, 47.0], [38.8, 47.0], [38.9, 47.0], [39.0, 48.0], [39.1, 49.0], [39.2, 49.0], [39.3, 50.0], [39.4, 50.0], [39.5, 51.0], [39.6, 51.0], [39.7, 51.0], [39.8, 52.0], [39.9, 52.0], [40.0, 53.0], [40.1, 54.0], [40.2, 54.0], [40.3, 55.0], [40.4, 55.0], [40.5, 56.0], [40.6, 56.0], [40.7, 56.0], [40.8, 57.0], [40.9, 57.0], [41.0, 57.0], [41.1, 58.0], [41.2, 58.0], [41.3, 58.0], [41.4, 58.0], [41.5, 59.0], [41.6, 60.0], [41.7, 60.0], [41.8, 61.0], [41.9, 62.0], [42.0, 63.0], [42.1, 64.0], [42.2, 65.0], [42.3, 66.0], [42.4, 66.0], [42.5, 66.0], [42.6, 67.0], [42.7, 67.0], [42.8, 67.0], [42.9, 67.0], [43.0, 68.0], [43.1, 68.0], [43.2, 69.0], [43.3, 69.0], [43.4, 70.0], [43.5, 71.0], [43.6, 71.0], [43.7, 71.0], [43.8, 72.0], [43.9, 72.0], [44.0, 72.0], [44.1, 73.0], [44.2, 74.0], [44.3, 74.0], [44.4, 77.0], [44.5, 77.0], [44.6, 78.0], [44.7, 79.0], [44.8, 79.0], [44.9, 79.0], [45.0, 80.0], [45.1, 80.0], [45.2, 80.0], [45.3, 81.0], [45.4, 81.0], [45.5, 82.0], [45.6, 82.0], [45.7, 83.0], [45.8, 83.0], [45.9, 83.0], [46.0, 84.0], [46.1, 84.0], [46.2, 85.0], [46.3, 85.0], [46.4, 85.0], [46.5, 86.0], [46.6, 86.0], [46.7, 88.0], [46.8, 89.0], [46.9, 90.0], [47.0, 90.0], [47.1, 91.0], [47.2, 91.0], [47.3, 92.0], [47.4, 92.0], [47.5, 93.0], [47.6, 93.0], [47.7, 93.0], [47.8, 95.0], [47.9, 95.0], [48.0, 95.0], [48.1, 98.0], [48.2, 98.0], [48.3, 99.0], [48.4, 100.0], [48.5, 100.0], [48.6, 102.0], [48.7, 102.0], [48.8, 103.0], [48.9, 104.0], [49.0, 104.0], [49.1, 106.0], [49.2, 106.0], [49.3, 106.0], [49.4, 106.0], [49.5, 106.0], [49.6, 106.0], [49.7, 107.0], [49.8, 107.0], [49.9, 108.0], [50.0, 109.0], [50.1, 109.0], [50.2, 109.0], [50.3, 110.0], [50.4, 111.0], [50.5, 111.0], [50.6, 111.0], [50.7, 111.0], [50.8, 112.0], [50.9, 112.0], [51.0, 113.0], [51.1, 113.0], [51.2, 114.0], [51.3, 114.0], [51.4, 115.0], [51.5, 115.0], [51.6, 116.0], [51.7, 117.0], [51.8, 119.0], [51.9, 119.0], [52.0, 119.0], [52.1, 120.0], [52.2, 121.0], [52.3, 122.0], [52.4, 122.0], [52.5, 122.0], [52.6, 123.0], [52.7, 124.0], [52.8, 124.0], [52.9, 126.0], [53.0, 128.0], [53.1, 129.0], [53.2, 129.0], [53.3, 129.0], [53.4, 130.0], [53.5, 130.0], [53.6, 131.0], [53.7, 132.0], [53.8, 133.0], [53.9, 134.0], [54.0, 134.0], [54.1, 135.0], [54.2, 136.0], [54.3, 136.0], [54.4, 137.0], [54.5, 138.0], [54.6, 139.0], [54.7, 140.0], [54.8, 140.0], [54.9, 141.0], [55.0, 144.0], [55.1, 146.0], [55.2, 147.0], [55.3, 147.0], [55.4, 148.0], [55.5, 149.0], [55.6, 149.0], [55.7, 151.0], [55.8, 151.0], [55.9, 153.0], [56.0, 153.0], [56.1, 154.0], [56.2, 155.0], [56.3, 156.0], [56.4, 156.0], [56.5, 157.0], [56.6, 157.0], [56.7, 158.0], [56.8, 159.0], [56.9, 159.0], [57.0, 159.0], [57.1, 160.0], [57.2, 164.0], [57.3, 166.0], [57.4, 167.0], [57.5, 167.0], [57.6, 168.0], [57.7, 168.0], [57.8, 170.0], [57.9, 171.0], [58.0, 172.0], [58.1, 172.0], [58.2, 174.0], [58.3, 174.0], [58.4, 175.0], [58.5, 175.0], [58.6, 176.0], [58.7, 177.0], [58.8, 178.0], [58.9, 179.0], [59.0, 180.0], [59.1, 181.0], [59.2, 181.0], [59.3, 181.0], [59.4, 182.0], [59.5, 183.0], [59.6, 183.0], [59.7, 184.0], [59.8, 184.0], [59.9, 185.0], [60.0, 186.0], [60.1, 186.0], [60.2, 187.0], [60.3, 187.0], [60.4, 188.0], [60.5, 188.0], [60.6, 189.0], [60.7, 190.0], [60.8, 190.0], [60.9, 192.0], [61.0, 193.0], [61.1, 194.0], [61.2, 194.0], [61.3, 194.0], [61.4, 195.0], [61.5, 195.0], [61.6, 196.0], [61.7, 197.0], [61.8, 197.0], [61.9, 197.0], [62.0, 199.0], [62.1, 201.0], [62.2, 201.0], [62.3, 202.0], [62.4, 202.0], [62.5, 202.0], [62.6, 203.0], [62.7, 203.0], [62.8, 205.0], [62.9, 206.0], [63.0, 208.0], [63.1, 209.0], [63.2, 210.0], [63.3, 210.0], [63.4, 211.0], [63.5, 211.0], [63.6, 212.0], [63.7, 214.0], [63.8, 215.0], [63.9, 215.0], [64.0, 216.0], [64.1, 216.0], [64.2, 216.0], [64.3, 217.0], [64.4, 217.0], [64.5, 217.0], [64.6, 218.0], [64.7, 218.0], [64.8, 219.0], [64.9, 220.0], [65.0, 220.0], [65.1, 221.0], [65.2, 222.0], [65.3, 222.0], [65.4, 224.0], [65.5, 224.0], [65.6, 227.0], [65.7, 227.0], [65.8, 229.0], [65.9, 230.0], [66.0, 231.0], [66.1, 232.0], [66.2, 233.0], [66.3, 234.0], [66.4, 234.0], [66.5, 235.0], [66.6, 236.0], [66.7, 237.0], [66.8, 237.0], [66.9, 237.0], [67.0, 238.0], [67.1, 239.0], [67.2, 240.0], [67.3, 242.0], [67.4, 243.0], [67.5, 243.0], [67.6, 245.0], [67.7, 245.0], [67.8, 245.0], [67.9, 246.0], [68.0, 247.0], [68.1, 249.0], [68.2, 250.0], [68.3, 250.0], [68.4, 250.0], [68.5, 251.0], [68.6, 252.0], [68.7, 252.0], [68.8, 252.0], [68.9, 253.0], [69.0, 254.0], [69.1, 256.0], [69.2, 257.0], [69.3, 257.0], [69.4, 258.0], [69.5, 259.0], [69.6, 260.0], [69.7, 260.0], [69.8, 261.0], [69.9, 261.0], [70.0, 262.0], [70.1, 262.0], [70.2, 262.0], [70.3, 263.0], [70.4, 263.0], [70.5, 264.0], [70.6, 265.0], [70.7, 265.0], [70.8, 266.0], [70.9, 266.0], [71.0, 268.0], [71.1, 269.0], [71.2, 269.0], [71.3, 270.0], [71.4, 270.0], [71.5, 271.0], [71.6, 272.0], [71.7, 272.0], [71.8, 273.0], [71.9, 273.0], [72.0, 276.0], [72.1, 276.0], [72.2, 277.0], [72.3, 277.0], [72.4, 277.0], [72.5, 278.0], [72.6, 279.0], [72.7, 279.0], [72.8, 280.0], [72.9, 281.0], [73.0, 281.0], [73.1, 282.0], [73.2, 282.0], [73.3, 283.0], [73.4, 284.0], [73.5, 284.0], [73.6, 285.0], [73.7, 286.0], [73.8, 287.0], [73.9, 290.0], [74.0, 292.0], [74.1, 293.0], [74.2, 293.0], [74.3, 294.0], [74.4, 294.0], [74.5, 295.0], [74.6, 297.0], [74.7, 297.0], [74.8, 298.0], [74.9, 299.0], [75.0, 301.0], [75.1, 302.0], [75.2, 302.0], [75.3, 303.0], [75.4, 303.0], [75.5, 304.0], [75.6, 304.0], [75.7, 305.0], [75.8, 307.0], [75.9, 308.0], [76.0, 308.0], [76.1, 308.0], [76.2, 308.0], [76.3, 309.0], [76.4, 309.0], [76.5, 310.0], [76.6, 310.0], [76.7, 311.0], [76.8, 312.0], [76.9, 312.0], [77.0, 312.0], [77.1, 313.0], [77.2, 314.0], [77.3, 315.0], [77.4, 315.0], [77.5, 316.0], [77.6, 317.0], [77.7, 318.0], [77.8, 318.0], [77.9, 319.0], [78.0, 319.0], [78.1, 320.0], [78.2, 320.0], [78.3, 321.0], [78.4, 322.0], [78.5, 322.0], [78.6, 322.0], [78.7, 323.0], [78.8, 323.0], [78.9, 324.0], [79.0, 325.0], [79.1, 327.0], [79.2, 327.0], [79.3, 327.0], [79.4, 329.0], [79.5, 330.0], [79.6, 331.0], [79.7, 331.0], [79.8, 331.0], [79.9, 333.0], [80.0, 333.0], [80.1, 333.0], [80.2, 337.0], [80.3, 338.0], [80.4, 340.0], [80.5, 341.0], [80.6, 341.0], [80.7, 342.0], [80.8, 344.0], [80.9, 344.0], [81.0, 345.0], [81.1, 345.0], [81.2, 347.0], [81.3, 347.0], [81.4, 348.0], [81.5, 349.0], [81.6, 349.0], [81.7, 350.0], [81.8, 351.0], [81.9, 352.0], [82.0, 352.0], [82.1, 353.0], [82.2, 354.0], [82.3, 354.0], [82.4, 356.0], [82.5, 357.0], [82.6, 358.0], [82.7, 358.0], [82.8, 358.0], [82.9, 359.0], [83.0, 360.0], [83.1, 362.0], [83.2, 362.0], [83.3, 362.0], [83.4, 363.0], [83.5, 364.0], [83.6, 365.0], [83.7, 366.0], [83.8, 366.0], [83.9, 367.0], [84.0, 369.0], [84.1, 369.0], [84.2, 371.0], [84.3, 371.0], [84.4, 372.0], [84.5, 375.0], [84.6, 375.0], [84.7, 376.0], [84.8, 376.0], [84.9, 377.0], [85.0, 378.0], [85.1, 378.0], [85.2, 379.0], [85.3, 380.0], [85.4, 382.0], [85.5, 383.0], [85.6, 384.0], [85.7, 385.0], [85.8, 385.0], [85.9, 386.0], [86.0, 386.0], [86.1, 388.0], [86.2, 389.0], [86.3, 392.0], [86.4, 392.0], [86.5, 393.0], [86.6, 393.0], [86.7, 394.0], [86.8, 395.0], [86.9, 395.0], [87.0, 396.0], [87.1, 396.0], [87.2, 397.0], [87.3, 398.0], [87.4, 399.0], [87.5, 400.0], [87.6, 400.0], [87.7, 401.0], [87.8, 402.0], [87.9, 405.0], [88.0, 405.0], [88.1, 405.0], [88.2, 406.0], [88.3, 408.0], [88.4, 408.0], [88.5, 411.0], [88.6, 411.0], [88.7, 412.0], [88.8, 413.0], [88.9, 414.0], [89.0, 415.0], [89.1, 417.0], [89.2, 418.0], [89.3, 418.0], [89.4, 419.0], [89.5, 423.0], [89.6, 423.0], [89.7, 424.0], [89.8, 426.0], [89.9, 428.0], [90.0, 428.0], [90.1, 430.0], [90.2, 431.0], [90.3, 432.0], [90.4, 433.0], [90.5, 433.0], [90.6, 435.0], [90.7, 437.0], [90.8, 439.0], [90.9, 441.0], [91.0, 441.0], [91.1, 442.0], [91.2, 442.0], [91.3, 444.0], [91.4, 446.0], [91.5, 447.0], [91.6, 450.0], [91.7, 451.0], [91.8, 452.0], [91.9, 456.0], [92.0, 457.0], [92.1, 461.0], [92.2, 462.0], [92.3, 466.0], [92.4, 467.0], [92.5, 468.0], [92.6, 469.0], [92.7, 470.0], [92.8, 474.0], [92.9, 478.0], [93.0, 480.0], [93.1, 481.0], [93.2, 481.0], [93.3, 483.0], [93.4, 488.0], [93.5, 490.0], [93.6, 491.0], [93.7, 491.0], [93.8, 493.0], [93.9, 495.0], [94.0, 496.0], [94.1, 499.0], [94.2, 501.0], [94.3, 505.0], [94.4, 508.0], [94.5, 508.0], [94.6, 514.0], [94.7, 517.0], [94.8, 519.0], [94.9, 521.0], [95.0, 522.0], [95.1, 532.0], [95.2, 533.0], [95.3, 536.0], [95.4, 536.0], [95.5, 538.0], [95.6, 540.0], [95.7, 544.0], [95.8, 548.0], [95.9, 550.0], [96.0, 553.0], [96.1, 557.0], [96.2, 558.0], [96.3, 563.0], [96.4, 565.0], [96.5, 566.0], [96.6, 567.0], [96.7, 568.0], [96.8, 571.0], [96.9, 572.0], [97.0, 574.0], [97.1, 578.0], [97.2, 583.0], [97.3, 584.0], [97.4, 591.0], [97.5, 594.0], [97.6, 595.0], [97.7, 604.0], [97.8, 607.0], [97.9, 612.0], [98.0, 615.0], [98.1, 622.0], [98.2, 629.0], [98.3, 644.0], [98.4, 653.0], [98.5, 665.0], [98.6, 672.0], [98.7, 674.0], [98.8, 678.0], [98.9, 688.0], [99.0, 701.0], [99.1, 704.0], [99.2, 712.0], [99.3, 734.0], [99.4, 741.0], [99.5, 767.0], [99.6, 793.0], [99.7, 800.0], [99.8, 812.0], [99.9, 835.0]], "isOverall": false, "label": "Post PROB UNREMOVE", "isController": false}, {"data": [[0.0, 8.0], [0.1, 8.0], [0.2, 8.0], [0.3, 9.0], [0.4, 9.0], [0.5, 9.0], [0.6, 9.0], [0.7, 9.0], [0.8, 9.0], [0.9, 9.0], [1.0, 9.0], [1.1, 9.0], [1.2, 9.0], [1.3, 9.0], [1.4, 9.0], [1.5, 9.0], [1.6, 9.0], [1.7, 9.0], [1.8, 9.0], [1.9, 9.0], [2.0, 10.0], [2.1, 10.0], [2.2, 10.0], [2.3, 10.0], [2.4, 10.0], [2.5, 10.0], [2.6, 10.0], [2.7, 10.0], [2.8, 10.0], [2.9, 10.0], [3.0, 10.0], [3.1, 10.0], [3.2, 10.0], [3.3, 10.0], [3.4, 10.0], [3.5, 10.0], [3.6, 10.0], [3.7, 10.0], [3.8, 10.0], [3.9, 10.0], [4.0, 10.0], [4.1, 10.0], [4.2, 10.0], [4.3, 10.0], [4.4, 10.0], [4.5, 10.0], [4.6, 10.0], [4.7, 10.0], [4.8, 11.0], [4.9, 11.0], [5.0, 11.0], [5.1, 11.0], [5.2, 11.0], [5.3, 11.0], [5.4, 11.0], [5.5, 11.0], [5.6, 11.0], [5.7, 11.0], [5.8, 11.0], [5.9, 11.0], [6.0, 11.0], [6.1, 11.0], [6.2, 11.0], [6.3, 11.0], [6.4, 11.0], [6.5, 11.0], [6.6, 11.0], [6.7, 11.0], [6.8, 11.0], [6.9, 11.0], [7.0, 11.0], [7.1, 11.0], [7.2, 11.0], [7.3, 11.0], [7.4, 11.0], [7.5, 11.0], [7.6, 11.0], [7.7, 11.0], [7.8, 12.0], [7.9, 12.0], [8.0, 12.0], [8.1, 12.0], [8.2, 12.0], [8.3, 12.0], [8.4, 12.0], [8.5, 12.0], [8.6, 12.0], [8.7, 12.0], [8.8, 12.0], [8.9, 12.0], [9.0, 12.0], [9.1, 12.0], [9.2, 12.0], [9.3, 12.0], [9.4, 12.0], [9.5, 12.0], [9.6, 12.0], [9.7, 12.0], [9.8, 12.0], [9.9, 12.0], [10.0, 12.0], [10.1, 12.0], [10.2, 12.0], [10.3, 12.0], [10.4, 12.0], [10.5, 12.0], [10.6, 12.0], [10.7, 12.0], [10.8, 13.0], [10.9, 13.0], [11.0, 13.0], [11.1, 13.0], [11.2, 13.0], [11.3, 13.0], [11.4, 13.0], [11.5, 13.0], [11.6, 13.0], [11.7, 13.0], [11.8, 13.0], [11.9, 13.0], [12.0, 13.0], [12.1, 13.0], [12.2, 13.0], [12.3, 13.0], [12.4, 13.0], [12.5, 13.0], [12.6, 13.0], [12.7, 13.0], [12.8, 14.0], [12.9, 14.0], [13.0, 14.0], [13.1, 14.0], [13.2, 14.0], [13.3, 14.0], [13.4, 14.0], [13.5, 14.0], [13.6, 14.0], [13.7, 14.0], [13.8, 14.0], [13.9, 14.0], [14.0, 14.0], [14.1, 15.0], [14.2, 15.0], [14.3, 15.0], [14.4, 15.0], [14.5, 15.0], [14.6, 15.0], [14.7, 15.0], [14.8, 15.0], [14.9, 15.0], [15.0, 15.0], [15.1, 15.0], [15.2, 15.0], [15.3, 15.0], [15.4, 15.0], [15.5, 16.0], [15.6, 16.0], [15.7, 16.0], [15.8, 16.0], [15.9, 16.0], [16.0, 16.0], [16.1, 17.0], [16.2, 17.0], [16.3, 17.0], [16.4, 17.0], [16.5, 17.0], [16.6, 17.0], [16.7, 18.0], [16.8, 18.0], [16.9, 18.0], [17.0, 18.0], [17.1, 19.0], [17.2, 19.0], [17.3, 19.0], [17.4, 19.0], [17.5, 19.0], [17.6, 19.0], [17.7, 20.0], [17.8, 20.0], [17.9, 20.0], [18.0, 21.0], [18.1, 22.0], [18.2, 22.0], [18.3, 22.0], [18.4, 22.0], [18.5, 22.0], [18.6, 22.0], [18.7, 22.0], [18.8, 23.0], [18.9, 23.0], [19.0, 24.0], [19.1, 24.0], [19.2, 24.0], [19.3, 25.0], [19.4, 25.0], [19.5, 25.0], [19.6, 26.0], [19.7, 26.0], [19.8, 26.0], [19.9, 26.0], [20.0, 27.0], [20.1, 27.0], [20.2, 27.0], [20.3, 28.0], [20.4, 29.0], [20.5, 30.0], [20.6, 30.0], [20.7, 30.0], [20.8, 31.0], [20.9, 31.0], [21.0, 31.0], [21.1, 32.0], [21.2, 32.0], [21.3, 33.0], [21.4, 33.0], [21.5, 33.0], [21.6, 34.0], [21.7, 34.0], [21.8, 35.0], [21.9, 35.0], [22.0, 36.0], [22.1, 36.0], [22.2, 37.0], [22.3, 37.0], [22.4, 38.0], [22.5, 38.0], [22.6, 38.0], [22.7, 39.0], [22.8, 40.0], [22.9, 40.0], [23.0, 40.0], [23.1, 41.0], [23.2, 41.0], [23.3, 42.0], [23.4, 42.0], [23.5, 42.0], [23.6, 43.0], [23.7, 43.0], [23.8, 43.0], [23.9, 44.0], [24.0, 44.0], [24.1, 44.0], [24.2, 44.0], [24.3, 45.0], [24.4, 46.0], [24.5, 46.0], [24.6, 46.0], [24.7, 47.0], [24.8, 47.0], [24.9, 48.0], [25.0, 49.0], [25.1, 50.0], [25.2, 50.0], [25.3, 51.0], [25.4, 52.0], [25.5, 53.0], [25.6, 54.0], [25.7, 55.0], [25.8, 56.0], [25.9, 56.0], [26.0, 56.0], [26.1, 57.0], [26.2, 58.0], [26.3, 59.0], [26.4, 59.0], [26.5, 61.0], [26.6, 61.0], [26.7, 61.0], [26.8, 62.0], [26.9, 62.0], [27.0, 62.0], [27.1, 63.0], [27.2, 64.0], [27.3, 64.0], [27.4, 66.0], [27.5, 66.0], [27.6, 67.0], [27.7, 68.0], [27.8, 68.0], [27.9, 70.0], [28.0, 71.0], [28.1, 73.0], [28.2, 74.0], [28.3, 74.0], [28.4, 74.0], [28.5, 75.0], [28.6, 76.0], [28.7, 77.0], [28.8, 78.0], [28.9, 78.0], [29.0, 79.0], [29.1, 79.0], [29.2, 80.0], [29.3, 80.0], [29.4, 81.0], [29.5, 82.0], [29.6, 83.0], [29.7, 83.0], [29.8, 84.0], [29.9, 85.0], [30.0, 86.0], [30.1, 88.0], [30.2, 88.0], [30.3, 89.0], [30.4, 89.0], [30.5, 90.0], [30.6, 91.0], [30.7, 91.0], [30.8, 92.0], [30.9, 92.0], [31.0, 94.0], [31.1, 96.0], [31.2, 97.0], [31.3, 97.0], [31.4, 100.0], [31.5, 104.0], [31.6, 104.0], [31.7, 104.0], [31.8, 105.0], [31.9, 108.0], [32.0, 109.0], [32.1, 110.0], [32.2, 110.0], [32.3, 111.0], [32.4, 114.0], [32.5, 114.0], [32.6, 115.0], [32.7, 118.0], [32.8, 120.0], [32.9, 120.0], [33.0, 121.0], [33.1, 122.0], [33.2, 122.0], [33.3, 123.0], [33.4, 124.0], [33.5, 124.0], [33.6, 124.0], [33.7, 125.0], [33.8, 127.0], [33.9, 128.0], [34.0, 129.0], [34.1, 129.0], [34.2, 131.0], [34.3, 131.0], [34.4, 132.0], [34.5, 132.0], [34.6, 133.0], [34.7, 135.0], [34.8, 136.0], [34.9, 138.0], [35.0, 139.0], [35.1, 143.0], [35.2, 143.0], [35.3, 144.0], [35.4, 146.0], [35.5, 146.0], [35.6, 147.0], [35.7, 149.0], [35.8, 149.0], [35.9, 149.0], [36.0, 150.0], [36.1, 151.0], [36.2, 153.0], [36.3, 154.0], [36.4, 156.0], [36.5, 157.0], [36.6, 159.0], [36.7, 160.0], [36.8, 161.0], [36.9, 162.0], [37.0, 164.0], [37.1, 164.0], [37.2, 164.0], [37.3, 165.0], [37.4, 165.0], [37.5, 167.0], [37.6, 169.0], [37.7, 169.0], [37.8, 172.0], [37.9, 172.0], [38.0, 173.0], [38.1, 175.0], [38.2, 177.0], [38.3, 181.0], [38.4, 182.0], [38.5, 184.0], [38.6, 186.0], [38.7, 187.0], [38.8, 188.0], [38.9, 192.0], [39.0, 192.0], [39.1, 194.0], [39.2, 194.0], [39.3, 195.0], [39.4, 197.0], [39.5, 201.0], [39.6, 202.0], [39.7, 203.0], [39.8, 205.0], [39.9, 211.0], [40.0, 211.0], [40.1, 212.0], [40.2, 215.0], [40.3, 218.0], [40.4, 218.0], [40.5, 222.0], [40.6, 222.0], [40.7, 223.0], [40.8, 225.0], [40.9, 226.0], [41.0, 228.0], [41.1, 230.0], [41.2, 230.0], [41.3, 231.0], [41.4, 232.0], [41.5, 235.0], [41.6, 239.0], [41.7, 239.0], [41.8, 240.0], [41.9, 242.0], [42.0, 243.0], [42.1, 243.0], [42.2, 246.0], [42.3, 247.0], [42.4, 248.0], [42.5, 250.0], [42.6, 253.0], [42.7, 253.0], [42.8, 254.0], [42.9, 256.0], [43.0, 257.0], [43.1, 259.0], [43.2, 263.0], [43.3, 266.0], [43.4, 267.0], [43.5, 268.0], [43.6, 269.0], [43.7, 270.0], [43.8, 272.0], [43.9, 277.0], [44.0, 278.0], [44.1, 279.0], [44.2, 280.0], [44.3, 282.0], [44.4, 287.0], [44.5, 290.0], [44.6, 291.0], [44.7, 293.0], [44.8, 296.0], [44.9, 304.0], [45.0, 305.0], [45.1, 308.0], [45.2, 309.0], [45.3, 312.0], [45.4, 313.0], [45.5, 314.0], [45.6, 319.0], [45.7, 325.0], [45.8, 329.0], [45.9, 331.0], [46.0, 333.0], [46.1, 334.0], [46.2, 337.0], [46.3, 340.0], [46.4, 345.0], [46.5, 347.0], [46.6, 351.0], [46.7, 354.0], [46.8, 354.0], [46.9, 360.0], [47.0, 364.0], [47.1, 365.0], [47.2, 367.0], [47.3, 368.0], [47.4, 369.0], [47.5, 369.0], [47.6, 373.0], [47.7, 373.0], [47.8, 373.0], [47.9, 376.0], [48.0, 377.0], [48.1, 380.0], [48.2, 381.0], [48.3, 383.0], [48.4, 384.0], [48.5, 385.0], [48.6, 388.0], [48.7, 392.0], [48.8, 393.0], [48.9, 393.0], [49.0, 394.0], [49.1, 395.0], [49.2, 397.0], [49.3, 405.0], [49.4, 408.0], [49.5, 414.0], [49.6, 415.0], [49.7, 426.0], [49.8, 430.0], [49.9, 431.0], [50.0, 436.0], [50.1, 436.0], [50.2, 440.0], [50.3, 447.0], [50.4, 450.0], [50.5, 455.0], [50.6, 457.0], [50.7, 458.0], [50.8, 464.0], [50.9, 466.0], [51.0, 468.0], [51.1, 470.0], [51.2, 470.0], [51.3, 478.0], [51.4, 482.0], [51.5, 484.0], [51.6, 485.0], [51.7, 486.0], [51.8, 487.0], [51.9, 489.0], [52.0, 492.0], [52.1, 500.0], [52.2, 503.0], [52.3, 504.0], [52.4, 515.0], [52.5, 520.0], [52.6, 523.0], [52.7, 528.0], [52.8, 533.0], [52.9, 536.0], [53.0, 540.0], [53.1, 546.0], [53.2, 550.0], [53.3, 552.0], [53.4, 556.0], [53.5, 557.0], [53.6, 565.0], [53.7, 569.0], [53.8, 573.0], [53.9, 586.0], [54.0, 588.0], [54.1, 590.0], [54.2, 592.0], [54.3, 596.0], [54.4, 608.0], [54.5, 611.0], [54.6, 615.0], [54.7, 622.0], [54.8, 624.0], [54.9, 627.0], [55.0, 632.0], [55.1, 644.0], [55.2, 647.0], [55.3, 654.0], [55.4, 659.0], [55.5, 661.0], [55.6, 666.0], [55.7, 671.0], [55.8, 675.0], [55.9, 680.0], [56.0, 687.0], [56.1, 694.0], [56.2, 700.0], [56.3, 706.0], [56.4, 711.0], [56.5, 711.0], [56.6, 714.0], [56.7, 725.0], [56.8, 730.0], [56.9, 734.0], [57.0, 739.0], [57.1, 748.0], [57.2, 751.0], [57.3, 752.0], [57.4, 752.0], [57.5, 758.0], [57.6, 770.0], [57.7, 778.0], [57.8, 780.0], [57.9, 794.0], [58.0, 795.0], [58.1, 804.0], [58.2, 814.0], [58.3, 842.0], [58.4, 856.0], [58.5, 858.0], [58.6, 867.0], [58.7, 874.0], [58.8, 883.0], [58.9, 894.0], [59.0, 901.0], [59.1, 940.0], [59.2, 976.0], [59.3, 984.0], [59.4, 996.0], [59.5, 1017.0], [59.6, 1032.0], [59.7, 1089.0], [59.8, 1101.0], [59.9, 1110.0], [60.0, 1228.0], [60.1, 1253.0], [60.2, 1278.0], [60.3, 1288.0], [60.4, 1307.0], [60.5, 1312.0], [60.6, 1327.0], [60.7, 1405.0], [60.8, 1432.0], [60.9, 1521.0], [61.0, 1620.0], [61.1, 1820.0], [61.2, 1914.0], [61.3, 1955.0], [61.4, 1975.0], [61.5, 2125.0], [61.6, 2190.0], [61.7, 2250.0], [61.8, 2382.0], [61.9, 2621.0], [62.0, 2721.0], [62.1, 2796.0], [62.2, 2835.0], [62.3, 3006.0], [62.4, 3172.0], [62.5, 3291.0], [62.6, 3327.0], [62.7, 3446.0], [62.8, 3482.0], [62.9, 3518.0], [63.0, 3525.0], [63.1, 3544.0], [63.2, 3591.0], [63.3, 3608.0], [63.4, 3631.0], [63.5, 3693.0], [63.6, 3702.0], [63.7, 3723.0], [63.8, 3800.0], [63.9, 3803.0], [64.0, 3829.0], [64.1, 3851.0], [64.2, 3866.0], [64.3, 3915.0], [64.4, 3929.0], [64.5, 3945.0], [64.6, 3970.0], [64.7, 3980.0], [64.8, 3992.0], [64.9, 4012.0], [65.0, 4015.0], [65.1, 4030.0], [65.2, 4043.0], [65.3, 4058.0], [65.4, 4062.0], [65.5, 4066.0], [65.6, 4069.0], [65.7, 4073.0], [65.8, 4078.0], [65.9, 4089.0], [66.0, 4094.0], [66.1, 4102.0], [66.2, 4113.0], [66.3, 4116.0], [66.4, 4148.0], [66.5, 4167.0], [66.6, 4194.0], [66.7, 4196.0], [66.8, 4198.0], [66.9, 4203.0], [67.0, 4215.0], [67.1, 4225.0], [67.2, 4235.0], [67.3, 4251.0], [67.4, 4264.0], [67.5, 4275.0], [67.6, 4278.0], [67.7, 4293.0], [67.8, 4301.0], [67.9, 4304.0], [68.0, 4307.0], [68.1, 4315.0], [68.2, 4327.0], [68.3, 4344.0], [68.4, 4353.0], [68.5, 4365.0], [68.6, 4372.0], [68.7, 4381.0], [68.8, 4392.0], [68.9, 4396.0], [69.0, 4404.0], [69.1, 4409.0], [69.2, 4417.0], [69.3, 4438.0], [69.4, 4439.0], [69.5, 4449.0], [69.6, 4451.0], [69.7, 4466.0], [69.8, 4480.0], [69.9, 4495.0], [70.0, 4496.0], [70.1, 4499.0], [70.2, 4500.0], [70.3, 4507.0], [70.4, 4513.0], [70.5, 4526.0], [70.6, 4546.0], [70.7, 4548.0], [70.8, 4553.0], [70.9, 4577.0], [71.0, 4584.0], [71.1, 4592.0], [71.2, 4594.0], [71.3, 4606.0], [71.4, 4616.0], [71.5, 4624.0], [71.6, 4631.0], [71.7, 4656.0], [71.8, 4670.0], [71.9, 4681.0], [72.0, 4683.0], [72.1, 4723.0], [72.2, 4753.0], [72.3, 4765.0], [72.4, 4793.0], [72.5, 4801.0], [72.6, 4814.0], [72.7, 4821.0], [72.8, 4851.0], [72.9, 4926.0], [73.0, 4936.0], [73.1, 4983.0], [73.2, 5035.0], [73.3, 5054.0], [73.4, 5159.0], [73.5, 5275.0], [73.6, 5405.0], [73.7, 5441.0], [73.8, 5533.0], [73.9, 5694.0], [74.0, 5727.0], [74.1, 5782.0], [74.2, 5837.0], [74.3, 6083.0], [74.4, 6146.0], [74.5, 6202.0], [74.6, 6223.0], [74.7, 6466.0], [74.8, 6737.0], [74.9, 6846.0], [75.0, 6998.0], [75.1, 7305.0], [75.2, 7435.0], [75.3, 7519.0], [75.4, 7677.0], [75.5, 7865.0], [75.6, 7977.0], [75.7, 8065.0], [75.8, 8221.0], [75.9, 8385.0], [76.0, 8676.0], [76.1, 8687.0], [76.2, 8704.0], [76.3, 8962.0], [76.4, 8982.0], [76.5, 9040.0], [76.6, 9149.0], [76.7, 9224.0], [76.8, 9249.0], [76.9, 9311.0], [77.0, 9355.0], [77.1, 9445.0], [77.2, 9537.0], [77.3, 9561.0], [77.4, 9593.0], [77.5, 9600.0], [77.6, 9630.0], [77.7, 9713.0], [77.8, 9750.0], [77.9, 9775.0], [78.0, 9835.0], [78.1, 9888.0], [78.2, 9906.0], [78.3, 9966.0], [78.4, 10004.0], [78.5, 10013.0], [78.6, 10053.0], [78.7, 10103.0], [78.8, 10142.0], [78.9, 10160.0], [79.0, 10174.0], [79.1, 10192.0], [79.2, 10202.0], [79.3, 10216.0], [79.4, 10223.0], [79.5, 10256.0], [79.6, 10297.0], [79.7, 10301.0], [79.8, 10318.0], [79.9, 10327.0], [80.0, 10340.0], [80.1, 10372.0], [80.2, 10398.0], [80.3, 10420.0], [80.4, 10443.0], [80.5, 10445.0], [80.6, 10458.0], [80.7, 10460.0], [80.8, 10465.0], [80.9, 10491.0], [81.0, 10519.0], [81.1, 10531.0], [81.2, 10542.0], [81.3, 10578.0], [81.4, 10587.0], [81.5, 10607.0], [81.6, 10623.0], [81.7, 10626.0], [81.8, 10641.0], [81.9, 10677.0], [82.0, 10693.0], [82.1, 10723.0], [82.2, 10759.0], [82.3, 10764.0], [82.4, 10786.0], [82.5, 10795.0], [82.6, 10844.0], [82.7, 10880.0], [82.8, 10894.0], [82.9, 10916.0], [83.0, 10928.0], [83.1, 10971.0], [83.2, 10983.0], [83.3, 11038.0], [83.4, 11081.0], [83.5, 11127.0], [83.6, 11136.0], [83.7, 11152.0], [83.8, 11166.0], [83.9, 11171.0], [84.0, 11198.0], [84.1, 11233.0], [84.2, 11267.0], [84.3, 11301.0], [84.4, 11349.0], [84.5, 11363.0], [84.6, 11368.0], [84.7, 11390.0], [84.8, 11422.0], [84.9, 11487.0], [85.0, 11534.0], [85.1, 11555.0], [85.2, 11590.0], [85.3, 11642.0], [85.4, 11670.0], [85.5, 11672.0], [85.6, 11764.0], [85.7, 11787.0], [85.8, 11879.0], [85.9, 11901.0], [86.0, 12081.0], [86.1, 12253.0], [86.2, 12458.0], [86.3, 12495.0], [86.4, 12620.0], [86.5, 12748.0], [86.6, 12836.0], [86.7, 13041.0], [86.8, 13106.0], [86.9, 13375.0], [87.0, 13728.0], [87.1, 13731.0], [87.2, 13788.0], [87.3, 13905.0], [87.4, 13975.0], [87.5, 13991.0], [87.6, 14038.0], [87.7, 14067.0], [87.8, 14211.0], [87.9, 14373.0], [88.0, 14521.0], [88.1, 14572.0], [88.2, 14671.0], [88.3, 14752.0], [88.4, 14792.0], [88.5, 14900.0], [88.6, 15007.0], [88.7, 15074.0], [88.8, 15092.0], [88.9, 15130.0], [89.0, 15171.0], [89.1, 15221.0], [89.2, 15308.0], [89.3, 15345.0], [89.4, 15391.0], [89.5, 15501.0], [89.6, 15635.0], [89.7, 15670.0], [89.8, 15922.0], [89.9, 16036.0], [90.0, 16143.0], [90.1, 16274.0], [90.2, 16654.0], [90.3, 16670.0], [90.4, 16781.0], [90.5, 16950.0], [90.6, 17005.0], [90.7, 17027.0], [90.8, 17089.0], [90.9, 17210.0], [91.0, 17257.0], [91.1, 17289.0], [91.2, 17335.0], [91.3, 17436.0], [91.4, 17522.0], [91.5, 17532.0], [91.6, 17599.0], [91.7, 17655.0], [91.8, 17681.0], [91.9, 17722.0], [92.0, 17746.0], [92.1, 17797.0], [92.2, 17831.0], [92.3, 17940.0], [92.4, 17957.0], [92.5, 17973.0], [92.6, 17993.0], [92.7, 17995.0], [92.8, 18018.0], [92.9, 18068.0], [93.0, 18069.0], [93.1, 18099.0], [93.2, 18120.0], [93.3, 18121.0], [93.4, 18133.0], [93.5, 18137.0], [93.6, 18150.0], [93.7, 18158.0], [93.8, 18177.0], [93.9, 18193.0], [94.0, 18199.0], [94.1, 18218.0], [94.2, 18231.0], [94.3, 18245.0], [94.4, 18307.0], [94.5, 18327.0], [94.6, 18335.0], [94.7, 18351.0], [94.8, 18368.0], [94.9, 18391.0], [95.0, 18402.0], [95.1, 18423.0], [95.2, 18429.0], [95.3, 18524.0], [95.4, 18541.0], [95.5, 18549.0], [95.6, 18561.0], [95.7, 18593.0], [95.8, 18601.0], [95.9, 18654.0], [96.0, 18669.0], [96.1, 18708.0], [96.2, 18799.0], [96.3, 18818.0], [96.4, 18840.0], [96.5, 18881.0], [96.6, 18982.0], [96.7, 19008.0], [96.8, 19027.0], [96.9, 19071.0], [97.0, 19259.0], [97.1, 19355.0], [97.2, 19524.0], [97.3, 19565.0], [97.4, 19629.0], [97.5, 19688.0], [97.6, 19742.0], [97.7, 20020.0], [97.8, 20035.0], [97.9, 20093.0], [98.0, 20186.0], [98.1, 20220.0], [98.2, 20291.0], [98.3, 20355.0], [98.4, 20360.0], [98.5, 20434.0], [98.6, 20445.0], [98.7, 20463.0], [98.8, 20495.0], [98.9, 20558.0], [99.0, 20594.0], [99.1, 20619.0], [99.2, 20641.0], [99.3, 20693.0], [99.4, 20705.0], [99.5, 20799.0], [99.6, 20807.0], [99.7, 20879.0], [99.8, 20916.0], [99.9, 20975.0]], "isOverall": false, "label": "Post PROB", "isController": false}, {"data": [[0.0, 5.0], [0.1, 5.0], [0.2, 5.0], [0.3, 5.0], [0.4, 5.0], [0.5, 5.0], [0.6, 5.0], [0.7, 5.0], [0.8, 6.0], [0.9, 6.0], [1.0, 6.0], [1.1, 6.0], [1.2, 6.0], [1.3, 6.0], [1.4, 6.0], [1.5, 6.0], [1.6, 6.0], [1.7, 6.0], [1.8, 6.0], [1.9, 6.0], [2.0, 6.0], [2.1, 6.0], [2.2, 6.0], [2.3, 6.0], [2.4, 6.0], [2.5, 6.0], [2.6, 6.0], [2.7, 6.0], [2.8, 6.0], [2.9, 6.0], [3.0, 6.0], [3.1, 6.0], [3.2, 6.0], [3.3, 6.0], [3.4, 6.0], [3.5, 6.0], [3.6, 6.0], [3.7, 7.0], [3.8, 7.0], [3.9, 7.0], [4.0, 7.0], [4.1, 7.0], [4.2, 7.0], [4.3, 7.0], [4.4, 7.0], [4.5, 7.0], [4.6, 7.0], [4.7, 7.0], [4.8, 7.0], [4.9, 7.0], [5.0, 7.0], [5.1, 7.0], [5.2, 7.0], [5.3, 7.0], [5.4, 7.0], [5.5, 7.0], [5.6, 7.0], [5.7, 7.0], [5.8, 7.0], [5.9, 7.0], [6.0, 7.0], [6.1, 7.0], [6.2, 7.0], [6.3, 7.0], [6.4, 7.0], [6.5, 7.0], [6.6, 7.0], [6.7, 7.0], [6.8, 7.0], [6.9, 7.0], [7.0, 7.0], [7.1, 7.0], [7.2, 7.0], [7.3, 7.0], [7.4, 7.0], [7.5, 7.0], [7.6, 7.0], [7.7, 7.0], [7.8, 7.0], [7.9, 7.0], [8.0, 7.0], [8.1, 7.0], [8.2, 7.0], [8.3, 7.0], [8.4, 7.0], [8.5, 8.0], [8.6, 8.0], [8.7, 8.0], [8.8, 8.0], [8.9, 8.0], [9.0, 8.0], [9.1, 8.0], [9.2, 8.0], [9.3, 8.0], [9.4, 8.0], [9.5, 8.0], [9.6, 8.0], [9.7, 8.0], [9.8, 8.0], [9.9, 8.0], [10.0, 8.0], [10.1, 8.0], [10.2, 8.0], [10.3, 8.0], [10.4, 8.0], [10.5, 8.0], [10.6, 8.0], [10.7, 8.0], [10.8, 8.0], [10.9, 8.0], [11.0, 8.0], [11.1, 8.0], [11.2, 8.0], [11.3, 8.0], [11.4, 8.0], [11.5, 8.0], [11.6, 8.0], [11.7, 8.0], [11.8, 8.0], [11.9, 9.0], [12.0, 9.0], [12.1, 9.0], [12.2, 9.0], [12.3, 9.0], [12.4, 9.0], [12.5, 9.0], [12.6, 9.0], [12.7, 9.0], [12.8, 9.0], [12.9, 9.0], [13.0, 9.0], [13.1, 9.0], [13.2, 9.0], [13.3, 9.0], [13.4, 9.0], [13.5, 9.0], [13.6, 9.0], [13.7, 9.0], [13.8, 9.0], [13.9, 9.0], [14.0, 9.0], [14.1, 9.0], [14.2, 9.0], [14.3, 9.0], [14.4, 9.0], [14.5, 9.0], [14.6, 9.0], [14.7, 9.0], [14.8, 9.0], [14.9, 9.0], [15.0, 9.0], [15.1, 10.0], [15.2, 10.0], [15.3, 10.0], [15.4, 10.0], [15.5, 10.0], [15.6, 10.0], [15.7, 10.0], [15.8, 10.0], [15.9, 10.0], [16.0, 10.0], [16.1, 10.0], [16.2, 10.0], [16.3, 11.0], [16.4, 11.0], [16.5, 11.0], [16.6, 11.0], [16.7, 11.0], [16.8, 11.0], [16.9, 11.0], [17.0, 11.0], [17.1, 11.0], [17.2, 11.0], [17.3, 11.0], [17.4, 12.0], [17.5, 12.0], [17.6, 12.0], [17.7, 12.0], [17.8, 12.0], [17.9, 12.0], [18.0, 12.0], [18.1, 12.0], [18.2, 13.0], [18.3, 13.0], [18.4, 13.0], [18.5, 13.0], [18.6, 13.0], [18.7, 13.0], [18.8, 14.0], [18.9, 14.0], [19.0, 14.0], [19.1, 15.0], [19.2, 15.0], [19.3, 15.0], [19.4, 15.0], [19.5, 16.0], [19.6, 16.0], [19.7, 16.0], [19.8, 16.0], [19.9, 17.0], [20.0, 17.0], [20.1, 17.0], [20.2, 17.0], [20.3, 17.0], [20.4, 18.0], [20.5, 18.0], [20.6, 18.0], [20.7, 19.0], [20.8, 19.0], [20.9, 19.0], [21.0, 19.0], [21.1, 20.0], [21.2, 20.0], [21.3, 20.0], [21.4, 20.0], [21.5, 20.0], [21.6, 21.0], [21.7, 21.0], [21.8, 21.0], [21.9, 22.0], [22.0, 22.0], [22.1, 23.0], [22.2, 23.0], [22.3, 23.0], [22.4, 23.0], [22.5, 24.0], [22.6, 24.0], [22.7, 24.0], [22.8, 24.0], [22.9, 24.0], [23.0, 25.0], [23.1, 25.0], [23.2, 25.0], [23.3, 25.0], [23.4, 26.0], [23.5, 26.0], [23.6, 26.0], [23.7, 27.0], [23.8, 27.0], [23.9, 28.0], [24.0, 28.0], [24.1, 28.0], [24.2, 28.0], [24.3, 29.0], [24.4, 29.0], [24.5, 29.0], [24.6, 29.0], [24.7, 30.0], [24.8, 30.0], [24.9, 31.0], [25.0, 31.0], [25.1, 32.0], [25.2, 32.0], [25.3, 32.0], [25.4, 32.0], [25.5, 33.0], [25.6, 33.0], [25.7, 33.0], [25.8, 33.0], [25.9, 34.0], [26.0, 34.0], [26.1, 35.0], [26.2, 35.0], [26.3, 36.0], [26.4, 36.0], [26.5, 36.0], [26.6, 37.0], [26.7, 37.0], [26.8, 38.0], [26.9, 38.0], [27.0, 39.0], [27.1, 39.0], [27.2, 39.0], [27.3, 39.0], [27.4, 40.0], [27.5, 40.0], [27.6, 40.0], [27.7, 41.0], [27.8, 41.0], [27.9, 41.0], [28.0, 41.0], [28.1, 42.0], [28.2, 43.0], [28.3, 44.0], [28.4, 46.0], [28.5, 46.0], [28.6, 47.0], [28.7, 47.0], [28.8, 47.0], [28.9, 48.0], [29.0, 48.0], [29.1, 48.0], [29.2, 49.0], [29.3, 49.0], [29.4, 49.0], [29.5, 49.0], [29.6, 50.0], [29.7, 50.0], [29.8, 50.0], [29.9, 51.0], [30.0, 52.0], [30.1, 52.0], [30.2, 54.0], [30.3, 55.0], [30.4, 56.0], [30.5, 56.0], [30.6, 56.0], [30.7, 57.0], [30.8, 57.0], [30.9, 58.0], [31.0, 58.0], [31.1, 58.0], [31.2, 58.0], [31.3, 58.0], [31.4, 59.0], [31.5, 59.0], [31.6, 59.0], [31.7, 60.0], [31.8, 60.0], [31.9, 61.0], [32.0, 62.0], [32.1, 62.0], [32.2, 62.0], [32.3, 63.0], [32.4, 64.0], [32.5, 65.0], [32.6, 65.0], [32.7, 66.0], [32.8, 67.0], [32.9, 67.0], [33.0, 68.0], [33.1, 69.0], [33.2, 70.0], [33.3, 70.0], [33.4, 70.0], [33.5, 73.0], [33.6, 73.0], [33.7, 74.0], [33.8, 74.0], [33.9, 75.0], [34.0, 75.0], [34.1, 76.0], [34.2, 80.0], [34.3, 81.0], [34.4, 81.0], [34.5, 82.0], [34.6, 83.0], [34.7, 83.0], [34.8, 84.0], [34.9, 85.0], [35.0, 86.0], [35.1, 86.0], [35.2, 87.0], [35.3, 89.0], [35.4, 89.0], [35.5, 91.0], [35.6, 91.0], [35.7, 92.0], [35.8, 92.0], [35.9, 92.0], [36.0, 92.0], [36.1, 93.0], [36.2, 94.0], [36.3, 94.0], [36.4, 96.0], [36.5, 96.0], [36.6, 97.0], [36.7, 98.0], [36.8, 99.0], [36.9, 101.0], [37.0, 102.0], [37.1, 102.0], [37.2, 102.0], [37.3, 103.0], [37.4, 103.0], [37.5, 104.0], [37.6, 105.0], [37.7, 106.0], [37.8, 107.0], [37.9, 107.0], [38.0, 108.0], [38.1, 108.0], [38.2, 110.0], [38.3, 111.0], [38.4, 112.0], [38.5, 113.0], [38.6, 113.0], [38.7, 114.0], [38.8, 116.0], [38.9, 118.0], [39.0, 119.0], [39.1, 121.0], [39.2, 122.0], [39.3, 122.0], [39.4, 122.0], [39.5, 124.0], [39.6, 125.0], [39.7, 126.0], [39.8, 128.0], [39.9, 129.0], [40.0, 130.0], [40.1, 131.0], [40.2, 132.0], [40.3, 134.0], [40.4, 135.0], [40.5, 136.0], [40.6, 136.0], [40.7, 139.0], [40.8, 140.0], [40.9, 142.0], [41.0, 144.0], [41.1, 145.0], [41.2, 148.0], [41.3, 148.0], [41.4, 151.0], [41.5, 152.0], [41.6, 153.0], [41.7, 153.0], [41.8, 154.0], [41.9, 155.0], [42.0, 157.0], [42.1, 157.0], [42.2, 157.0], [42.3, 159.0], [42.4, 160.0], [42.5, 161.0], [42.6, 162.0], [42.7, 163.0], [42.8, 164.0], [42.9, 165.0], [43.0, 166.0], [43.1, 168.0], [43.2, 171.0], [43.3, 173.0], [43.4, 174.0], [43.5, 175.0], [43.6, 176.0], [43.7, 177.0], [43.8, 177.0], [43.9, 178.0], [44.0, 180.0], [44.1, 181.0], [44.2, 182.0], [44.3, 182.0], [44.4, 183.0], [44.5, 183.0], [44.6, 184.0], [44.7, 186.0], [44.8, 186.0], [44.9, 187.0], [45.0, 188.0], [45.1, 188.0], [45.2, 188.0], [45.3, 189.0], [45.4, 194.0], [45.5, 199.0], [45.6, 200.0], [45.7, 201.0], [45.8, 203.0], [45.9, 204.0], [46.0, 206.0], [46.1, 207.0], [46.2, 208.0], [46.3, 210.0], [46.4, 211.0], [46.5, 216.0], [46.6, 217.0], [46.7, 219.0], [46.8, 220.0], [46.9, 224.0], [47.0, 224.0], [47.1, 225.0], [47.2, 228.0], [47.3, 231.0], [47.4, 234.0], [47.5, 238.0], [47.6, 241.0], [47.7, 243.0], [47.8, 244.0], [47.9, 244.0], [48.0, 245.0], [48.1, 245.0], [48.2, 246.0], [48.3, 250.0], [48.4, 252.0], [48.5, 257.0], [48.6, 257.0], [48.7, 258.0], [48.8, 261.0], [48.9, 262.0], [49.0, 263.0], [49.1, 265.0], [49.2, 267.0], [49.3, 268.0], [49.4, 268.0], [49.5, 270.0], [49.6, 271.0], [49.7, 272.0], [49.8, 273.0], [49.9, 275.0], [50.0, 275.0], [50.1, 277.0], [50.2, 283.0], [50.3, 285.0], [50.4, 286.0], [50.5, 288.0], [50.6, 294.0], [50.7, 295.0], [50.8, 296.0], [50.9, 302.0], [51.0, 303.0], [51.1, 307.0], [51.2, 307.0], [51.3, 309.0], [51.4, 316.0], [51.5, 317.0], [51.6, 318.0], [51.7, 320.0], [51.8, 322.0], [51.9, 323.0], [52.0, 326.0], [52.1, 328.0], [52.2, 329.0], [52.3, 329.0], [52.4, 331.0], [52.5, 336.0], [52.6, 338.0], [52.7, 342.0], [52.8, 346.0], [52.9, 347.0], [53.0, 347.0], [53.1, 352.0], [53.2, 354.0], [53.3, 356.0], [53.4, 364.0], [53.5, 367.0], [53.6, 367.0], [53.7, 369.0], [53.8, 373.0], [53.9, 374.0], [54.0, 383.0], [54.1, 384.0], [54.2, 386.0], [54.3, 387.0], [54.4, 388.0], [54.5, 390.0], [54.6, 391.0], [54.7, 397.0], [54.8, 403.0], [54.9, 405.0], [55.0, 405.0], [55.1, 408.0], [55.2, 410.0], [55.3, 412.0], [55.4, 416.0], [55.5, 418.0], [55.6, 420.0], [55.7, 421.0], [55.8, 422.0], [55.9, 423.0], [56.0, 430.0], [56.1, 431.0], [56.2, 438.0], [56.3, 439.0], [56.4, 441.0], [56.5, 443.0], [56.6, 445.0], [56.7, 447.0], [56.8, 448.0], [56.9, 451.0], [57.0, 452.0], [57.1, 454.0], [57.2, 455.0], [57.3, 457.0], [57.4, 461.0], [57.5, 462.0], [57.6, 464.0], [57.7, 467.0], [57.8, 470.0], [57.9, 473.0], [58.0, 476.0], [58.1, 478.0], [58.2, 478.0], [58.3, 483.0], [58.4, 487.0], [58.5, 493.0], [58.6, 493.0], [58.7, 496.0], [58.8, 497.0], [58.9, 498.0], [59.0, 499.0], [59.1, 506.0], [59.2, 509.0], [59.3, 510.0], [59.4, 511.0], [59.5, 514.0], [59.6, 516.0], [59.7, 517.0], [59.8, 519.0], [59.9, 523.0], [60.0, 523.0], [60.1, 528.0], [60.2, 529.0], [60.3, 530.0], [60.4, 534.0], [60.5, 534.0], [60.6, 537.0], [60.7, 540.0], [60.8, 541.0], [60.9, 545.0], [61.0, 550.0], [61.1, 551.0], [61.2, 552.0], [61.3, 553.0], [61.4, 558.0], [61.5, 561.0], [61.6, 565.0], [61.7, 566.0], [61.8, 570.0], [61.9, 570.0], [62.0, 573.0], [62.1, 579.0], [62.2, 579.0], [62.3, 583.0], [62.4, 584.0], [62.5, 587.0], [62.6, 593.0], [62.7, 593.0], [62.8, 594.0], [62.9, 595.0], [63.0, 598.0], [63.1, 599.0], [63.2, 602.0], [63.3, 603.0], [63.4, 603.0], [63.5, 607.0], [63.6, 607.0], [63.7, 610.0], [63.8, 611.0], [63.9, 614.0], [64.0, 616.0], [64.1, 620.0], [64.2, 620.0], [64.3, 620.0], [64.4, 621.0], [64.5, 625.0], [64.6, 626.0], [64.7, 628.0], [64.8, 628.0], [64.9, 632.0], [65.0, 633.0], [65.1, 635.0], [65.2, 637.0], [65.3, 637.0], [65.4, 640.0], [65.5, 641.0], [65.6, 643.0], [65.7, 644.0], [65.8, 644.0], [65.9, 645.0], [66.0, 652.0], [66.1, 654.0], [66.2, 655.0], [66.3, 656.0], [66.4, 659.0], [66.5, 659.0], [66.6, 661.0], [66.7, 662.0], [66.8, 663.0], [66.9, 665.0], [67.0, 667.0], [67.1, 668.0], [67.2, 670.0], [67.3, 671.0], [67.4, 672.0], [67.5, 676.0], [67.6, 679.0], [67.7, 682.0], [67.8, 682.0], [67.9, 683.0], [68.0, 684.0], [68.1, 687.0], [68.2, 688.0], [68.3, 693.0], [68.4, 693.0], [68.5, 695.0], [68.6, 697.0], [68.7, 697.0], [68.8, 698.0], [68.9, 699.0], [69.0, 701.0], [69.1, 704.0], [69.2, 704.0], [69.3, 705.0], [69.4, 705.0], [69.5, 708.0], [69.6, 708.0], [69.7, 715.0], [69.8, 715.0], [69.9, 718.0], [70.0, 723.0], [70.1, 725.0], [70.2, 727.0], [70.3, 729.0], [70.4, 732.0], [70.5, 735.0], [70.6, 737.0], [70.7, 742.0], [70.8, 742.0], [70.9, 746.0], [71.0, 748.0], [71.1, 750.0], [71.2, 751.0], [71.3, 756.0], [71.4, 760.0], [71.5, 761.0], [71.6, 761.0], [71.7, 765.0], [71.8, 766.0], [71.9, 768.0], [72.0, 770.0], [72.1, 772.0], [72.2, 773.0], [72.3, 773.0], [72.4, 774.0], [72.5, 778.0], [72.6, 780.0], [72.7, 781.0], [72.8, 782.0], [72.9, 784.0], [73.0, 785.0], [73.1, 786.0], [73.2, 788.0], [73.3, 789.0], [73.4, 790.0], [73.5, 793.0], [73.6, 793.0], [73.7, 798.0], [73.8, 800.0], [73.9, 800.0], [74.0, 801.0], [74.1, 803.0], [74.2, 807.0], [74.3, 808.0], [74.4, 812.0], [74.5, 816.0], [74.6, 821.0], [74.7, 822.0], [74.8, 823.0], [74.9, 825.0], [75.0, 826.0], [75.1, 829.0], [75.2, 830.0], [75.3, 838.0], [75.4, 839.0], [75.5, 840.0], [75.6, 843.0], [75.7, 845.0], [75.8, 846.0], [75.9, 848.0], [76.0, 850.0], [76.1, 852.0], [76.2, 854.0], [76.3, 854.0], [76.4, 857.0], [76.5, 858.0], [76.6, 860.0], [76.7, 863.0], [76.8, 865.0], [76.9, 870.0], [77.0, 871.0], [77.1, 873.0], [77.2, 873.0], [77.3, 875.0], [77.4, 877.0], [77.5, 880.0], [77.6, 883.0], [77.7, 888.0], [77.8, 891.0], [77.9, 892.0], [78.0, 892.0], [78.1, 895.0], [78.2, 896.0], [78.3, 901.0], [78.4, 904.0], [78.5, 906.0], [78.6, 908.0], [78.7, 908.0], [78.8, 909.0], [78.9, 910.0], [79.0, 914.0], [79.1, 916.0], [79.2, 921.0], [79.3, 921.0], [79.4, 926.0], [79.5, 933.0], [79.6, 938.0], [79.7, 941.0], [79.8, 941.0], [79.9, 942.0], [80.0, 945.0], [80.1, 947.0], [80.2, 947.0], [80.3, 950.0], [80.4, 955.0], [80.5, 960.0], [80.6, 960.0], [80.7, 961.0], [80.8, 962.0], [80.9, 966.0], [81.0, 968.0], [81.1, 969.0], [81.2, 976.0], [81.3, 977.0], [81.4, 978.0], [81.5, 979.0], [81.6, 981.0], [81.7, 982.0], [81.8, 985.0], [81.9, 987.0], [82.0, 988.0], [82.1, 988.0], [82.2, 990.0], [82.3, 991.0], [82.4, 994.0], [82.5, 994.0], [82.6, 996.0], [82.7, 1000.0], [82.8, 1002.0], [82.9, 1004.0], [83.0, 1011.0], [83.1, 1017.0], [83.2, 1019.0], [83.3, 1022.0], [83.4, 1023.0], [83.5, 1026.0], [83.6, 1026.0], [83.7, 1028.0], [83.8, 1029.0], [83.9, 1032.0], [84.0, 1034.0], [84.1, 1036.0], [84.2, 1038.0], [84.3, 1038.0], [84.4, 1040.0], [84.5, 1042.0], [84.6, 1043.0], [84.7, 1046.0], [84.8, 1046.0], [84.9, 1049.0], [85.0, 1049.0], [85.1, 1050.0], [85.2, 1052.0], [85.3, 1053.0], [85.4, 1058.0], [85.5, 1060.0], [85.6, 1064.0], [85.7, 1066.0], [85.8, 1066.0], [85.9, 1068.0], [86.0, 1068.0], [86.1, 1070.0], [86.2, 1070.0], [86.3, 1075.0], [86.4, 1077.0], [86.5, 1077.0], [86.6, 1079.0], [86.7, 1081.0], [86.8, 1083.0], [86.9, 1083.0], [87.0, 1086.0], [87.1, 1091.0], [87.2, 1093.0], [87.3, 1094.0], [87.4, 1096.0], [87.5, 1098.0], [87.6, 1100.0], [87.7, 1102.0], [87.8, 1105.0], [87.9, 1108.0], [88.0, 1109.0], [88.1, 1111.0], [88.2, 1112.0], [88.3, 1117.0], [88.4, 1124.0], [88.5, 1128.0], [88.6, 1128.0], [88.7, 1133.0], [88.8, 1139.0], [88.9, 1141.0], [89.0, 1145.0], [89.1, 1148.0], [89.2, 1150.0], [89.3, 1151.0], [89.4, 1158.0], [89.5, 1160.0], [89.6, 1162.0], [89.7, 1165.0], [89.8, 1167.0], [89.9, 1169.0], [90.0, 1169.0], [90.1, 1172.0], [90.2, 1173.0], [90.3, 1178.0], [90.4, 1181.0], [90.5, 1183.0], [90.6, 1186.0], [90.7, 1187.0], [90.8, 1188.0], [90.9, 1191.0], [91.0, 1192.0], [91.1, 1196.0], [91.2, 1197.0], [91.3, 1199.0], [91.4, 1200.0], [91.5, 1200.0], [91.6, 1201.0], [91.7, 1205.0], [91.8, 1209.0], [91.9, 1210.0], [92.0, 1211.0], [92.1, 1218.0], [92.2, 1220.0], [92.3, 1227.0], [92.4, 1232.0], [92.5, 1234.0], [92.6, 1234.0], [92.7, 1241.0], [92.8, 1243.0], [92.9, 1243.0], [93.0, 1243.0], [93.1, 1248.0], [93.2, 1252.0], [93.3, 1253.0], [93.4, 1256.0], [93.5, 1264.0], [93.6, 1265.0], [93.7, 1266.0], [93.8, 1274.0], [93.9, 1276.0], [94.0, 1282.0], [94.1, 1285.0], [94.2, 1292.0], [94.3, 1293.0], [94.4, 1302.0], [94.5, 1304.0], [94.6, 1307.0], [94.7, 1311.0], [94.8, 1317.0], [94.9, 1320.0], [95.0, 1323.0], [95.1, 1324.0], [95.2, 1329.0], [95.3, 1330.0], [95.4, 1331.0], [95.5, 1335.0], [95.6, 1339.0], [95.7, 1344.0], [95.8, 1345.0], [95.9, 1348.0], [96.0, 1349.0], [96.1, 1353.0], [96.2, 1358.0], [96.3, 1365.0], [96.4, 1370.0], [96.5, 1371.0], [96.6, 1373.0], [96.7, 1375.0], [96.8, 1378.0], [96.9, 1381.0], [97.0, 1383.0], [97.1, 1395.0], [97.2, 1397.0], [97.3, 1401.0], [97.4, 1402.0], [97.5, 1406.0], [97.6, 1411.0], [97.7, 1425.0], [97.8, 1437.0], [97.9, 1441.0], [98.0, 1447.0], [98.1, 1466.0], [98.2, 1477.0], [98.3, 1487.0], [98.4, 1499.0], [98.5, 1508.0], [98.6, 1509.0], [98.7, 1511.0], [98.8, 1515.0], [98.9, 1521.0], [99.0, 1527.0], [99.1, 1534.0], [99.2, 1559.0], [99.3, 1561.0], [99.4, 1574.0], [99.5, 1605.0], [99.6, 1616.0], [99.7, 1710.0], [99.8, 1731.0], [99.9, 1767.0]], "isOverall": false, "label": "Delete PROB", "isController": false}, {"data": [[0.0, 3.0], [0.1, 3.0], [0.2, 4.0], [0.3, 4.0], [0.4, 4.0], [0.5, 4.0], [0.6, 4.0], [0.7, 4.0], [0.8, 4.0], [0.9, 4.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 4.0], [1.7, 4.0], [1.8, 4.0], [1.9, 4.0], [2.0, 4.0], [2.1, 4.0], [2.2, 4.0], [2.3, 4.0], [2.4, 4.0], [2.5, 4.0], [2.6, 4.0], [2.7, 5.0], [2.8, 5.0], [2.9, 5.0], [3.0, 5.0], [3.1, 5.0], [3.2, 5.0], [3.3, 5.0], [3.4, 5.0], [3.5, 5.0], [3.6, 5.0], [3.7, 5.0], [3.8, 5.0], [3.9, 5.0], [4.0, 5.0], [4.1, 5.0], [4.2, 5.0], [4.3, 5.0], [4.4, 5.0], [4.5, 5.0], [4.6, 5.0], [4.7, 5.0], [4.8, 5.0], [4.9, 5.0], [5.0, 5.0], [5.1, 5.0], [5.2, 5.0], [5.3, 5.0], [5.4, 5.0], [5.5, 5.0], [5.6, 5.0], [5.7, 5.0], [5.8, 5.0], [5.9, 5.0], [6.0, 5.0], [6.1, 5.0], [6.2, 5.0], [6.3, 5.0], [6.4, 5.0], [6.5, 5.0], [6.6, 5.0], [6.7, 5.0], [6.8, 5.0], [6.9, 5.0], [7.0, 5.0], [7.1, 5.0], [7.2, 5.0], [7.3, 5.0], [7.4, 5.0], [7.5, 5.0], [7.6, 5.0], [7.7, 5.0], [7.8, 5.0], [7.9, 5.0], [8.0, 5.0], [8.1, 5.0], [8.2, 6.0], [8.3, 6.0], [8.4, 6.0], [8.5, 6.0], [8.6, 6.0], [8.7, 6.0], [8.8, 6.0], [8.9, 6.0], [9.0, 6.0], [9.1, 6.0], [9.2, 6.0], [9.3, 6.0], [9.4, 6.0], [9.5, 6.0], [9.6, 6.0], [9.7, 6.0], [9.8, 6.0], [9.9, 6.0], [10.0, 6.0], [10.1, 6.0], [10.2, 6.0], [10.3, 6.0], [10.4, 6.0], [10.5, 6.0], [10.6, 6.0], [10.7, 6.0], [10.8, 6.0], [10.9, 6.0], [11.0, 6.0], [11.1, 6.0], [11.2, 6.0], [11.3, 6.0], [11.4, 6.0], [11.5, 6.0], [11.6, 6.0], [11.7, 6.0], [11.8, 6.0], [11.9, 7.0], [12.0, 7.0], [12.1, 7.0], [12.2, 7.0], [12.3, 7.0], [12.4, 7.0], [12.5, 7.0], [12.6, 7.0], [12.7, 7.0], [12.8, 7.0], [12.9, 7.0], [13.0, 7.0], [13.1, 7.0], [13.2, 7.0], [13.3, 7.0], [13.4, 7.0], [13.5, 7.0], [13.6, 7.0], [13.7, 7.0], [13.8, 7.0], [13.9, 7.0], [14.0, 7.0], [14.1, 8.0], [14.2, 8.0], [14.3, 8.0], [14.4, 8.0], [14.5, 8.0], [14.6, 8.0], [14.7, 8.0], [14.8, 8.0], [14.9, 8.0], [15.0, 8.0], [15.1, 8.0], [15.2, 8.0], [15.3, 8.0], [15.4, 8.0], [15.5, 8.0], [15.6, 8.0], [15.7, 8.0], [15.8, 9.0], [15.9, 9.0], [16.0, 9.0], [16.1, 9.0], [16.2, 9.0], [16.3, 9.0], [16.4, 9.0], [16.5, 9.0], [16.6, 9.0], [16.7, 9.0], [16.8, 9.0], [16.9, 9.0], [17.0, 9.0], [17.1, 10.0], [17.2, 10.0], [17.3, 10.0], [17.4, 10.0], [17.5, 10.0], [17.6, 10.0], [17.7, 10.0], [17.8, 10.0], [17.9, 10.0], [18.0, 10.0], [18.1, 10.0], [18.2, 11.0], [18.3, 11.0], [18.4, 11.0], [18.5, 11.0], [18.6, 12.0], [18.7, 12.0], [18.8, 12.0], [18.9, 12.0], [19.0, 12.0], [19.1, 13.0], [19.2, 13.0], [19.3, 13.0], [19.4, 14.0], [19.5, 14.0], [19.6, 14.0], [19.7, 14.0], [19.8, 15.0], [19.9, 15.0], [20.0, 15.0], [20.1, 15.0], [20.2, 15.0], [20.3, 15.0], [20.4, 15.0], [20.5, 15.0], [20.6, 15.0], [20.7, 16.0], [20.8, 16.0], [20.9, 16.0], [21.0, 16.0], [21.1, 16.0], [21.2, 16.0], [21.3, 17.0], [21.4, 17.0], [21.5, 17.0], [21.6, 18.0], [21.7, 18.0], [21.8, 19.0], [21.9, 19.0], [22.0, 19.0], [22.1, 19.0], [22.2, 20.0], [22.3, 20.0], [22.4, 20.0], [22.5, 21.0], [22.6, 21.0], [22.7, 21.0], [22.8, 21.0], [22.9, 21.0], [23.0, 21.0], [23.1, 22.0], [23.2, 22.0], [23.3, 22.0], [23.4, 23.0], [23.5, 23.0], [23.6, 23.0], [23.7, 23.0], [23.8, 24.0], [23.9, 24.0], [24.0, 24.0], [24.1, 25.0], [24.2, 25.0], [24.3, 26.0], [24.4, 27.0], [24.5, 27.0], [24.6, 27.0], [24.7, 29.0], [24.8, 29.0], [24.9, 29.0], [25.0, 29.0], [25.1, 30.0], [25.2, 30.0], [25.3, 31.0], [25.4, 31.0], [25.5, 31.0], [25.6, 32.0], [25.7, 32.0], [25.8, 32.0], [25.9, 33.0], [26.0, 34.0], [26.1, 34.0], [26.2, 35.0], [26.3, 35.0], [26.4, 35.0], [26.5, 36.0], [26.6, 37.0], [26.7, 38.0], [26.8, 38.0], [26.9, 38.0], [27.0, 38.0], [27.1, 39.0], [27.2, 39.0], [27.3, 39.0], [27.4, 40.0], [27.5, 41.0], [27.6, 42.0], [27.7, 43.0], [27.8, 43.0], [27.9, 43.0], [28.0, 44.0], [28.1, 44.0], [28.2, 45.0], [28.3, 45.0], [28.4, 46.0], [28.5, 46.0], [28.6, 46.0], [28.7, 47.0], [28.8, 48.0], [28.9, 48.0], [29.0, 50.0], [29.1, 50.0], [29.2, 51.0], [29.3, 52.0], [29.4, 53.0], [29.5, 53.0], [29.6, 53.0], [29.7, 54.0], [29.8, 54.0], [29.9, 55.0], [30.0, 55.0], [30.1, 55.0], [30.2, 56.0], [30.3, 57.0], [30.4, 57.0], [30.5, 58.0], [30.6, 59.0], [30.7, 59.0], [30.8, 60.0], [30.9, 60.0], [31.0, 61.0], [31.1, 61.0], [31.2, 62.0], [31.3, 63.0], [31.4, 63.0], [31.5, 64.0], [31.6, 64.0], [31.7, 64.0], [31.8, 66.0], [31.9, 67.0], [32.0, 67.0], [32.1, 68.0], [32.2, 68.0], [32.3, 68.0], [32.4, 69.0], [32.5, 69.0], [32.6, 70.0], [32.7, 71.0], [32.8, 71.0], [32.9, 71.0], [33.0, 72.0], [33.1, 72.0], [33.2, 73.0], [33.3, 74.0], [33.4, 75.0], [33.5, 77.0], [33.6, 78.0], [33.7, 78.0], [33.8, 79.0], [33.9, 82.0], [34.0, 82.0], [34.1, 83.0], [34.2, 84.0], [34.3, 86.0], [34.4, 86.0], [34.5, 87.0], [34.6, 88.0], [34.7, 89.0], [34.8, 91.0], [34.9, 91.0], [35.0, 93.0], [35.1, 93.0], [35.2, 95.0], [35.3, 97.0], [35.4, 99.0], [35.5, 100.0], [35.6, 100.0], [35.7, 101.0], [35.8, 101.0], [35.9, 104.0], [36.0, 106.0], [36.1, 106.0], [36.2, 107.0], [36.3, 108.0], [36.4, 109.0], [36.5, 109.0], [36.6, 109.0], [36.7, 111.0], [36.8, 112.0], [36.9, 113.0], [37.0, 113.0], [37.1, 114.0], [37.2, 115.0], [37.3, 115.0], [37.4, 116.0], [37.5, 118.0], [37.6, 119.0], [37.7, 119.0], [37.8, 121.0], [37.9, 122.0], [38.0, 123.0], [38.1, 124.0], [38.2, 124.0], [38.3, 126.0], [38.4, 129.0], [38.5, 129.0], [38.6, 130.0], [38.7, 130.0], [38.8, 131.0], [38.9, 131.0], [39.0, 132.0], [39.1, 133.0], [39.2, 134.0], [39.3, 135.0], [39.4, 136.0], [39.5, 136.0], [39.6, 136.0], [39.7, 138.0], [39.8, 140.0], [39.9, 141.0], [40.0, 142.0], [40.1, 144.0], [40.2, 144.0], [40.3, 145.0], [40.4, 148.0], [40.5, 149.0], [40.6, 150.0], [40.7, 152.0], [40.8, 153.0], [40.9, 153.0], [41.0, 154.0], [41.1, 155.0], [41.2, 156.0], [41.3, 157.0], [41.4, 159.0], [41.5, 161.0], [41.6, 162.0], [41.7, 163.0], [41.8, 165.0], [41.9, 167.0], [42.0, 168.0], [42.1, 169.0], [42.2, 171.0], [42.3, 175.0], [42.4, 175.0], [42.5, 176.0], [42.6, 178.0], [42.7, 180.0], [42.8, 182.0], [42.9, 185.0], [43.0, 185.0], [43.1, 185.0], [43.2, 187.0], [43.3, 188.0], [43.4, 191.0], [43.5, 196.0], [43.6, 198.0], [43.7, 200.0], [43.8, 201.0], [43.9, 203.0], [44.0, 205.0], [44.1, 207.0], [44.2, 211.0], [44.3, 211.0], [44.4, 214.0], [44.5, 215.0], [44.6, 216.0], [44.7, 216.0], [44.8, 219.0], [44.9, 220.0], [45.0, 223.0], [45.1, 224.0], [45.2, 225.0], [45.3, 225.0], [45.4, 226.0], [45.5, 227.0], [45.6, 228.0], [45.7, 228.0], [45.8, 230.0], [45.9, 231.0], [46.0, 232.0], [46.1, 232.0], [46.2, 236.0], [46.3, 238.0], [46.4, 239.0], [46.5, 240.0], [46.6, 240.0], [46.7, 243.0], [46.8, 245.0], [46.9, 247.0], [47.0, 249.0], [47.1, 253.0], [47.2, 255.0], [47.3, 256.0], [47.4, 257.0], [47.5, 259.0], [47.6, 260.0], [47.7, 262.0], [47.8, 265.0], [47.9, 268.0], [48.0, 270.0], [48.1, 273.0], [48.2, 275.0], [48.3, 276.0], [48.4, 277.0], [48.5, 279.0], [48.6, 279.0], [48.7, 281.0], [48.8, 281.0], [48.9, 281.0], [49.0, 283.0], [49.1, 283.0], [49.2, 287.0], [49.3, 287.0], [49.4, 287.0], [49.5, 289.0], [49.6, 295.0], [49.7, 295.0], [49.8, 296.0], [49.9, 299.0], [50.0, 300.0], [50.1, 304.0], [50.2, 306.0], [50.3, 307.0], [50.4, 307.0], [50.5, 309.0], [50.6, 309.0], [50.7, 311.0], [50.8, 312.0], [50.9, 317.0], [51.0, 317.0], [51.1, 319.0], [51.2, 324.0], [51.3, 326.0], [51.4, 327.0], [51.5, 330.0], [51.6, 331.0], [51.7, 333.0], [51.8, 334.0], [51.9, 334.0], [52.0, 335.0], [52.1, 336.0], [52.2, 340.0], [52.3, 342.0], [52.4, 345.0], [52.5, 346.0], [52.6, 347.0], [52.7, 351.0], [52.8, 351.0], [52.9, 352.0], [53.0, 353.0], [53.1, 355.0], [53.2, 358.0], [53.3, 358.0], [53.4, 359.0], [53.5, 362.0], [53.6, 363.0], [53.7, 364.0], [53.8, 365.0], [53.9, 368.0], [54.0, 371.0], [54.1, 372.0], [54.2, 375.0], [54.3, 377.0], [54.4, 377.0], [54.5, 380.0], [54.6, 381.0], [54.7, 382.0], [54.8, 382.0], [54.9, 384.0], [55.0, 385.0], [55.1, 387.0], [55.2, 388.0], [55.3, 389.0], [55.4, 390.0], [55.5, 391.0], [55.6, 392.0], [55.7, 392.0], [55.8, 394.0], [55.9, 395.0], [56.0, 396.0], [56.1, 398.0], [56.2, 399.0], [56.3, 401.0], [56.4, 402.0], [56.5, 403.0], [56.6, 403.0], [56.7, 406.0], [56.8, 406.0], [56.9, 409.0], [57.0, 409.0], [57.1, 411.0], [57.2, 411.0], [57.3, 413.0], [57.4, 417.0], [57.5, 417.0], [57.6, 419.0], [57.7, 420.0], [57.8, 421.0], [57.9, 422.0], [58.0, 424.0], [58.1, 424.0], [58.2, 425.0], [58.3, 428.0], [58.4, 431.0], [58.5, 431.0], [58.6, 431.0], [58.7, 433.0], [58.8, 433.0], [58.9, 434.0], [59.0, 439.0], [59.1, 444.0], [59.2, 444.0], [59.3, 445.0], [59.4, 447.0], [59.5, 448.0], [59.6, 450.0], [59.7, 452.0], [59.8, 455.0], [59.9, 455.0], [60.0, 456.0], [60.1, 457.0], [60.2, 459.0], [60.3, 461.0], [60.4, 461.0], [60.5, 463.0], [60.6, 464.0], [60.7, 466.0], [60.8, 468.0], [60.9, 470.0], [61.0, 472.0], [61.1, 475.0], [61.2, 476.0], [61.3, 477.0], [61.4, 477.0], [61.5, 478.0], [61.6, 481.0], [61.7, 481.0], [61.8, 483.0], [61.9, 483.0], [62.0, 484.0], [62.1, 485.0], [62.2, 486.0], [62.3, 486.0], [62.4, 488.0], [62.5, 489.0], [62.6, 490.0], [62.7, 492.0], [62.8, 492.0], [62.9, 492.0], [63.0, 493.0], [63.1, 494.0], [63.2, 495.0], [63.3, 498.0], [63.4, 499.0], [63.5, 500.0], [63.6, 500.0], [63.7, 502.0], [63.8, 503.0], [63.9, 503.0], [64.0, 505.0], [64.1, 506.0], [64.2, 506.0], [64.3, 506.0], [64.4, 507.0], [64.5, 508.0], [64.6, 508.0], [64.7, 509.0], [64.8, 511.0], [64.9, 512.0], [65.0, 512.0], [65.1, 513.0], [65.2, 514.0], [65.3, 516.0], [65.4, 518.0], [65.5, 518.0], [65.6, 518.0], [65.7, 518.0], [65.8, 520.0], [65.9, 522.0], [66.0, 523.0], [66.1, 523.0], [66.2, 526.0], [66.3, 527.0], [66.4, 528.0], [66.5, 529.0], [66.6, 530.0], [66.7, 531.0], [66.8, 532.0], [66.9, 534.0], [67.0, 536.0], [67.1, 537.0], [67.2, 538.0], [67.3, 539.0], [67.4, 540.0], [67.5, 542.0], [67.6, 543.0], [67.7, 544.0], [67.8, 544.0], [67.9, 544.0], [68.0, 545.0], [68.1, 546.0], [68.2, 546.0], [68.3, 547.0], [68.4, 548.0], [68.5, 548.0], [68.6, 549.0], [68.7, 550.0], [68.8, 551.0], [68.9, 553.0], [69.0, 553.0], [69.1, 556.0], [69.2, 556.0], [69.3, 556.0], [69.4, 558.0], [69.5, 559.0], [69.6, 560.0], [69.7, 561.0], [69.8, 561.0], [69.9, 562.0], [70.0, 563.0], [70.1, 563.0], [70.2, 566.0], [70.3, 567.0], [70.4, 569.0], [70.5, 570.0], [70.6, 571.0], [70.7, 572.0], [70.8, 573.0], [70.9, 574.0], [71.0, 574.0], [71.1, 574.0], [71.2, 577.0], [71.3, 577.0], [71.4, 579.0], [71.5, 580.0], [71.6, 581.0], [71.7, 584.0], [71.8, 586.0], [71.9, 587.0], [72.0, 589.0], [72.1, 590.0], [72.2, 590.0], [72.3, 592.0], [72.4, 593.0], [72.5, 594.0], [72.6, 595.0], [72.7, 597.0], [72.8, 597.0], [72.9, 599.0], [73.0, 600.0], [73.1, 601.0], [73.2, 602.0], [73.3, 602.0], [73.4, 603.0], [73.5, 604.0], [73.6, 604.0], [73.7, 605.0], [73.8, 605.0], [73.9, 606.0], [74.0, 608.0], [74.1, 610.0], [74.2, 612.0], [74.3, 613.0], [74.4, 613.0], [74.5, 613.0], [74.6, 614.0], [74.7, 616.0], [74.8, 619.0], [74.9, 619.0], [75.0, 623.0], [75.1, 623.0], [75.2, 623.0], [75.3, 626.0], [75.4, 629.0], [75.5, 631.0], [75.6, 633.0], [75.7, 635.0], [75.8, 637.0], [75.9, 639.0], [76.0, 639.0], [76.1, 642.0], [76.2, 643.0], [76.3, 645.0], [76.4, 645.0], [76.5, 648.0], [76.6, 648.0], [76.7, 649.0], [76.8, 651.0], [76.9, 652.0], [77.0, 655.0], [77.1, 656.0], [77.2, 658.0], [77.3, 660.0], [77.4, 660.0], [77.5, 661.0], [77.6, 662.0], [77.7, 665.0], [77.8, 666.0], [77.9, 666.0], [78.0, 668.0], [78.1, 670.0], [78.2, 671.0], [78.3, 671.0], [78.4, 673.0], [78.5, 678.0], [78.6, 678.0], [78.7, 681.0], [78.8, 682.0], [78.9, 682.0], [79.0, 685.0], [79.1, 685.0], [79.2, 685.0], [79.3, 687.0], [79.4, 689.0], [79.5, 690.0], [79.6, 690.0], [79.7, 692.0], [79.8, 692.0], [79.9, 692.0], [80.0, 694.0], [80.1, 695.0], [80.2, 696.0], [80.3, 696.0], [80.4, 697.0], [80.5, 697.0], [80.6, 698.0], [80.7, 698.0], [80.8, 699.0], [80.9, 703.0], [81.0, 704.0], [81.1, 705.0], [81.2, 706.0], [81.3, 706.0], [81.4, 707.0], [81.5, 707.0], [81.6, 709.0], [81.7, 712.0], [81.8, 712.0], [81.9, 715.0], [82.0, 716.0], [82.1, 719.0], [82.2, 722.0], [82.3, 723.0], [82.4, 725.0], [82.5, 726.0], [82.6, 726.0], [82.7, 729.0], [82.8, 730.0], [82.9, 731.0], [83.0, 732.0], [83.1, 733.0], [83.2, 735.0], [83.3, 736.0], [83.4, 738.0], [83.5, 739.0], [83.6, 739.0], [83.7, 740.0], [83.8, 740.0], [83.9, 741.0], [84.0, 742.0], [84.1, 743.0], [84.2, 745.0], [84.3, 748.0], [84.4, 751.0], [84.5, 752.0], [84.6, 755.0], [84.7, 759.0], [84.8, 762.0], [84.9, 764.0], [85.0, 767.0], [85.1, 769.0], [85.2, 774.0], [85.3, 776.0], [85.4, 778.0], [85.5, 778.0], [85.6, 781.0], [85.7, 783.0], [85.8, 784.0], [85.9, 784.0], [86.0, 785.0], [86.1, 792.0], [86.2, 792.0], [86.3, 795.0], [86.4, 797.0], [86.5, 798.0], [86.6, 802.0], [86.7, 803.0], [86.8, 803.0], [86.9, 803.0], [87.0, 804.0], [87.1, 806.0], [87.2, 808.0], [87.3, 810.0], [87.4, 811.0], [87.5, 812.0], [87.6, 813.0], [87.7, 814.0], [87.8, 814.0], [87.9, 816.0], [88.0, 817.0], [88.1, 819.0], [88.2, 821.0], [88.3, 824.0], [88.4, 825.0], [88.5, 826.0], [88.6, 827.0], [88.7, 829.0], [88.8, 831.0], [88.9, 832.0], [89.0, 834.0], [89.1, 836.0], [89.2, 839.0], [89.3, 840.0], [89.4, 841.0], [89.5, 845.0], [89.6, 848.0], [89.7, 849.0], [89.8, 850.0], [89.9, 853.0], [90.0, 856.0], [90.1, 857.0], [90.2, 858.0], [90.3, 860.0], [90.4, 862.0], [90.5, 867.0], [90.6, 867.0], [90.7, 868.0], [90.8, 869.0], [90.9, 871.0], [91.0, 874.0], [91.1, 874.0], [91.2, 875.0], [91.3, 876.0], [91.4, 878.0], [91.5, 879.0], [91.6, 884.0], [91.7, 887.0], [91.8, 889.0], [91.9, 890.0], [92.0, 893.0], [92.1, 895.0], [92.2, 896.0], [92.3, 897.0], [92.4, 899.0], [92.5, 900.0], [92.6, 902.0], [92.7, 906.0], [92.8, 906.0], [92.9, 909.0], [93.0, 911.0], [93.1, 922.0], [93.2, 922.0], [93.3, 923.0], [93.4, 934.0], [93.5, 938.0], [93.6, 944.0], [93.7, 950.0], [93.8, 951.0], [93.9, 952.0], [94.0, 954.0], [94.1, 956.0], [94.2, 959.0], [94.3, 963.0], [94.4, 965.0], [94.5, 973.0], [94.6, 975.0], [94.7, 977.0], [94.8, 978.0], [94.9, 978.0], [95.0, 980.0], [95.1, 981.0], [95.2, 986.0], [95.3, 989.0], [95.4, 996.0], [95.5, 997.0], [95.6, 998.0], [95.7, 998.0], [95.8, 1000.0], [95.9, 1001.0], [96.0, 1006.0], [96.1, 1010.0], [96.2, 1010.0], [96.3, 1014.0], [96.4, 1015.0], [96.5, 1017.0], [96.6, 1025.0], [96.7, 1026.0], [96.8, 1033.0], [96.9, 1050.0], [97.0, 1055.0], [97.1, 1062.0], [97.2, 1064.0], [97.3, 1067.0], [97.4, 1088.0], [97.5, 1089.0], [97.6, 1106.0], [97.7, 1112.0], [97.8, 1120.0], [97.9, 1120.0], [98.0, 1129.0], [98.1, 1130.0], [98.2, 1135.0], [98.3, 1136.0], [98.4, 1147.0], [98.5, 1159.0], [98.6, 1166.0], [98.7, 1195.0], [98.8, 1211.0], [98.9, 1231.0], [99.0, 1235.0], [99.1, 1266.0], [99.2, 1288.0], [99.3, 1294.0], [99.4, 1311.0], [99.5, 1327.0], [99.6, 1337.0], [99.7, 1390.0], [99.8, 1425.0], [99.9, 1539.0]], "isOverall": false, "label": "Get PROB ID", "isController": false}, {"data": [[0.0, 4.0], [0.1, 6.0], [0.2, 6.0], [0.3, 6.0], [0.4, 6.0], [0.5, 7.0], [0.6, 7.0], [0.7, 7.0], [0.8, 7.0], [0.9, 8.0], [1.0, 8.0], [1.1, 8.0], [1.2, 9.0], [1.3, 9.0], [1.4, 9.0], [1.5, 9.0], [1.6, 9.0], [1.7, 9.0], [1.8, 9.0], [1.9, 10.0], [2.0, 10.0], [2.1, 10.0], [2.2, 10.0], [2.3, 10.0], [2.4, 10.0], [2.5, 10.0], [2.6, 10.0], [2.7, 11.0], [2.8, 11.0], [2.9, 11.0], [3.0, 11.0], [3.1, 11.0], [3.2, 11.0], [3.3, 11.0], [3.4, 12.0], [3.5, 12.0], [3.6, 12.0], [3.7, 12.0], [3.8, 13.0], [3.9, 13.0], [4.0, 13.0], [4.1, 13.0], [4.2, 14.0], [4.3, 14.0], [4.4, 14.0], [4.5, 14.0], [4.6, 15.0], [4.7, 15.0], [4.8, 15.0], [4.9, 15.0], [5.0, 15.0], [5.1, 15.0], [5.2, 16.0], [5.3, 16.0], [5.4, 16.0], [5.5, 16.0], [5.6, 17.0], [5.7, 17.0], [5.8, 17.0], [5.9, 17.0], [6.0, 18.0], [6.1, 18.0], [6.2, 18.0], [6.3, 19.0], [6.4, 19.0], [6.5, 19.0], [6.6, 19.0], [6.7, 20.0], [6.8, 20.0], [6.9, 20.0], [7.0, 20.0], [7.1, 21.0], [7.2, 21.0], [7.3, 21.0], [7.4, 21.0], [7.5, 22.0], [7.6, 22.0], [7.7, 22.0], [7.8, 23.0], [7.9, 23.0], [8.0, 23.0], [8.1, 23.0], [8.2, 24.0], [8.3, 24.0], [8.4, 24.0], [8.5, 25.0], [8.6, 25.0], [8.7, 25.0], [8.8, 26.0], [8.9, 26.0], [9.0, 26.0], [9.1, 26.0], [9.2, 27.0], [9.3, 27.0], [9.4, 27.0], [9.5, 28.0], [9.6, 28.0], [9.7, 28.0], [9.8, 28.0], [9.9, 29.0], [10.0, 29.0], [10.1, 29.0], [10.2, 29.0], [10.3, 30.0], [10.4, 30.0], [10.5, 31.0], [10.6, 31.0], [10.7, 31.0], [10.8, 32.0], [10.9, 32.0], [11.0, 32.0], [11.1, 32.0], [11.2, 33.0], [11.3, 33.0], [11.4, 33.0], [11.5, 34.0], [11.6, 34.0], [11.7, 35.0], [11.8, 35.0], [11.9, 35.0], [12.0, 36.0], [12.1, 36.0], [12.2, 37.0], [12.3, 37.0], [12.4, 37.0], [12.5, 37.0], [12.6, 38.0], [12.7, 38.0], [12.8, 38.0], [12.9, 38.0], [13.0, 39.0], [13.1, 39.0], [13.2, 39.0], [13.3, 40.0], [13.4, 40.0], [13.5, 40.0], [13.6, 41.0], [13.7, 41.0], [13.8, 42.0], [13.9, 42.0], [14.0, 42.0], [14.1, 43.0], [14.2, 43.0], [14.3, 44.0], [14.4, 44.0], [14.5, 44.0], [14.6, 45.0], [14.7, 46.0], [14.8, 46.0], [14.9, 47.0], [15.0, 47.0], [15.1, 48.0], [15.2, 48.0], [15.3, 48.0], [15.4, 49.0], [15.5, 49.0], [15.6, 49.0], [15.7, 50.0], [15.8, 50.0], [15.9, 50.0], [16.0, 51.0], [16.1, 51.0], [16.2, 52.0], [16.3, 53.0], [16.4, 54.0], [16.5, 54.0], [16.6, 54.0], [16.7, 54.0], [16.8, 55.0], [16.9, 56.0], [17.0, 56.0], [17.1, 57.0], [17.2, 57.0], [17.3, 58.0], [17.4, 58.0], [17.5, 58.0], [17.6, 59.0], [17.7, 59.0], [17.8, 59.0], [17.9, 60.0], [18.0, 60.0], [18.1, 60.0], [18.2, 61.0], [18.3, 62.0], [18.4, 62.0], [18.5, 63.0], [18.6, 63.0], [18.7, 63.0], [18.8, 64.0], [18.9, 64.0], [19.0, 65.0], [19.1, 65.0], [19.2, 65.0], [19.3, 66.0], [19.4, 66.0], [19.5, 66.0], [19.6, 67.0], [19.7, 67.0], [19.8, 67.0], [19.9, 69.0], [20.0, 69.0], [20.1, 69.0], [20.2, 69.0], [20.3, 70.0], [20.4, 71.0], [20.5, 71.0], [20.6, 72.0], [20.7, 73.0], [20.8, 73.0], [20.9, 73.0], [21.0, 74.0], [21.1, 74.0], [21.2, 75.0], [21.3, 75.0], [21.4, 76.0], [21.5, 77.0], [21.6, 77.0], [21.7, 78.0], [21.8, 79.0], [21.9, 80.0], [22.0, 81.0], [22.1, 82.0], [22.2, 82.0], [22.3, 83.0], [22.4, 84.0], [22.5, 84.0], [22.6, 85.0], [22.7, 85.0], [22.8, 86.0], [22.9, 86.0], [23.0, 87.0], [23.1, 88.0], [23.2, 88.0], [23.3, 88.0], [23.4, 89.0], [23.5, 90.0], [23.6, 91.0], [23.7, 91.0], [23.8, 92.0], [23.9, 92.0], [24.0, 92.0], [24.1, 93.0], [24.2, 93.0], [24.3, 94.0], [24.4, 95.0], [24.5, 95.0], [24.6, 96.0], [24.7, 96.0], [24.8, 97.0], [24.9, 98.0], [25.0, 99.0], [25.1, 100.0], [25.2, 100.0], [25.3, 100.0], [25.4, 101.0], [25.5, 102.0], [25.6, 103.0], [25.7, 103.0], [25.8, 104.0], [25.9, 105.0], [26.0, 105.0], [26.1, 106.0], [26.2, 107.0], [26.3, 108.0], [26.4, 108.0], [26.5, 109.0], [26.6, 109.0], [26.7, 110.0], [26.8, 110.0], [26.9, 112.0], [27.0, 113.0], [27.1, 113.0], [27.2, 113.0], [27.3, 113.0], [27.4, 114.0], [27.5, 115.0], [27.6, 116.0], [27.7, 116.0], [27.8, 117.0], [27.9, 118.0], [28.0, 119.0], [28.1, 120.0], [28.2, 121.0], [28.3, 122.0], [28.4, 123.0], [28.5, 124.0], [28.6, 125.0], [28.7, 127.0], [28.8, 128.0], [28.9, 128.0], [29.0, 129.0], [29.1, 130.0], [29.2, 132.0], [29.3, 133.0], [29.4, 134.0], [29.5, 135.0], [29.6, 136.0], [29.7, 137.0], [29.8, 138.0], [29.9, 139.0], [30.0, 140.0], [30.1, 141.0], [30.2, 141.0], [30.3, 143.0], [30.4, 144.0], [30.5, 145.0], [30.6, 146.0], [30.7, 147.0], [30.8, 148.0], [30.9, 149.0], [31.0, 150.0], [31.1, 152.0], [31.2, 152.0], [31.3, 153.0], [31.4, 155.0], [31.5, 156.0], [31.6, 157.0], [31.7, 157.0], [31.8, 158.0], [31.9, 159.0], [32.0, 160.0], [32.1, 161.0], [32.2, 162.0], [32.3, 162.0], [32.4, 164.0], [32.5, 165.0], [32.6, 165.0], [32.7, 166.0], [32.8, 166.0], [32.9, 167.0], [33.0, 168.0], [33.1, 168.0], [33.2, 169.0], [33.3, 170.0], [33.4, 171.0], [33.5, 172.0], [33.6, 173.0], [33.7, 176.0], [33.8, 176.0], [33.9, 177.0], [34.0, 179.0], [34.1, 180.0], [34.2, 181.0], [34.3, 182.0], [34.4, 182.0], [34.5, 184.0], [34.6, 186.0], [34.7, 187.0], [34.8, 188.0], [34.9, 189.0], [35.0, 191.0], [35.1, 192.0], [35.2, 194.0], [35.3, 195.0], [35.4, 196.0], [35.5, 199.0], [35.6, 200.0], [35.7, 202.0], [35.8, 204.0], [35.9, 205.0], [36.0, 206.0], [36.1, 207.0], [36.2, 212.0], [36.3, 213.0], [36.4, 214.0], [36.5, 215.0], [36.6, 217.0], [36.7, 219.0], [36.8, 220.0], [36.9, 221.0], [37.0, 224.0], [37.1, 224.0], [37.2, 226.0], [37.3, 228.0], [37.4, 229.0], [37.5, 231.0], [37.6, 232.0], [37.7, 233.0], [37.8, 235.0], [37.9, 236.0], [38.0, 237.0], [38.1, 238.0], [38.2, 240.0], [38.3, 242.0], [38.4, 243.0], [38.5, 245.0], [38.6, 246.0], [38.7, 248.0], [38.8, 251.0], [38.9, 252.0], [39.0, 252.0], [39.1, 254.0], [39.2, 256.0], [39.3, 260.0], [39.4, 260.0], [39.5, 261.0], [39.6, 262.0], [39.7, 263.0], [39.8, 265.0], [39.9, 269.0], [40.0, 271.0], [40.1, 273.0], [40.2, 274.0], [40.3, 276.0], [40.4, 278.0], [40.5, 279.0], [40.6, 280.0], [40.7, 282.0], [40.8, 285.0], [40.9, 287.0], [41.0, 289.0], [41.1, 290.0], [41.2, 291.0], [41.3, 293.0], [41.4, 295.0], [41.5, 296.0], [41.6, 300.0], [41.7, 303.0], [41.8, 305.0], [41.9, 306.0], [42.0, 307.0], [42.1, 310.0], [42.2, 310.0], [42.3, 311.0], [42.4, 314.0], [42.5, 317.0], [42.6, 319.0], [42.7, 321.0], [42.8, 323.0], [42.9, 327.0], [43.0, 328.0], [43.1, 332.0], [43.2, 334.0], [43.3, 335.0], [43.4, 336.0], [43.5, 339.0], [43.6, 341.0], [43.7, 344.0], [43.8, 347.0], [43.9, 349.0], [44.0, 350.0], [44.1, 352.0], [44.2, 354.0], [44.3, 354.0], [44.4, 358.0], [44.5, 361.0], [44.6, 361.0], [44.7, 363.0], [44.8, 364.0], [44.9, 366.0], [45.0, 366.0], [45.1, 368.0], [45.2, 369.0], [45.3, 371.0], [45.4, 373.0], [45.5, 375.0], [45.6, 377.0], [45.7, 382.0], [45.8, 383.0], [45.9, 384.0], [46.0, 386.0], [46.1, 389.0], [46.2, 391.0], [46.3, 393.0], [46.4, 394.0], [46.5, 396.0], [46.6, 396.0], [46.7, 399.0], [46.8, 402.0], [46.9, 405.0], [47.0, 406.0], [47.1, 407.0], [47.2, 410.0], [47.3, 411.0], [47.4, 413.0], [47.5, 413.0], [47.6, 414.0], [47.7, 416.0], [47.8, 419.0], [47.9, 420.0], [48.0, 423.0], [48.1, 424.0], [48.2, 426.0], [48.3, 428.0], [48.4, 431.0], [48.5, 434.0], [48.6, 435.0], [48.7, 435.0], [48.8, 437.0], [48.9, 439.0], [49.0, 441.0], [49.1, 443.0], [49.2, 446.0], [49.3, 449.0], [49.4, 452.0], [49.5, 455.0], [49.6, 457.0], [49.7, 459.0], [49.8, 460.0], [49.9, 462.0], [50.0, 467.0], [50.1, 468.0], [50.2, 469.0], [50.3, 470.0], [50.4, 473.0], [50.5, 475.0], [50.6, 476.0], [50.7, 479.0], [50.8, 481.0], [50.9, 482.0], [51.0, 483.0], [51.1, 486.0], [51.2, 487.0], [51.3, 488.0], [51.4, 490.0], [51.5, 491.0], [51.6, 492.0], [51.7, 493.0], [51.8, 497.0], [51.9, 500.0], [52.0, 502.0], [52.1, 504.0], [52.2, 506.0], [52.3, 511.0], [52.4, 514.0], [52.5, 517.0], [52.6, 520.0], [52.7, 524.0], [52.8, 527.0], [52.9, 529.0], [53.0, 531.0], [53.1, 532.0], [53.2, 535.0], [53.3, 537.0], [53.4, 539.0], [53.5, 540.0], [53.6, 545.0], [53.7, 547.0], [53.8, 548.0], [53.9, 552.0], [54.0, 554.0], [54.1, 555.0], [54.2, 557.0], [54.3, 564.0], [54.4, 568.0], [54.5, 569.0], [54.6, 571.0], [54.7, 573.0], [54.8, 577.0], [54.9, 579.0], [55.0, 581.0], [55.1, 582.0], [55.2, 585.0], [55.3, 586.0], [55.4, 587.0], [55.5, 587.0], [55.6, 592.0], [55.7, 599.0], [55.8, 602.0], [55.9, 603.0], [56.0, 606.0], [56.1, 611.0], [56.2, 614.0], [56.3, 618.0], [56.4, 620.0], [56.5, 623.0], [56.6, 626.0], [56.7, 628.0], [56.8, 630.0], [56.9, 634.0], [57.0, 636.0], [57.1, 638.0], [57.2, 643.0], [57.3, 648.0], [57.4, 654.0], [57.5, 655.0], [57.6, 657.0], [57.7, 660.0], [57.8, 662.0], [57.9, 664.0], [58.0, 665.0], [58.1, 667.0], [58.2, 670.0], [58.3, 670.0], [58.4, 672.0], [58.5, 675.0], [58.6, 676.0], [58.7, 680.0], [58.8, 681.0], [58.9, 683.0], [59.0, 686.0], [59.1, 691.0], [59.2, 694.0], [59.3, 695.0], [59.4, 700.0], [59.5, 702.0], [59.6, 703.0], [59.7, 706.0], [59.8, 708.0], [59.9, 710.0], [60.0, 715.0], [60.1, 719.0], [60.2, 722.0], [60.3, 727.0], [60.4, 729.0], [60.5, 731.0], [60.6, 733.0], [60.7, 738.0], [60.8, 742.0], [60.9, 744.0], [61.0, 744.0], [61.1, 751.0], [61.2, 753.0], [61.3, 756.0], [61.4, 760.0], [61.5, 761.0], [61.6, 762.0], [61.7, 763.0], [61.8, 767.0], [61.9, 768.0], [62.0, 771.0], [62.1, 774.0], [62.2, 776.0], [62.3, 778.0], [62.4, 779.0], [62.5, 781.0], [62.6, 782.0], [62.7, 784.0], [62.8, 787.0], [62.9, 789.0], [63.0, 792.0], [63.1, 793.0], [63.2, 794.0], [63.3, 794.0], [63.4, 796.0], [63.5, 798.0], [63.6, 802.0], [63.7, 803.0], [63.8, 806.0], [63.9, 808.0], [64.0, 810.0], [64.1, 811.0], [64.2, 812.0], [64.3, 815.0], [64.4, 817.0], [64.5, 819.0], [64.6, 823.0], [64.7, 824.0], [64.8, 826.0], [64.9, 829.0], [65.0, 830.0], [65.1, 831.0], [65.2, 834.0], [65.3, 836.0], [65.4, 838.0], [65.5, 843.0], [65.6, 846.0], [65.7, 848.0], [65.8, 849.0], [65.9, 850.0], [66.0, 852.0], [66.1, 853.0], [66.2, 856.0], [66.3, 859.0], [66.4, 862.0], [66.5, 866.0], [66.6, 869.0], [66.7, 871.0], [66.8, 873.0], [66.9, 876.0], [67.0, 879.0], [67.1, 881.0], [67.2, 886.0], [67.3, 887.0], [67.4, 889.0], [67.5, 891.0], [67.6, 893.0], [67.7, 894.0], [67.8, 896.0], [67.9, 898.0], [68.0, 899.0], [68.1, 903.0], [68.2, 906.0], [68.3, 908.0], [68.4, 910.0], [68.5, 913.0], [68.6, 915.0], [68.7, 917.0], [68.8, 919.0], [68.9, 921.0], [69.0, 923.0], [69.1, 925.0], [69.2, 928.0], [69.3, 930.0], [69.4, 934.0], [69.5, 936.0], [69.6, 939.0], [69.7, 941.0], [69.8, 943.0], [69.9, 945.0], [70.0, 947.0], [70.1, 950.0], [70.2, 951.0], [70.3, 953.0], [70.4, 954.0], [70.5, 955.0], [70.6, 956.0], [70.7, 959.0], [70.8, 961.0], [70.9, 962.0], [71.0, 963.0], [71.1, 966.0], [71.2, 969.0], [71.3, 971.0], [71.4, 973.0], [71.5, 976.0], [71.6, 981.0], [71.7, 982.0], [71.8, 984.0], [71.9, 985.0], [72.0, 987.0], [72.1, 989.0], [72.2, 989.0], [72.3, 991.0], [72.4, 994.0], [72.5, 995.0], [72.6, 998.0], [72.7, 1001.0], [72.8, 1002.0], [72.9, 1005.0], [73.0, 1007.0], [73.1, 1011.0], [73.2, 1014.0], [73.3, 1016.0], [73.4, 1019.0], [73.5, 1021.0], [73.6, 1022.0], [73.7, 1025.0], [73.8, 1027.0], [73.9, 1029.0], [74.0, 1033.0], [74.1, 1036.0], [74.2, 1037.0], [74.3, 1038.0], [74.4, 1041.0], [74.5, 1043.0], [74.6, 1045.0], [74.7, 1049.0], [74.8, 1050.0], [74.9, 1051.0], [75.0, 1053.0], [75.1, 1055.0], [75.2, 1056.0], [75.3, 1058.0], [75.4, 1061.0], [75.5, 1063.0], [75.6, 1066.0], [75.7, 1066.0], [75.8, 1068.0], [75.9, 1069.0], [76.0, 1072.0], [76.1, 1074.0], [76.2, 1074.0], [76.3, 1075.0], [76.4, 1077.0], [76.5, 1078.0], [76.6, 1080.0], [76.7, 1081.0], [76.8, 1085.0], [76.9, 1087.0], [77.0, 1089.0], [77.1, 1090.0], [77.2, 1092.0], [77.3, 1097.0], [77.4, 1101.0], [77.5, 1103.0], [77.6, 1104.0], [77.7, 1107.0], [77.8, 1109.0], [77.9, 1111.0], [78.0, 1113.0], [78.1, 1114.0], [78.2, 1117.0], [78.3, 1119.0], [78.4, 1120.0], [78.5, 1121.0], [78.6, 1121.0], [78.7, 1122.0], [78.8, 1124.0], [78.9, 1127.0], [79.0, 1130.0], [79.1, 1132.0], [79.2, 1134.0], [79.3, 1135.0], [79.4, 1136.0], [79.5, 1139.0], [79.6, 1141.0], [79.7, 1143.0], [79.8, 1145.0], [79.9, 1148.0], [80.0, 1152.0], [80.1, 1155.0], [80.2, 1156.0], [80.3, 1157.0], [80.4, 1158.0], [80.5, 1162.0], [80.6, 1163.0], [80.7, 1164.0], [80.8, 1165.0], [80.9, 1170.0], [81.0, 1175.0], [81.1, 1179.0], [81.2, 1181.0], [81.3, 1183.0], [81.4, 1186.0], [81.5, 1187.0], [81.6, 1188.0], [81.7, 1192.0], [81.8, 1197.0], [81.9, 1198.0], [82.0, 1200.0], [82.1, 1202.0], [82.2, 1203.0], [82.3, 1204.0], [82.4, 1206.0], [82.5, 1208.0], [82.6, 1209.0], [82.7, 1211.0], [82.8, 1214.0], [82.9, 1216.0], [83.0, 1217.0], [83.1, 1220.0], [83.2, 1222.0], [83.3, 1224.0], [83.4, 1225.0], [83.5, 1225.0], [83.6, 1229.0], [83.7, 1231.0], [83.8, 1232.0], [83.9, 1234.0], [84.0, 1236.0], [84.1, 1237.0], [84.2, 1244.0], [84.3, 1246.0], [84.4, 1249.0], [84.5, 1252.0], [84.6, 1255.0], [84.7, 1258.0], [84.8, 1260.0], [84.9, 1262.0], [85.0, 1266.0], [85.1, 1269.0], [85.2, 1270.0], [85.3, 1272.0], [85.4, 1277.0], [85.5, 1280.0], [85.6, 1283.0], [85.7, 1284.0], [85.8, 1286.0], [85.9, 1288.0], [86.0, 1290.0], [86.1, 1293.0], [86.2, 1296.0], [86.3, 1304.0], [86.4, 1306.0], [86.5, 1311.0], [86.6, 1316.0], [86.7, 1316.0], [86.8, 1321.0], [86.9, 1322.0], [87.0, 1325.0], [87.1, 1331.0], [87.2, 1334.0], [87.3, 1335.0], [87.4, 1337.0], [87.5, 1339.0], [87.6, 1342.0], [87.7, 1346.0], [87.8, 1349.0], [87.9, 1352.0], [88.0, 1353.0], [88.1, 1354.0], [88.2, 1357.0], [88.3, 1358.0], [88.4, 1361.0], [88.5, 1365.0], [88.6, 1366.0], [88.7, 1369.0], [88.8, 1372.0], [88.9, 1375.0], [89.0, 1378.0], [89.1, 1380.0], [89.2, 1383.0], [89.3, 1387.0], [89.4, 1388.0], [89.5, 1390.0], [89.6, 1395.0], [89.7, 1397.0], [89.8, 1399.0], [89.9, 1400.0], [90.0, 1402.0], [90.1, 1406.0], [90.2, 1409.0], [90.3, 1412.0], [90.4, 1414.0], [90.5, 1415.0], [90.6, 1420.0], [90.7, 1431.0], [90.8, 1435.0], [90.9, 1437.0], [91.0, 1438.0], [91.1, 1442.0], [91.2, 1443.0], [91.3, 1446.0], [91.4, 1449.0], [91.5, 1450.0], [91.6, 1453.0], [91.7, 1457.0], [91.8, 1460.0], [91.9, 1463.0], [92.0, 1472.0], [92.1, 1473.0], [92.2, 1475.0], [92.3, 1477.0], [92.4, 1479.0], [92.5, 1484.0], [92.6, 1487.0], [92.7, 1490.0], [92.8, 1494.0], [92.9, 1501.0], [93.0, 1504.0], [93.1, 1507.0], [93.2, 1511.0], [93.3, 1513.0], [93.4, 1516.0], [93.5, 1521.0], [93.6, 1522.0], [93.7, 1524.0], [93.8, 1526.0], [93.9, 1532.0], [94.0, 1534.0], [94.1, 1538.0], [94.2, 1541.0], [94.3, 1545.0], [94.4, 1549.0], [94.5, 1552.0], [94.6, 1557.0], [94.7, 1561.0], [94.8, 1568.0], [94.9, 1571.0], [95.0, 1575.0], [95.1, 1579.0], [95.2, 1584.0], [95.3, 1586.0], [95.4, 1588.0], [95.5, 1598.0], [95.6, 1602.0], [95.7, 1605.0], [95.8, 1614.0], [95.9, 1615.0], [96.0, 1616.0], [96.1, 1618.0], [96.2, 1622.0], [96.3, 1628.0], [96.4, 1630.0], [96.5, 1638.0], [96.6, 1643.0], [96.7, 1646.0], [96.8, 1654.0], [96.9, 1662.0], [97.0, 1667.0], [97.1, 1676.0], [97.2, 1680.0], [97.3, 1686.0], [97.4, 1694.0], [97.5, 1699.0], [97.6, 1705.0], [97.7, 1711.0], [97.8, 1715.0], [97.9, 1716.0], [98.0, 1725.0], [98.1, 1728.0], [98.2, 1735.0], [98.3, 1742.0], [98.4, 1751.0], [98.5, 1760.0], [98.6, 1769.0], [98.7, 1774.0], [98.8, 1782.0], [98.9, 1789.0], [99.0, 1798.0], [99.1, 1815.0], [99.2, 1827.0], [99.3, 1867.0], [99.4, 1885.0], [99.5, 1896.0], [99.6, 1921.0], [99.7, 1963.0], [99.8, 2059.0], [99.9, 2129.0], [100.0, 2301.0]], "isOverall": false, "label": "Get PROB list", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 957.0, "series": [{"data": [[0.0, 897.0], [300.0, 231.0], [600.0, 24.0], [700.0, 14.0], [100.0, 255.0], [200.0, 240.0], [400.0, 124.0], [800.0, 5.0], [500.0, 65.0], [1000.0, 1.0]], "isOverall": false, "label": "Post PROB UNREMOVE", "isController": false}, {"data": [[0.0, 608.0], [100.0, 157.0], [200.0, 105.0], [300.0, 84.0], [400.0, 55.0], [500.0, 45.0], [600.0, 35.0], [700.0, 36.0], [800.0, 18.0], [900.0, 9.0], [1000.0, 5.0], [1100.0, 5.0], [1200.0, 8.0], [1300.0, 6.0], [1400.0, 3.0], [1500.0, 3.0], [1600.0, 2.0], [1800.0, 2.0], [1900.0, 4.0], [2000.0, 1.0], [2100.0, 4.0], [2200.0, 2.0], [2300.0, 1.0], [2500.0, 1.0], [2600.0, 2.0], [2800.0, 2.0], [2700.0, 3.0], [2900.0, 1.0], [3000.0, 2.0], [3100.0, 2.0], [3200.0, 1.0], [3300.0, 3.0], [3400.0, 3.0], [3500.0, 7.0], [3600.0, 7.0], [3700.0, 4.0], [3800.0, 9.0], [3900.0, 12.0], [4000.0, 23.0], [4100.0, 15.0], [4200.0, 18.0], [4300.0, 23.0], [4600.0, 16.0], [4400.0, 23.0], [4500.0, 21.0], [4800.0, 7.0], [4700.0, 9.0], [4900.0, 5.0], [5000.0, 4.0], [5100.0, 2.0], [5200.0, 2.0], [5400.0, 4.0], [5500.0, 2.0], [5600.0, 3.0], [5700.0, 3.0], [5800.0, 2.0], [6100.0, 3.0], [6000.0, 1.0], [6200.0, 3.0], [6300.0, 1.0], [6400.0, 1.0], [6700.0, 3.0], [6800.0, 2.0], [6900.0, 1.0], [7100.0, 1.0], [7400.0, 2.0], [7300.0, 1.0], [7600.0, 2.0], [7500.0, 2.0], [7900.0, 2.0], [7700.0, 1.0], [7800.0, 2.0], [8000.0, 1.0], [8100.0, 1.0], [8200.0, 1.0], [8300.0, 1.0], [8600.0, 3.0], [8500.0, 1.0], [8700.0, 2.0], [8800.0, 1.0], [8900.0, 3.0], [9100.0, 2.0], [9000.0, 3.0], [9200.0, 4.0], [9400.0, 1.0], [9300.0, 4.0], [9600.0, 4.0], [9700.0, 6.0], [9500.0, 6.0], [10000.0, 6.0], [9800.0, 3.0], [9900.0, 5.0], [10200.0, 9.0], [10100.0, 9.0], [10300.0, 13.0], [10400.0, 12.0], [10500.0, 11.0], [10600.0, 11.0], [10700.0, 9.0], [10800.0, 6.0], [11000.0, 4.0], [10900.0, 8.0], [11100.0, 11.0], [11200.0, 5.0], [11400.0, 4.0], [11300.0, 9.0], [11600.0, 5.0], [11500.0, 6.0], [11700.0, 4.0], [11800.0, 2.0], [12000.0, 2.0], [11900.0, 2.0], [12100.0, 1.0], [12200.0, 1.0], [12300.0, 1.0], [12400.0, 3.0], [12700.0, 2.0], [12600.0, 1.0], [12500.0, 1.0], [12800.0, 2.0], [13000.0, 3.0], [13100.0, 1.0], [13300.0, 3.0], [13700.0, 4.0], [13800.0, 1.0], [14000.0, 4.0], [13900.0, 5.0], [14200.0, 3.0], [14300.0, 2.0], [14500.0, 3.0], [14600.0, 2.0], [14700.0, 4.0], [14800.0, 1.0], [14900.0, 1.0], [15000.0, 5.0], [15100.0, 5.0], [15300.0, 5.0], [15200.0, 2.0], [15600.0, 3.0], [15700.0, 1.0], [15500.0, 2.0], [15400.0, 1.0], [16000.0, 1.0], [16100.0, 2.0], [16200.0, 3.0], [15900.0, 2.0], [16900.0, 2.0], [16600.0, 3.0], [17000.0, 5.0], [16700.0, 1.0], [17100.0, 1.0], [17200.0, 6.0], [17300.0, 2.0], [17400.0, 1.0], [16800.0, 1.0], [17500.0, 6.0], [17600.0, 4.0], [18200.0, 7.0], [17800.0, 3.0], [18300.0, 12.0], [18100.0, 17.0], [18400.0, 5.0], [18000.0, 8.0], [17900.0, 9.0], [17700.0, 5.0], [18500.0, 10.0], [18600.0, 6.0], [18700.0, 3.0], [19000.0, 4.0], [18800.0, 6.0], [18900.0, 3.0], [19100.0, 1.0], [19300.0, 2.0], [19200.0, 1.0], [19700.0, 1.0], [19600.0, 4.0], [20000.0, 5.0], [20400.0, 8.0], [20300.0, 3.0], [20100.0, 3.0], [19500.0, 5.0], [20200.0, 3.0], [19900.0, 1.0], [20500.0, 4.0], [20800.0, 4.0], [20900.0, 4.0], [21100.0, 1.0], [20600.0, 7.0], [20700.0, 3.0]], "isOverall": false, "label": "Post PROB", "isController": false}, {"data": [[0.0, 685.0], [600.0, 109.0], [700.0, 88.0], [200.0, 98.0], [800.0, 85.0], [900.0, 82.0], [1000.0, 91.0], [1100.0, 70.0], [300.0, 74.0], [1200.0, 56.0], [1300.0, 54.0], [1400.0, 22.0], [1500.0, 19.0], [100.0, 162.0], [400.0, 79.0], [1600.0, 4.0], [1700.0, 6.0], [500.0, 76.0]], "isOverall": false, "label": "Delete PROB", "isController": false}, {"data": [[0.0, 660.0], [600.0, 147.0], [700.0, 106.0], [200.0, 117.0], [800.0, 110.0], [900.0, 62.0], [1000.0, 34.0], [1100.0, 21.0], [300.0, 117.0], [1200.0, 12.0], [1300.0, 7.0], [1400.0, 3.0], [1500.0, 1.0], [100.0, 154.0], [400.0, 135.0], [1600.0, 1.0], [500.0, 176.0]], "isOverall": false, "label": "Get PROB ID", "isController": false}, {"data": [[0.0, 957.0], [2100.0, 5.0], [2300.0, 1.0], [600.0, 139.0], [700.0, 160.0], [200.0, 229.0], [800.0, 169.0], [900.0, 177.0], [1000.0, 180.0], [1100.0, 176.0], [300.0, 196.0], [1200.0, 163.0], [1300.0, 138.0], [1400.0, 114.0], [1500.0, 101.0], [100.0, 400.0], [400.0, 196.0], [1600.0, 76.0], [1700.0, 57.0], [1800.0, 19.0], [1900.0, 9.0], [500.0, 147.0], [2000.0, 4.0]], "isOverall": false, "label": "Get PROB list", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 21100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1061.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7021.0, "series": [{"data": [[1.0, 3248.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[0.0, 7021.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 1061.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 13.565055762081787, "minX": 1.5272799E12, "maxY": 81.61133200795237, "series": [{"data": [[1.52728008E12, 28.782059000602043], [1.52728026E12, 81.61133200795237], [1.52727996E12, 20.0], [1.52728014E12, 48.786628733997155], [1.52728002E12, 20.0], [1.5272802E12, 68.891846921797], [1.5272799E12, 13.565055762081787]], "isOverall": false, "label": "jp@gc Ultima Thread - Patient Problem", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52728026E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.0, "maxY": 20530.8, "series": [{"data": [[3.0, 4.0], [4.0, 4.0], [5.0, 3.5], [6.0, 3.5], [7.0, 3.25], [8.0, 4.5], [9.0, 3.5], [10.0, 4.0], [11.0, 15.666666666666668], [12.0, 3.4], [13.0, 4.166666666666667], [14.0, 2.666666666666667], [15.0, 3.6666666666666665], [16.0, 3.2222222222222223], [17.0, 7.5], [18.0, 4.444444444444445], [19.0, 3.8], [20.0, 65.5047438330171], [21.0, 2.0], [22.0, 274.85714285714283], [24.0, 295.5], [25.0, 91.85714285714286], [26.0, 333.0], [28.0, 147.0], [29.0, 200.42857142857142], [30.0, 619.0], [31.0, 585.0], [32.0, 333.0], [33.0, 137.75], [34.0, 292.125], [37.0, 223.25], [38.0, 288.6], [39.0, 541.5], [40.0, 293.35204081632634], [41.0, 200.0], [42.0, 483.0], [43.0, 367.0], [44.0, 364.0], [45.0, 284.0], [46.0, 436.25], [47.0, 424.0], [48.0, 326.0], [49.0, 449.5], [50.0, 470.5], [51.0, 372.0], [52.0, 253.66666666666666], [53.0, 362.0], [54.0, 438.2], [55.0, 308.0], [56.0, 507.5], [57.0, 402.0], [58.0, 466.5], [59.0, 478.5], [60.0, 312.11309523809524], [62.0, 497.0], [64.0, 507.0], [65.0, 348.0], [66.0, 423.6], [67.0, 298.0], [68.0, 700.0], [69.0, 633.0], [70.0, 333.0], [71.0, 727.5], [72.0, 595.6666666666666], [73.0, 478.0], [74.0, 640.5], [75.0, 638.5], [76.0, 536.6666666666666], [77.0, 611.3333333333334], [78.0, 731.0], [79.0, 522.0], [80.0, 356.5000000000001], [81.0, 477.0], [82.0, 490.6], [83.0, 601.0], [84.0, 557.8333333333333], [85.0, 587.3333333333333], [86.0, 425.75], [87.0, 619.6666666666666], [88.0, 257.0], [89.0, 425.25], [90.0, 417.99999999999994]], "isOverall": false, "label": "Post PROB UNREMOVE", "isController": false}, {"data": [[35.01400862068966, 172.96012931034502]], "isOverall": false, "label": "Post PROB UNREMOVE-Aggregated", "isController": false}, {"data": [[2.0, 94.5], [4.0, 15.333333333333334], [5.0, 14.5], [6.0, 15.0], [7.0, 14.75], [8.0, 15.5], [9.0, 13.75], [10.0, 14.666666666666666], [11.0, 12.25], [12.0, 13.285714285714286], [13.0, 13.4], [14.0, 13.714285714285715], [15.0, 13.5], [16.0, 15.4], [17.0, 18.2], [18.0, 13.166666666666668], [19.0, 13.799999999999999], [20.0, 217.90362595419853], [21.0, 440.7], [23.0, 823.0], [24.0, 1521.0], [25.0, 309.24999999999994], [28.0, 516.0833333333333], [29.0, 394.0], [31.0, 1620.0], [32.0, 1821.6666666666667], [33.0, 1201.75], [34.0, 1311.25], [35.0, 2082.0], [36.0, 2713.5], [37.0, 2660.4], [38.0, 2168.0], [39.0, 2079.5], [40.0, 4214.306122448981], [41.0, 3951.6666666666665], [42.0, 4251.0], [43.0, 4897.0], [44.0, 5035.666666666667], [45.0, 5114.0], [46.0, 4829.5], [47.0, 5294.0], [48.0, 5611.5], [49.0, 5448.333333333333], [50.0, 4256.333333333333], [51.0, 3704.1428571428573], [52.0, 4778.166666666667], [53.0, 4804.2], [54.0, 6076.142857142857], [55.0, 6711.5], [56.0, 7730.6], [57.0, 8340.8], [58.0, 8962.857142857143], [59.0, 9661.2], [60.0, 10310.13372093023], [61.0, 13194.6], [62.0, 13041.714285714286], [63.0, 13703.0], [64.0, 14732.166666666668], [65.0, 14585.666666666666], [66.0, 14086.0], [67.0, 15556.6], [68.0, 16463.2], [69.0, 17007.8], [70.0, 14976.333333333334], [71.0, 11956.5], [72.0, 12374.0], [73.0, 12612.5], [74.0, 12458.0], [75.0, 12876.333333333334], [76.0, 12820.5], [77.0, 16770.5], [78.0, 13240.5], [79.0, 14065.5], [80.0, 17011.099337748357], [81.0, 18991.6], [82.0, 18165.0], [83.0, 18783.25], [84.0, 19340.75], [85.0, 19292.8], [86.0, 19267.0], [87.0, 20097.666666666668], [88.0, 20382.166666666668], [89.0, 20022.0], [90.0, 20530.8]], "isOverall": false, "label": "Post PROB", "isController": false}, {"data": [[35.67285861713109, 4302.9097007223945]], "isOverall": false, "label": "Post PROB-Aggregated", "isController": false}, {"data": [[3.0, 36.0], [4.0, 10.0], [5.0, 9.666666666666666], [6.0, 8.0], [7.0, 7.666666666666667], [8.0, 10.0], [9.0, 8.0], [10.0, 7.333333333333333], [11.0, 9.0], [12.0, 7.25], [13.0, 11.4], [14.0, 11.285714285714286], [15.0, 8.166666666666666], [16.0, 10.0], [17.0, 8.0], [18.0, 6.125], [19.0, 9.714285714285714], [20.0, 156.7742857142858], [21.0, 86.75], [23.0, 693.0], [24.0, 445.75], [25.0, 128.66666666666666], [27.0, 1521.0], [28.0, 180.625], [29.0, 445.5], [30.0, 888.3333333333334], [31.0, 1334.0], [32.0, 793.0], [33.0, 577.8888888888888], [34.0, 671.0], [36.0, 1187.3333333333333], [37.0, 643.6], [38.0, 519.6666666666666], [39.0, 1074.0], [40.0, 742.0558375634519], [41.0, 585.5], [42.0, 1118.5], [43.0, 1185.0], [44.0, 682.0], [45.0, 995.6], [47.0, 1211.6666666666667], [48.0, 1155.6666666666667], [49.0, 1002.0], [50.0, 1216.6666666666667], [51.0, 1182.75], [52.0, 798.0], [53.0, 1098.5], [54.0, 1090.3333333333333], [55.0, 972.75], [56.0, 1159.0], [57.0, 1277.0], [58.0, 1316.5], [59.0, 1117.0], [60.0, 962.3253012048192], [61.0, 845.25], [62.0, 1277.5], [63.0, 960.0], [64.0, 1523.0], [65.0, 1467.6666666666667], [66.0, 1387.5], [67.0, 961.3333333333334], [68.0, 1243.0], [69.0, 1490.6666666666667], [70.0, 1400.0], [71.0, 1416.0], [72.0, 1469.0], [73.0, 1339.0], [74.0, 1657.0], [75.0, 1137.0], [76.0, 1183.0], [77.0, 1199.0], [78.0, 1509.6666666666667], [79.0, 1267.3333333333333], [80.0, 1086.154362416108], [81.0, 1276.1666666666667], [82.0, 1103.75], [83.0, 1498.3333333333335], [84.0, 1318.3333333333333], [85.0, 1339.5], [86.0, 842.2], [87.0, 1254.0], [88.0, 1063.142857142857], [89.0, 1104.3333333333333], [90.0, 1144.7241379310344]], "isOverall": false, "label": "Delete PROB", "isController": false}, {"data": [[35.01129032258068, 458.8698924731186]], "isOverall": false, "label": "Delete PROB-Aggregated", "isController": false}, {"data": [[2.0, 14.0], [3.0, 6.0], [4.0, 7.0], [5.0, 8.5], [6.0, 5.5], [7.0, 9.0], [8.0, 5.333333333333333], [9.0, 5.5], [10.0, 9.75], [11.0, 14.0], [12.0, 6.0], [13.0, 6.7142857142857135], [14.0, 5.833333333333334], [15.0, 12.25], [16.0, 6.2], [17.0, 6.142857142857142], [18.0, 6.0], [19.0, 7.444444444444445], [20.0, 159.18260038240925], [21.0, 506.44444444444434], [23.0, 678.0], [24.0, 641.25], [25.0, 55.0], [27.0, 1232.0], [28.0, 678.3333333333333], [29.0, 185.0], [31.0, 1060.0], [32.0, 699.2222222222222], [33.0, 513.0], [34.0, 514.0], [35.0, 820.3333333333334], [36.0, 1039.0], [37.0, 549.0], [38.0, 438.0], [39.0, 687.6666666666666], [40.0, 553.3333333333333], [41.0, 492.5], [42.0, 896.0], [43.0, 709.0], [44.0, 510.6666666666667], [45.0, 744.5], [46.0, 883.3333333333334], [47.0, 609.0], [48.0, 750.3333333333334], [49.0, 848.25], [50.0, 879.0], [51.0, 776.3333333333334], [52.0, 589.3333333333334], [53.0, 659.0], [54.0, 722.0], [55.0, 726.0], [56.0, 755.5], [57.0, 846.0], [58.0, 629.0], [59.0, 847.5], [60.0, 664.1309523809525], [61.0, 665.0], [62.0, 973.0], [63.0, 854.6666666666666], [64.0, 1010.0], [65.0, 1047.0], [66.0, 921.6666666666666], [67.0, 744.0], [68.0, 1014.0], [69.0, 986.6666666666666], [70.0, 1014.0], [71.0, 1073.0], [72.0, 1539.0], [73.0, 944.5], [74.0, 1249.3333333333333], [75.0, 1091.0], [76.0, 796.0], [77.0, 986.75], [78.0, 965.0], [79.0, 1002.3333333333334], [80.0, 785.5369127516778], [81.0, 1017.5], [82.0, 756.1428571428571], [83.0, 976.3333333333334], [84.0, 746.8], [85.0, 1037.0], [86.0, 845.75], [87.0, 1199.75], [88.0, 722.75], [89.0, 851.25], [90.0, 882.6129032258062]], "isOverall": false, "label": "Get PROB ID", "isController": false}, {"data": [[34.93988191089639, 366.6489533011271]], "isOverall": false, "label": "Get PROB ID-Aggregated", "isController": false}, {"data": [[2.0, 8.0], [3.0, 6.0], [4.0, 6.6], [5.0, 9.666666666666666], [6.0, 7.0], [7.0, 8.5], [8.0, 8.777777777777779], [9.0, 7.125], [10.0, 9.750000000000002], [11.0, 13.555555555555555], [12.0, 9.615384615384617], [13.0, 10.333333333333334], [14.0, 11.307692307692307], [15.0, 22.8], [16.0, 11.833333333333332], [17.0, 18.562499999999996], [18.0, 11.928571428571429], [19.0, 11.61111111111111], [20.0, 252.7917261055633], [21.0, 681.625], [22.0, 454.0], [23.0, 861.5000000000001], [24.0, 971.1666666666666], [25.0, 225.33333333333334], [26.0, 833.0], [27.0, 1488.4545454545455], [28.0, 1259.5], [29.0, 356.0], [30.0, 1070.857142857143], [31.0, 1470.6666666666667], [32.0, 1311.6249999999998], [33.0, 743.3333333333334], [34.0, 690.8888888888889], [35.0, 915.75], [36.0, 1402.875], [37.0, 970.5999999999998], [38.0, 656.0], [39.0, 1049.0], [40.0, 907.8841309823683], [41.0, 556.6666666666666], [42.0, 1069.1666666666667], [43.0, 1404.8], [44.0, 963.6666666666666], [45.0, 1047.6666666666667], [46.0, 1244.6666666666665], [47.0, 1272.857142857143], [48.0, 1192.5], [49.0, 1378.125], [50.0, 1224.0], [51.0, 1290.0], [52.0, 950.2], [53.0, 1137.3333333333335], [54.0, 1235.5714285714287], [55.0, 1178.2], [56.0, 1275.6666666666667], [57.0, 1292.6666666666665], [58.0, 1496.0], [59.0, 1399.8571428571427], [60.0, 1097.2142857142856], [61.0, 1033.0], [62.0, 1348.125], [63.0, 1597.0], [64.0, 1400.9999999999998], [65.0, 1599.75], [66.0, 1495.6666666666665], [67.0, 1283.5], [68.0, 1523.0], [69.0, 1512.5555555555557], [70.0, 1639.3333333333335], [71.0, 1761.5], [72.0, 1734.4], [73.0, 1751.6666666666667], [74.0, 1737.4], [75.0, 1583.8333333333333], [76.0, 1423.25], [77.0, 1545.25], [78.0, 1537.0], [79.0, 1619.3333333333335], [80.0, 1307.9537953795386], [81.0, 1438.0999999999997], [82.0, 1247.625], [83.0, 1637.6000000000001], [84.0, 1466.0], [85.0, 1556.75], [86.0, 1168.6666666666665], [87.0, 1602.7142857142858], [88.0, 1288.9166666666667], [89.0, 1586.4285714285713], [90.0, 1504.9], [1.0, 104.0]], "isOverall": false, "label": "Get PROB list", "isController": false}, {"data": [[35.30396013637563, 607.2310516653549]], "isOverall": false, "label": "Get PROB list-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 90.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2875.016666666667, "minX": 1.5272799E12, "maxY": 1.1362997966666667E7, "series": [{"data": [[1.52728008E12, 1.0943837233333332E7], [1.52728026E12, 9705004.85], [1.52727996E12, 7009276.266666667], [1.52728014E12, 1.1362997966666667E7], [1.52728002E12, 1.0125334166666666E7], [1.5272802E12, 1.1274778066666666E7], [1.5272799E12, 150262.63333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.52728008E12, 8729.4], [1.52728026E12, 5963.083333333333], [1.52727996E12, 17609.25], [1.52728014E12, 7379.9], [1.52728002E12, 11437.283333333333], [1.5272802E12, 6246.883333333333], [1.5272799E12, 2875.016666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52728026E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 4.280487804878048, "minX": 1.5272799E12, "maxY": 16736.52488687782, "series": [{"data": [[1.52728008E12, 217.33576642335768], [1.52728026E12, 396.2026143790849], [1.52727996E12, 24.927797833935], [1.52728014E12, 312.3100436681226], [1.52728002E12, 104.73972602739728], [1.5272802E12, 386.60804020100505], [1.5272799E12, 4.280487804878048]], "isOverall": false, "label": "Post PROB UNREMOVE", "isController": false}, {"data": [[1.52728008E12, 1780.579710144927], [1.52728026E12, 16736.52488687782], [1.52727996E12, 108.43189964157703], [1.52728014E12, 6469.317596566528], [1.52728002E12, 312.0801104972375], [1.5272802E12, 12713.680412371137], [1.5272799E12, 16.425531914893615]], "isOverall": false, "label": "Post PROB", "isController": false}, {"data": [[1.52728008E12, 494.37499999999983], [1.52728026E12, 1117.8129032258064], [1.52727996E12, 76.69604316546761], [1.52728014E12, 879.4608695652175], [1.52728002E12, 224.83055555555555], [1.5272802E12, 1100.9949748743722], [1.5272799E12, 9.215909090909088]], "isOverall": false, "label": "Delete PROB", "isController": false}, {"data": [[1.52728008E12, 470.1868131868133], [1.52728026E12, 831.3419354838712], [1.52727996E12, 61.42218246869407], [1.52728014E12, 625.0905172413793], [1.52728002E12, 254.21606648199463], [1.5272802E12, 789.7384615384614], [1.5272799E12, 8.19318181818182]], "isOverall": false, "label": "Get PROB ID", "isController": false}, {"data": [[1.52728008E12, 758.4734982332154], [1.52728026E12, 1398.7857142857135], [1.52727996E12, 111.2468694096601], [1.52728014E12, 1037.7489626556014], [1.52728002E12, 374.8411602209943], [1.5272802E12, 1294.7927710843387], [1.5272799E12, 12.763440860215056]], "isOverall": false, "label": "Get PROB list", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.52728026E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 4.231707317073169, "minX": 1.5272799E12, "maxY": 16736.52488687782, "series": [{"data": [[1.52728008E12, 217.32481751824818], [1.52728026E12, 396.1960784313726], [1.52727996E12, 24.907942238267154], [1.52728014E12, 312.3056768558951], [1.52728002E12, 104.73150684931502], [1.5272802E12, 386.60804020100505], [1.5272799E12, 4.231707317073169]], "isOverall": false, "label": "Post PROB UNREMOVE", "isController": false}, {"data": [[1.52728008E12, 1780.5760869565208], [1.52728026E12, 16736.52488687782], [1.52727996E12, 108.42293906810035], [1.52728014E12, 6469.317596566528], [1.52728002E12, 312.0801104972375], [1.5272802E12, 12713.664948453608], [1.5272799E12, 16.36170212765958]], "isOverall": false, "label": "Post PROB", "isController": false}, {"data": [[1.52728008E12, 494.37132352941194], [1.52728026E12, 1117.8064516129036], [1.52727996E12, 76.6834532374101], [1.52728014E12, 879.4521739130433], [1.52728002E12, 224.83055555555555], [1.5272802E12, 1100.9949748743722], [1.5272799E12, 9.193181818181817]], "isOverall": false, "label": "Delete PROB", "isController": false}, {"data": [[1.52728008E12, 470.1831501831503], [1.52728026E12, 831.3354838709678], [1.52727996E12, 61.418604651162745], [1.52728014E12, 625.0862068965519], [1.52728002E12, 254.21052631578948], [1.5272802E12, 789.7384615384614], [1.5272799E12, 8.19318181818182]], "isOverall": false, "label": "Get PROB ID", "isController": false}, {"data": [[1.52728008E12, 655.9116607773852], [1.52728026E12, 1118.2546583850947], [1.52727996E12, 105.29427549194989], [1.52728014E12, 869.9937759336098], [1.52728002E12, 338.16436464088366], [1.5272802E12, 1063.3132530120492], [1.5272799E12, 12.688172043010752]], "isOverall": false, "label": "Get PROB list", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.52728026E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.5272799E12, "maxY": 0.3548387096774191, "series": [{"data": [[1.52728008E12, 0.10948905109489049], [1.52728026E12, 0.04575163398692811], [1.52727996E12, 0.054151624548736434], [1.52728014E12, 0.09606986899563316], [1.52728002E12, 0.10410958904109585], [1.5272802E12, 0.030150753768844248], [1.5272799E12, 0.0853658536585366]], "isOverall": false, "label": "Post PROB UNREMOVE", "isController": false}, {"data": [[1.52728008E12, 0.13043478260869568], [1.52728026E12, 0.20814479638009048], [1.52727996E12, 0.08064516129032263], [1.52728014E12, 0.20600858369098715], [1.52728002E12, 0.10220994475138116], [1.5272802E12, 0.1855670103092783], [1.5272799E12, 0.07446808510638299]], "isOverall": false, "label": "Post PROB", "isController": false}, {"data": [[1.52728008E12, 0.10661764705882361], [1.52728026E12, 0.2516129032258064], [1.52727996E12, 0.0953237410071942], [1.52728014E12, 0.26521739130434774], [1.52728002E12, 0.049999999999999996], [1.5272802E12, 0.31658291457286436], [1.5272799E12, 0.034090909090909095]], "isOverall": false, "label": "Delete PROB", "isController": false}, {"data": [[1.52728008E12, 0.07326007326007326], [1.52728026E12, 0.07741935483870971], [1.52727996E12, 0.08050089445438287], [1.52728014E12, 0.0], [1.52728002E12, 0.11634349030470913], [1.5272802E12, 0.020512820512820513], [1.5272799E12, 0.0568181818181818]], "isOverall": false, "label": "Get PROB ID", "isController": false}, {"data": [[1.52728008E12, 0.11484098939929334], [1.52728026E12, 0.30434782608695654], [1.52727996E12, 0.07513416815742392], [1.52728014E12, 0.1991701244813277], [1.52728002E12, 0.08563535911602226], [1.5272802E12, 0.21204819277108433], [1.5272799E12, 0.3548387096774191]], "isOverall": false, "label": "Get PROB list", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.52728026E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.5272799E12, "maxY": 21139.0, "series": [{"data": [[1.52728008E12, 4889.0], [1.52728026E12, 21139.0], [1.52727996E12, 729.0], [1.52728014E12, 10844.0], [1.52728002E12, 1327.0], [1.5272802E12, 18368.0], [1.5272799E12, 164.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.52728008E12, 2.0], [1.52728026E12, 47.0], [1.52727996E12, 1.0], [1.52728014E12, 46.0], [1.52728002E12, 2.0], [1.5272802E12, 85.0], [1.5272799E12, 2.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.52728008E12, 671.0], [1.52728026E12, 1445.8999999999996], [1.52727996E12, 197.19999999999982], [1.52728014E12, 984.0], [1.52728002E12, 430.0], [1.5272802E12, 1232.5], [1.5272799E12, 17.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.52728008E12, 3540.7699999999986], [1.52728026E12, 18227.900000000005], [1.52727996E12, 486.0], [1.52728014E12, 6772.42000000002], [1.52728002E12, 812.8799999999992], [1.5272802E12, 11514.0], [1.5272799E12, 49.610000000000014]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.52728008E12, 908.0], [1.52728026E12, 4550.799999999996], [1.52727996E12, 305.7999999999997], [1.52728014E12, 1355.550000000001], [1.52728002E12, 554.1999999999998], [1.5272802E12, 2990.25], [1.5272799E12, 22.049999999999955]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52728026E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 9.0, "minX": 8.0, "maxY": 1254.0, "series": [{"data": [[8.0, 9.0], [16.0, 1254.0], [36.0, 219.5], [20.0, 1123.5], [23.0, 884.5], [55.0, 38.0], [27.0, 539.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 55.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 9.0, "minX": 8.0, "maxY": 1095.0, "series": [{"data": [[8.0, 9.0], [16.0, 1095.0], [36.0, 207.5], [20.0, 993.5], [23.0, 798.0], [55.0, 38.0], [27.0, 513.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 55.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 9.0, "minX": 1.5272799E12, "maxY": 55.766666666666666, "series": [{"data": [[1.52728008E12, 28.016666666666666], [1.52728026E12, 15.483333333333333], [1.52727996E12, 55.766666666666666], [1.52728014E12, 23.85], [1.52728002E12, 36.31666666666667], [1.5272802E12, 20.4], [1.5272799E12, 9.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52728026E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 8.966666666666667, "minX": 1.5272799E12, "maxY": 55.75, "series": [{"data": [[1.52728008E12, 27.683333333333334], [1.52728026E12, 16.766666666666666], [1.52727996E12, 55.75], [1.52728014E12, 23.433333333333334], [1.52728002E12, 36.2], [1.5272802E12, 20.033333333333335], [1.5272799E12, 8.966666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52728026E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.3666666666666667, "minX": 1.5272799E12, "maxY": 18.633333333333333, "series": [{"data": [[1.52728008E12, 4.533333333333333], [1.52728026E12, 2.5833333333333335], [1.52727996E12, 9.266666666666667], [1.52728014E12, 3.8333333333333335], [1.52728002E12, 6.0], [1.5272802E12, 3.316666666666667], [1.5272799E12, 1.4666666666666666]], "isOverall": false, "label": "Delete PROB-success", "isController": false}, {"data": [[1.52728008E12, 4.566666666666666], [1.52728026E12, 2.55], [1.52727996E12, 9.233333333333333], [1.52728014E12, 3.816666666666667], [1.52728002E12, 6.083333333333333], [1.5272802E12, 3.316666666666667], [1.5272799E12, 1.3666666666666667]], "isOverall": false, "label": "Post PROB UNREMOVE-success", "isController": false}, {"data": [[1.52728008E12, 9.433333333333334], [1.52728026E12, 5.366666666666666], [1.52727996E12, 18.633333333333333], [1.52728014E12, 8.033333333333333], [1.52728002E12, 12.066666666666666], [1.5272802E12, 6.916666666666667], [1.5272799E12, 3.1]], "isOverall": false, "label": "Get PROB list-success", "isController": false}, {"data": [[1.52728008E12, 4.6], [1.52728026E12, 3.683333333333333], [1.52727996E12, 9.3], [1.52728014E12, 3.8833333333333333], [1.52728002E12, 6.033333333333333], [1.5272802E12, 3.2333333333333334], [1.5272799E12, 1.5666666666666667]], "isOverall": false, "label": "Post PROB-success", "isController": false}, {"data": [[1.52728008E12, 4.55], [1.52728026E12, 2.5833333333333335], [1.52727996E12, 9.316666666666666], [1.52728014E12, 3.8666666666666667], [1.52728002E12, 6.016666666666667], [1.5272802E12, 3.25], [1.5272799E12, 1.4666666666666666]], "isOverall": false, "label": "Get PROB ID-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.52728026E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
