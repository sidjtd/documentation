/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? -36000000 : 0;
        var yOffset = options.yaxis.mode === "time" ? -36000000 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 92.0, "series": [{"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 1.0], [2.9, 1.0], [3.0, 1.0], [3.1, 1.0], [3.2, 1.0], [3.3, 1.0], [3.4, 1.0], [3.5, 1.0], [3.6, 1.0], [3.7, 1.0], [3.8, 1.0], [3.9, 1.0], [4.0, 1.0], [4.1, 1.0], [4.2, 1.0], [4.3, 1.0], [4.4, 1.0], [4.5, 1.0], [4.6, 1.0], [4.7, 1.0], [4.8, 1.0], [4.9, 1.0], [5.0, 1.0], [5.1, 1.0], [5.2, 1.0], [5.3, 1.0], [5.4, 1.0], [5.5, 1.0], [5.6, 1.0], [5.7, 1.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 2.0], [22.5, 2.0], [22.6, 2.0], [22.7, 2.0], [22.8, 2.0], [22.9, 2.0], [23.0, 2.0], [23.1, 2.0], [23.2, 2.0], [23.3, 2.0], [23.4, 2.0], [23.5, 2.0], [23.6, 2.0], [23.7, 2.0], [23.8, 2.0], [23.9, 2.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 2.0], [29.6, 2.0], [29.7, 2.0], [29.8, 2.0], [29.9, 2.0], [30.0, 2.0], [30.1, 2.0], [30.2, 2.0], [30.3, 2.0], [30.4, 2.0], [30.5, 2.0], [30.6, 2.0], [30.7, 2.0], [30.8, 2.0], [30.9, 2.0], [31.0, 2.0], [31.1, 2.0], [31.2, 2.0], [31.3, 2.0], [31.4, 2.0], [31.5, 2.0], [31.6, 2.0], [31.7, 2.0], [31.8, 2.0], [31.9, 2.0], [32.0, 2.0], [32.1, 2.0], [32.2, 2.0], [32.3, 2.0], [32.4, 2.0], [32.5, 2.0], [32.6, 2.0], [32.7, 2.0], [32.8, 2.0], [32.9, 2.0], [33.0, 2.0], [33.1, 2.0], [33.2, 2.0], [33.3, 2.0], [33.4, 2.0], [33.5, 2.0], [33.6, 2.0], [33.7, 2.0], [33.8, 2.0], [33.9, 2.0], [34.0, 2.0], [34.1, 2.0], [34.2, 2.0], [34.3, 2.0], [34.4, 2.0], [34.5, 2.0], [34.6, 2.0], [34.7, 2.0], [34.8, 2.0], [34.9, 2.0], [35.0, 2.0], [35.1, 2.0], [35.2, 2.0], [35.3, 2.0], [35.4, 2.0], [35.5, 2.0], [35.6, 2.0], [35.7, 2.0], [35.8, 2.0], [35.9, 2.0], [36.0, 2.0], [36.1, 2.0], [36.2, 2.0], [36.3, 2.0], [36.4, 2.0], [36.5, 2.0], [36.6, 2.0], [36.7, 2.0], [36.8, 2.0], [36.9, 2.0], [37.0, 2.0], [37.1, 2.0], [37.2, 2.0], [37.3, 2.0], [37.4, 2.0], [37.5, 2.0], [37.6, 2.0], [37.7, 2.0], [37.8, 2.0], [37.9, 2.0], [38.0, 2.0], [38.1, 2.0], [38.2, 2.0], [38.3, 2.0], [38.4, 2.0], [38.5, 2.0], [38.6, 2.0], [38.7, 2.0], [38.8, 2.0], [38.9, 2.0], [39.0, 2.0], [39.1, 2.0], [39.2, 2.0], [39.3, 2.0], [39.4, 2.0], [39.5, 2.0], [39.6, 2.0], [39.7, 2.0], [39.8, 2.0], [39.9, 2.0], [40.0, 2.0], [40.1, 2.0], [40.2, 2.0], [40.3, 2.0], [40.4, 2.0], [40.5, 2.0], [40.6, 2.0], [40.7, 2.0], [40.8, 2.0], [40.9, 2.0], [41.0, 2.0], [41.1, 2.0], [41.2, 2.0], [41.3, 2.0], [41.4, 2.0], [41.5, 2.0], [41.6, 2.0], [41.7, 2.0], [41.8, 2.0], [41.9, 2.0], [42.0, 2.0], [42.1, 2.0], [42.2, 2.0], [42.3, 2.0], [42.4, 2.0], [42.5, 2.0], [42.6, 2.0], [42.7, 2.0], [42.8, 2.0], [42.9, 2.0], [43.0, 2.0], [43.1, 2.0], [43.2, 2.0], [43.3, 2.0], [43.4, 2.0], [43.5, 2.0], [43.6, 2.0], [43.7, 2.0], [43.8, 2.0], [43.9, 2.0], [44.0, 2.0], [44.1, 2.0], [44.2, 2.0], [44.3, 2.0], [44.4, 2.0], [44.5, 2.0], [44.6, 2.0], [44.7, 2.0], [44.8, 2.0], [44.9, 2.0], [45.0, 2.0], [45.1, 2.0], [45.2, 2.0], [45.3, 2.0], [45.4, 2.0], [45.5, 2.0], [45.6, 2.0], [45.7, 2.0], [45.8, 2.0], [45.9, 2.0], [46.0, 2.0], [46.1, 2.0], [46.2, 2.0], [46.3, 2.0], [46.4, 2.0], [46.5, 2.0], [46.6, 2.0], [46.7, 2.0], [46.8, 2.0], [46.9, 2.0], [47.0, 2.0], [47.1, 2.0], [47.2, 2.0], [47.3, 2.0], [47.4, 2.0], [47.5, 2.0], [47.6, 2.0], [47.7, 2.0], [47.8, 2.0], [47.9, 2.0], [48.0, 2.0], [48.1, 2.0], [48.2, 2.0], [48.3, 2.0], [48.4, 2.0], [48.5, 2.0], [48.6, 2.0], [48.7, 2.0], [48.8, 2.0], [48.9, 2.0], [49.0, 2.0], [49.1, 2.0], [49.2, 2.0], [49.3, 2.0], [49.4, 2.0], [49.5, 2.0], [49.6, 2.0], [49.7, 2.0], [49.8, 2.0], [49.9, 2.0], [50.0, 2.0], [50.1, 2.0], [50.2, 2.0], [50.3, 2.0], [50.4, 2.0], [50.5, 2.0], [50.6, 2.0], [50.7, 2.0], [50.8, 2.0], [50.9, 2.0], [51.0, 2.0], [51.1, 2.0], [51.2, 2.0], [51.3, 2.0], [51.4, 2.0], [51.5, 2.0], [51.6, 2.0], [51.7, 2.0], [51.8, 2.0], [51.9, 2.0], [52.0, 2.0], [52.1, 2.0], [52.2, 2.0], [52.3, 2.0], [52.4, 2.0], [52.5, 2.0], [52.6, 2.0], [52.7, 2.0], [52.8, 2.0], [52.9, 2.0], [53.0, 2.0], [53.1, 2.0], [53.2, 2.0], [53.3, 2.0], [53.4, 2.0], [53.5, 2.0], [53.6, 2.0], [53.7, 2.0], [53.8, 2.0], [53.9, 2.0], [54.0, 2.0], [54.1, 2.0], [54.2, 2.0], [54.3, 2.0], [54.4, 2.0], [54.5, 2.0], [54.6, 2.0], [54.7, 2.0], [54.8, 2.0], [54.9, 2.0], [55.0, 2.0], [55.1, 2.0], [55.2, 2.0], [55.3, 2.0], [55.4, 2.0], [55.5, 2.0], [55.6, 2.0], [55.7, 2.0], [55.8, 2.0], [55.9, 2.0], [56.0, 2.0], [56.1, 2.0], [56.2, 2.0], [56.3, 2.0], [56.4, 2.0], [56.5, 2.0], [56.6, 2.0], [56.7, 2.0], [56.8, 2.0], [56.9, 2.0], [57.0, 2.0], [57.1, 2.0], [57.2, 2.0], [57.3, 2.0], [57.4, 2.0], [57.5, 2.0], [57.6, 2.0], [57.7, 2.0], [57.8, 2.0], [57.9, 2.0], [58.0, 2.0], [58.1, 2.0], [58.2, 2.0], [58.3, 3.0], [58.4, 3.0], [58.5, 3.0], [58.6, 3.0], [58.7, 3.0], [58.8, 3.0], [58.9, 3.0], [59.0, 3.0], [59.1, 3.0], [59.2, 3.0], [59.3, 3.0], [59.4, 3.0], [59.5, 3.0], [59.6, 3.0], [59.7, 3.0], [59.8, 3.0], [59.9, 3.0], [60.0, 3.0], [60.1, 3.0], [60.2, 3.0], [60.3, 3.0], [60.4, 3.0], [60.5, 3.0], [60.6, 3.0], [60.7, 3.0], [60.8, 3.0], [60.9, 3.0], [61.0, 3.0], [61.1, 3.0], [61.2, 3.0], [61.3, 3.0], [61.4, 3.0], [61.5, 3.0], [61.6, 3.0], [61.7, 3.0], [61.8, 3.0], [61.9, 3.0], [62.0, 3.0], [62.1, 3.0], [62.2, 3.0], [62.3, 3.0], [62.4, 3.0], [62.5, 3.0], [62.6, 3.0], [62.7, 3.0], [62.8, 3.0], [62.9, 3.0], [63.0, 3.0], [63.1, 3.0], [63.2, 3.0], [63.3, 3.0], [63.4, 3.0], [63.5, 3.0], [63.6, 3.0], [63.7, 3.0], [63.8, 3.0], [63.9, 3.0], [64.0, 3.0], [64.1, 3.0], [64.2, 3.0], [64.3, 3.0], [64.4, 3.0], [64.5, 3.0], [64.6, 3.0], [64.7, 3.0], [64.8, 3.0], [64.9, 3.0], [65.0, 3.0], [65.1, 3.0], [65.2, 3.0], [65.3, 3.0], [65.4, 3.0], [65.5, 3.0], [65.6, 3.0], [65.7, 3.0], [65.8, 3.0], [65.9, 3.0], [66.0, 3.0], [66.1, 3.0], [66.2, 3.0], [66.3, 3.0], [66.4, 3.0], [66.5, 3.0], [66.6, 3.0], [66.7, 3.0], [66.8, 3.0], [66.9, 3.0], [67.0, 3.0], [67.1, 3.0], [67.2, 3.0], [67.3, 3.0], [67.4, 3.0], [67.5, 3.0], [67.6, 3.0], [67.7, 3.0], [67.8, 3.0], [67.9, 3.0], [68.0, 3.0], [68.1, 3.0], [68.2, 3.0], [68.3, 3.0], [68.4, 3.0], [68.5, 3.0], [68.6, 3.0], [68.7, 3.0], [68.8, 3.0], [68.9, 3.0], [69.0, 3.0], [69.1, 3.0], [69.2, 3.0], [69.3, 3.0], [69.4, 3.0], [69.5, 3.0], [69.6, 3.0], [69.7, 3.0], [69.8, 3.0], [69.9, 3.0], [70.0, 3.0], [70.1, 3.0], [70.2, 3.0], [70.3, 3.0], [70.4, 3.0], [70.5, 3.0], [70.6, 3.0], [70.7, 3.0], [70.8, 3.0], [70.9, 3.0], [71.0, 3.0], [71.1, 3.0], [71.2, 3.0], [71.3, 3.0], [71.4, 3.0], [71.5, 3.0], [71.6, 3.0], [71.7, 3.0], [71.8, 3.0], [71.9, 3.0], [72.0, 3.0], [72.1, 3.0], [72.2, 3.0], [72.3, 3.0], [72.4, 3.0], [72.5, 3.0], [72.6, 3.0], [72.7, 3.0], [72.8, 3.0], [72.9, 3.0], [73.0, 3.0], [73.1, 3.0], [73.2, 3.0], [73.3, 3.0], [73.4, 3.0], [73.5, 3.0], [73.6, 3.0], [73.7, 3.0], [73.8, 3.0], [73.9, 3.0], [74.0, 3.0], [74.1, 3.0], [74.2, 3.0], [74.3, 3.0], [74.4, 3.0], [74.5, 3.0], [74.6, 3.0], [74.7, 3.0], [74.8, 3.0], [74.9, 3.0], [75.0, 3.0], [75.1, 3.0], [75.2, 3.0], [75.3, 3.0], [75.4, 3.0], [75.5, 3.0], [75.6, 3.0], [75.7, 3.0], [75.8, 3.0], [75.9, 3.0], [76.0, 3.0], [76.1, 3.0], [76.2, 3.0], [76.3, 3.0], [76.4, 3.0], [76.5, 3.0], [76.6, 3.0], [76.7, 3.0], [76.8, 3.0], [76.9, 3.0], [77.0, 3.0], [77.1, 3.0], [77.2, 3.0], [77.3, 3.0], [77.4, 3.0], [77.5, 3.0], [77.6, 3.0], [77.7, 3.0], [77.8, 3.0], [77.9, 3.0], [78.0, 3.0], [78.1, 3.0], [78.2, 3.0], [78.3, 3.0], [78.4, 3.0], [78.5, 3.0], [78.6, 3.0], [78.7, 3.0], [78.8, 3.0], [78.9, 3.0], [79.0, 3.0], [79.1, 3.0], [79.2, 3.0], [79.3, 3.0], [79.4, 3.0], [79.5, 3.0], [79.6, 3.0], [79.7, 3.0], [79.8, 3.0], [79.9, 3.0], [80.0, 3.0], [80.1, 3.0], [80.2, 3.0], [80.3, 3.0], [80.4, 3.0], [80.5, 3.0], [80.6, 3.0], [80.7, 3.0], [80.8, 3.0], [80.9, 3.0], [81.0, 3.0], [81.1, 3.0], [81.2, 3.0], [81.3, 3.0], [81.4, 3.0], [81.5, 3.0], [81.6, 3.0], [81.7, 3.0], [81.8, 3.0], [81.9, 3.0], [82.0, 3.0], [82.1, 3.0], [82.2, 3.0], [82.3, 3.0], [82.4, 3.0], [82.5, 3.0], [82.6, 3.0], [82.7, 3.0], [82.8, 3.0], [82.9, 3.0], [83.0, 3.0], [83.1, 3.0], [83.2, 3.0], [83.3, 3.0], [83.4, 3.0], [83.5, 3.0], [83.6, 3.0], [83.7, 3.0], [83.8, 3.0], [83.9, 3.0], [84.0, 3.0], [84.1, 3.0], [84.2, 3.0], [84.3, 3.0], [84.4, 3.0], [84.5, 3.0], [84.6, 3.0], [84.7, 3.0], [84.8, 3.0], [84.9, 3.0], [85.0, 3.0], [85.1, 3.0], [85.2, 3.0], [85.3, 3.0], [85.4, 3.0], [85.5, 3.0], [85.6, 3.0], [85.7, 3.0], [85.8, 3.0], [85.9, 3.0], [86.0, 3.0], [86.1, 3.0], [86.2, 3.0], [86.3, 3.0], [86.4, 3.0], [86.5, 3.0], [86.6, 3.0], [86.7, 3.0], [86.8, 3.0], [86.9, 3.0], [87.0, 3.0], [87.1, 3.0], [87.2, 3.0], [87.3, 3.0], [87.4, 3.0], [87.5, 3.0], [87.6, 3.0], [87.7, 3.0], [87.8, 3.0], [87.9, 3.0], [88.0, 3.0], [88.1, 3.0], [88.2, 3.0], [88.3, 3.0], [88.4, 3.0], [88.5, 3.0], [88.6, 3.0], [88.7, 3.0], [88.8, 3.0], [88.9, 3.0], [89.0, 3.0], [89.1, 4.0], [89.2, 4.0], [89.3, 4.0], [89.4, 4.0], [89.5, 4.0], [89.6, 4.0], [89.7, 4.0], [89.8, 4.0], [89.9, 4.0], [90.0, 4.0], [90.1, 4.0], [90.2, 4.0], [90.3, 4.0], [90.4, 4.0], [90.5, 4.0], [90.6, 4.0], [90.7, 4.0], [90.8, 4.0], [90.9, 4.0], [91.0, 4.0], [91.1, 4.0], [91.2, 4.0], [91.3, 4.0], [91.4, 4.0], [91.5, 4.0], [91.6, 4.0], [91.7, 4.0], [91.8, 4.0], [91.9, 4.0], [92.0, 4.0], [92.1, 4.0], [92.2, 4.0], [92.3, 4.0], [92.4, 4.0], [92.5, 4.0], [92.6, 4.0], [92.7, 4.0], [92.8, 4.0], [92.9, 4.0], [93.0, 4.0], [93.1, 4.0], [93.2, 4.0], [93.3, 4.0], [93.4, 4.0], [93.5, 4.0], [93.6, 4.0], [93.7, 4.0], [93.8, 4.0], [93.9, 4.0], [94.0, 4.0], [94.1, 4.0], [94.2, 4.0], [94.3, 4.0], [94.4, 5.0], [94.5, 5.0], [94.6, 5.0], [94.7, 5.0], [94.8, 5.0], [94.9, 5.0], [95.0, 5.0], [95.1, 5.0], [95.2, 5.0], [95.3, 5.0], [95.4, 5.0], [95.5, 5.0], [95.6, 5.0], [95.7, 5.0], [95.8, 5.0], [95.9, 5.0], [96.0, 5.0], [96.1, 6.0], [96.2, 6.0], [96.3, 6.0], [96.4, 6.0], [96.5, 6.0], [96.6, 6.0], [96.7, 6.0], [96.8, 7.0], [96.9, 7.0], [97.0, 7.0], [97.1, 7.0], [97.2, 7.0], [97.3, 8.0], [97.4, 8.0], [97.5, 8.0], [97.6, 9.0], [97.7, 9.0], [97.8, 9.0], [97.9, 10.0], [98.0, 10.0], [98.1, 11.0], [98.2, 12.0], [98.3, 12.0], [98.4, 14.0], [98.5, 15.0], [98.6, 16.0], [98.7, 17.0], [98.8, 21.0], [98.9, 23.0], [99.0, 26.0], [99.1, 28.0], [99.2, 31.0], [99.3, 34.0], [99.4, 39.0], [99.5, 42.0], [99.6, 44.0], [99.7, 45.0], [99.8, 46.0], [99.9, 49.0]], "isOverall": false, "label": "Get DATA Info", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 2.0], [22.5, 2.0], [22.6, 2.0], [22.7, 2.0], [22.8, 2.0], [22.9, 2.0], [23.0, 2.0], [23.1, 2.0], [23.2, 2.0], [23.3, 2.0], [23.4, 2.0], [23.5, 2.0], [23.6, 2.0], [23.7, 2.0], [23.8, 2.0], [23.9, 2.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 2.0], [29.6, 2.0], [29.7, 2.0], [29.8, 2.0], [29.9, 2.0], [30.0, 2.0], [30.1, 2.0], [30.2, 2.0], [30.3, 2.0], [30.4, 2.0], [30.5, 2.0], [30.6, 2.0], [30.7, 2.0], [30.8, 2.0], [30.9, 2.0], [31.0, 2.0], [31.1, 2.0], [31.2, 2.0], [31.3, 2.0], [31.4, 2.0], [31.5, 2.0], [31.6, 2.0], [31.7, 2.0], [31.8, 2.0], [31.9, 2.0], [32.0, 2.0], [32.1, 2.0], [32.2, 2.0], [32.3, 2.0], [32.4, 2.0], [32.5, 2.0], [32.6, 2.0], [32.7, 2.0], [32.8, 2.0], [32.9, 2.0], [33.0, 2.0], [33.1, 2.0], [33.2, 2.0], [33.3, 2.0], [33.4, 2.0], [33.5, 2.0], [33.6, 2.0], [33.7, 2.0], [33.8, 2.0], [33.9, 2.0], [34.0, 2.0], [34.1, 2.0], [34.2, 2.0], [34.3, 2.0], [34.4, 2.0], [34.5, 2.0], [34.6, 2.0], [34.7, 2.0], [34.8, 2.0], [34.9, 2.0], [35.0, 2.0], [35.1, 2.0], [35.2, 2.0], [35.3, 2.0], [35.4, 2.0], [35.5, 2.0], [35.6, 2.0], [35.7, 2.0], [35.8, 2.0], [35.9, 2.0], [36.0, 2.0], [36.1, 2.0], [36.2, 2.0], [36.3, 2.0], [36.4, 2.0], [36.5, 2.0], [36.6, 2.0], [36.7, 2.0], [36.8, 2.0], [36.9, 2.0], [37.0, 2.0], [37.1, 2.0], [37.2, 2.0], [37.3, 2.0], [37.4, 2.0], [37.5, 2.0], [37.6, 2.0], [37.7, 2.0], [37.8, 2.0], [37.9, 2.0], [38.0, 2.0], [38.1, 2.0], [38.2, 2.0], [38.3, 2.0], [38.4, 2.0], [38.5, 2.0], [38.6, 2.0], [38.7, 2.0], [38.8, 2.0], [38.9, 2.0], [39.0, 2.0], [39.1, 2.0], [39.2, 2.0], [39.3, 2.0], [39.4, 2.0], [39.5, 2.0], [39.6, 2.0], [39.7, 2.0], [39.8, 2.0], [39.9, 2.0], [40.0, 2.0], [40.1, 2.0], [40.2, 2.0], [40.3, 2.0], [40.4, 2.0], [40.5, 2.0], [40.6, 2.0], [40.7, 2.0], [40.8, 2.0], [40.9, 2.0], [41.0, 2.0], [41.1, 2.0], [41.2, 2.0], [41.3, 2.0], [41.4, 2.0], [41.5, 2.0], [41.6, 2.0], [41.7, 2.0], [41.8, 2.0], [41.9, 2.0], [42.0, 2.0], [42.1, 2.0], [42.2, 2.0], [42.3, 2.0], [42.4, 3.0], [42.5, 3.0], [42.6, 3.0], [42.7, 3.0], [42.8, 3.0], [42.9, 3.0], [43.0, 3.0], [43.1, 3.0], [43.2, 3.0], [43.3, 3.0], [43.4, 3.0], [43.5, 3.0], [43.6, 3.0], [43.7, 3.0], [43.8, 3.0], [43.9, 3.0], [44.0, 3.0], [44.1, 3.0], [44.2, 3.0], [44.3, 3.0], [44.4, 3.0], [44.5, 3.0], [44.6, 3.0], [44.7, 3.0], [44.8, 3.0], [44.9, 3.0], [45.0, 3.0], [45.1, 3.0], [45.2, 3.0], [45.3, 3.0], [45.4, 3.0], [45.5, 3.0], [45.6, 3.0], [45.7, 3.0], [45.8, 3.0], [45.9, 3.0], [46.0, 3.0], [46.1, 3.0], [46.2, 3.0], [46.3, 3.0], [46.4, 3.0], [46.5, 3.0], [46.6, 3.0], [46.7, 3.0], [46.8, 3.0], [46.9, 3.0], [47.0, 3.0], [47.1, 3.0], [47.2, 3.0], [47.3, 3.0], [47.4, 3.0], [47.5, 3.0], [47.6, 3.0], [47.7, 3.0], [47.8, 3.0], [47.9, 3.0], [48.0, 3.0], [48.1, 3.0], [48.2, 3.0], [48.3, 3.0], [48.4, 3.0], [48.5, 3.0], [48.6, 3.0], [48.7, 3.0], [48.8, 3.0], [48.9, 3.0], [49.0, 3.0], [49.1, 3.0], [49.2, 3.0], [49.3, 3.0], [49.4, 3.0], [49.5, 3.0], [49.6, 3.0], [49.7, 3.0], [49.8, 3.0], [49.9, 3.0], [50.0, 3.0], [50.1, 3.0], [50.2, 3.0], [50.3, 3.0], [50.4, 3.0], [50.5, 3.0], [50.6, 3.0], [50.7, 3.0], [50.8, 3.0], [50.9, 3.0], [51.0, 3.0], [51.1, 3.0], [51.2, 3.0], [51.3, 3.0], [51.4, 3.0], [51.5, 3.0], [51.6, 3.0], [51.7, 3.0], [51.8, 3.0], [51.9, 3.0], [52.0, 3.0], [52.1, 3.0], [52.2, 3.0], [52.3, 3.0], [52.4, 3.0], [52.5, 3.0], [52.6, 3.0], [52.7, 3.0], [52.8, 3.0], [52.9, 3.0], [53.0, 3.0], [53.1, 3.0], [53.2, 3.0], [53.3, 3.0], [53.4, 3.0], [53.5, 3.0], [53.6, 3.0], [53.7, 3.0], [53.8, 3.0], [53.9, 3.0], [54.0, 3.0], [54.1, 3.0], [54.2, 3.0], [54.3, 3.0], [54.4, 3.0], [54.5, 3.0], [54.6, 3.0], [54.7, 3.0], [54.8, 3.0], [54.9, 3.0], [55.0, 3.0], [55.1, 3.0], [55.2, 3.0], [55.3, 3.0], [55.4, 3.0], [55.5, 3.0], [55.6, 3.0], [55.7, 3.0], [55.8, 3.0], [55.9, 3.0], [56.0, 3.0], [56.1, 3.0], [56.2, 3.0], [56.3, 3.0], [56.4, 3.0], [56.5, 3.0], [56.6, 3.0], [56.7, 3.0], [56.8, 3.0], [56.9, 3.0], [57.0, 3.0], [57.1, 3.0], [57.2, 3.0], [57.3, 3.0], [57.4, 3.0], [57.5, 3.0], [57.6, 3.0], [57.7, 3.0], [57.8, 3.0], [57.9, 3.0], [58.0, 3.0], [58.1, 3.0], [58.2, 3.0], [58.3, 3.0], [58.4, 3.0], [58.5, 3.0], [58.6, 3.0], [58.7, 3.0], [58.8, 3.0], [58.9, 3.0], [59.0, 3.0], [59.1, 3.0], [59.2, 3.0], [59.3, 3.0], [59.4, 3.0], [59.5, 3.0], [59.6, 3.0], [59.7, 3.0], [59.8, 3.0], [59.9, 3.0], [60.0, 3.0], [60.1, 3.0], [60.2, 3.0], [60.3, 3.0], [60.4, 3.0], [60.5, 3.0], [60.6, 3.0], [60.7, 3.0], [60.8, 3.0], [60.9, 3.0], [61.0, 3.0], [61.1, 3.0], [61.2, 3.0], [61.3, 3.0], [61.4, 3.0], [61.5, 3.0], [61.6, 3.0], [61.7, 3.0], [61.8, 3.0], [61.9, 3.0], [62.0, 3.0], [62.1, 3.0], [62.2, 3.0], [62.3, 3.0], [62.4, 3.0], [62.5, 3.0], [62.6, 3.0], [62.7, 3.0], [62.8, 3.0], [62.9, 3.0], [63.0, 3.0], [63.1, 3.0], [63.2, 3.0], [63.3, 3.0], [63.4, 3.0], [63.5, 3.0], [63.6, 3.0], [63.7, 3.0], [63.8, 3.0], [63.9, 3.0], [64.0, 3.0], [64.1, 3.0], [64.2, 3.0], [64.3, 3.0], [64.4, 3.0], [64.5, 3.0], [64.6, 3.0], [64.7, 3.0], [64.8, 3.0], [64.9, 3.0], [65.0, 3.0], [65.1, 3.0], [65.2, 3.0], [65.3, 3.0], [65.4, 3.0], [65.5, 3.0], [65.6, 3.0], [65.7, 3.0], [65.8, 3.0], [65.9, 3.0], [66.0, 3.0], [66.1, 3.0], [66.2, 3.0], [66.3, 3.0], [66.4, 3.0], [66.5, 3.0], [66.6, 3.0], [66.7, 3.0], [66.8, 3.0], [66.9, 3.0], [67.0, 3.0], [67.1, 3.0], [67.2, 3.0], [67.3, 3.0], [67.4, 3.0], [67.5, 3.0], [67.6, 3.0], [67.7, 3.0], [67.8, 3.0], [67.9, 3.0], [68.0, 3.0], [68.1, 3.0], [68.2, 3.0], [68.3, 3.0], [68.4, 3.0], [68.5, 3.0], [68.6, 3.0], [68.7, 3.0], [68.8, 3.0], [68.9, 3.0], [69.0, 3.0], [69.1, 3.0], [69.2, 3.0], [69.3, 3.0], [69.4, 3.0], [69.5, 3.0], [69.6, 3.0], [69.7, 3.0], [69.8, 3.0], [69.9, 3.0], [70.0, 3.0], [70.1, 3.0], [70.2, 3.0], [70.3, 3.0], [70.4, 3.0], [70.5, 3.0], [70.6, 3.0], [70.7, 3.0], [70.8, 3.0], [70.9, 3.0], [71.0, 3.0], [71.1, 3.0], [71.2, 3.0], [71.3, 3.0], [71.4, 3.0], [71.5, 3.0], [71.6, 3.0], [71.7, 3.0], [71.8, 3.0], [71.9, 3.0], [72.0, 3.0], [72.1, 3.0], [72.2, 3.0], [72.3, 3.0], [72.4, 3.0], [72.5, 3.0], [72.6, 3.0], [72.7, 3.0], [72.8, 3.0], [72.9, 3.0], [73.0, 3.0], [73.1, 3.0], [73.2, 3.0], [73.3, 3.0], [73.4, 3.0], [73.5, 3.0], [73.6, 3.0], [73.7, 3.0], [73.8, 3.0], [73.9, 3.0], [74.0, 3.0], [74.1, 3.0], [74.2, 3.0], [74.3, 3.0], [74.4, 3.0], [74.5, 3.0], [74.6, 3.0], [74.7, 3.0], [74.8, 3.0], [74.9, 3.0], [75.0, 3.0], [75.1, 3.0], [75.2, 3.0], [75.3, 3.0], [75.4, 3.0], [75.5, 3.0], [75.6, 3.0], [75.7, 3.0], [75.8, 3.0], [75.9, 3.0], [76.0, 3.0], [76.1, 3.0], [76.2, 3.0], [76.3, 3.0], [76.4, 3.0], [76.5, 3.0], [76.6, 3.0], [76.7, 3.0], [76.8, 3.0], [76.9, 3.0], [77.0, 3.0], [77.1, 3.0], [77.2, 3.0], [77.3, 3.0], [77.4, 3.0], [77.5, 3.0], [77.6, 3.0], [77.7, 3.0], [77.8, 3.0], [77.9, 3.0], [78.0, 3.0], [78.1, 3.0], [78.2, 3.0], [78.3, 3.0], [78.4, 3.0], [78.5, 3.0], [78.6, 3.0], [78.7, 3.0], [78.8, 3.0], [78.9, 3.0], [79.0, 3.0], [79.1, 3.0], [79.2, 3.0], [79.3, 3.0], [79.4, 3.0], [79.5, 3.0], [79.6, 3.0], [79.7, 3.0], [79.8, 3.0], [79.9, 3.0], [80.0, 3.0], [80.1, 3.0], [80.2, 3.0], [80.3, 3.0], [80.4, 3.0], [80.5, 3.0], [80.6, 3.0], [80.7, 3.0], [80.8, 3.0], [80.9, 3.0], [81.0, 3.0], [81.1, 3.0], [81.2, 3.0], [81.3, 3.0], [81.4, 3.0], [81.5, 3.0], [81.6, 3.0], [81.7, 3.0], [81.8, 3.0], [81.9, 3.0], [82.0, 3.0], [82.1, 3.0], [82.2, 3.0], [82.3, 3.0], [82.4, 3.0], [82.5, 3.0], [82.6, 3.0], [82.7, 3.0], [82.8, 3.0], [82.9, 3.0], [83.0, 3.0], [83.1, 3.0], [83.2, 3.0], [83.3, 3.0], [83.4, 3.0], [83.5, 3.0], [83.6, 3.0], [83.7, 3.0], [83.8, 3.0], [83.9, 3.0], [84.0, 3.0], [84.1, 3.0], [84.2, 3.0], [84.3, 3.0], [84.4, 3.0], [84.5, 3.0], [84.6, 3.0], [84.7, 3.0], [84.8, 3.0], [84.9, 4.0], [85.0, 4.0], [85.1, 4.0], [85.2, 4.0], [85.3, 4.0], [85.4, 4.0], [85.5, 4.0], [85.6, 4.0], [85.7, 4.0], [85.8, 4.0], [85.9, 4.0], [86.0, 4.0], [86.1, 4.0], [86.2, 4.0], [86.3, 4.0], [86.4, 4.0], [86.5, 4.0], [86.6, 4.0], [86.7, 4.0], [86.8, 4.0], [86.9, 4.0], [87.0, 4.0], [87.1, 4.0], [87.2, 4.0], [87.3, 4.0], [87.4, 4.0], [87.5, 4.0], [87.6, 4.0], [87.7, 4.0], [87.8, 4.0], [87.9, 4.0], [88.0, 4.0], [88.1, 4.0], [88.2, 4.0], [88.3, 4.0], [88.4, 4.0], [88.5, 4.0], [88.6, 4.0], [88.7, 4.0], [88.8, 4.0], [88.9, 4.0], [89.0, 4.0], [89.1, 4.0], [89.2, 4.0], [89.3, 4.0], [89.4, 4.0], [89.5, 4.0], [89.6, 4.0], [89.7, 4.0], [89.8, 4.0], [89.9, 4.0], [90.0, 4.0], [90.1, 4.0], [90.2, 4.0], [90.3, 4.0], [90.4, 4.0], [90.5, 4.0], [90.6, 4.0], [90.7, 4.0], [90.8, 4.0], [90.9, 4.0], [91.0, 4.0], [91.1, 4.0], [91.2, 4.0], [91.3, 4.0], [91.4, 4.0], [91.5, 4.0], [91.6, 4.0], [91.7, 4.0], [91.8, 4.0], [91.9, 4.0], [92.0, 4.0], [92.1, 4.0], [92.2, 4.0], [92.3, 4.0], [92.4, 4.0], [92.5, 4.0], [92.6, 4.0], [92.7, 4.0], [92.8, 4.0], [92.9, 4.0], [93.0, 4.0], [93.1, 4.0], [93.2, 4.0], [93.3, 4.0], [93.4, 4.0], [93.5, 5.0], [93.6, 5.0], [93.7, 5.0], [93.8, 5.0], [93.9, 5.0], [94.0, 5.0], [94.1, 5.0], [94.2, 5.0], [94.3, 5.0], [94.4, 5.0], [94.5, 5.0], [94.6, 5.0], [94.7, 5.0], [94.8, 5.0], [94.9, 5.0], [95.0, 5.0], [95.1, 5.0], [95.2, 5.0], [95.3, 5.0], [95.4, 5.0], [95.5, 5.0], [95.6, 5.0], [95.7, 5.0], [95.8, 6.0], [95.9, 6.0], [96.0, 6.0], [96.1, 6.0], [96.2, 6.0], [96.3, 6.0], [96.4, 6.0], [96.5, 6.0], [96.6, 6.0], [96.7, 6.0], [96.8, 6.0], [96.9, 6.0], [97.0, 7.0], [97.1, 7.0], [97.2, 7.0], [97.3, 7.0], [97.4, 7.0], [97.5, 8.0], [97.6, 8.0], [97.7, 8.0], [97.8, 9.0], [97.9, 9.0], [98.0, 9.0], [98.1, 10.0], [98.2, 10.0], [98.3, 11.0], [98.4, 11.0], [98.5, 12.0], [98.6, 12.0], [98.7, 13.0], [98.8, 14.0], [98.9, 15.0], [99.0, 16.0], [99.1, 18.0], [99.2, 21.0], [99.3, 24.0], [99.4, 29.0], [99.5, 34.0], [99.6, 38.0], [99.7, 43.0], [99.8, 45.0], [99.9, 49.0]], "isOverall": false, "label": "Get DATA", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 2.0], [0.4, 2.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 2.0], [22.5, 2.0], [22.6, 2.0], [22.7, 2.0], [22.8, 2.0], [22.9, 2.0], [23.0, 2.0], [23.1, 2.0], [23.2, 2.0], [23.3, 2.0], [23.4, 2.0], [23.5, 2.0], [23.6, 2.0], [23.7, 2.0], [23.8, 2.0], [23.9, 2.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 3.0], [29.2, 3.0], [29.3, 3.0], [29.4, 3.0], [29.5, 3.0], [29.6, 3.0], [29.7, 3.0], [29.8, 3.0], [29.9, 3.0], [30.0, 3.0], [30.1, 3.0], [30.2, 3.0], [30.3, 3.0], [30.4, 3.0], [30.5, 3.0], [30.6, 3.0], [30.7, 3.0], [30.8, 3.0], [30.9, 3.0], [31.0, 3.0], [31.1, 3.0], [31.2, 3.0], [31.3, 3.0], [31.4, 3.0], [31.5, 3.0], [31.6, 3.0], [31.7, 3.0], [31.8, 3.0], [31.9, 3.0], [32.0, 3.0], [32.1, 3.0], [32.2, 3.0], [32.3, 3.0], [32.4, 3.0], [32.5, 3.0], [32.6, 3.0], [32.7, 3.0], [32.8, 3.0], [32.9, 3.0], [33.0, 3.0], [33.1, 3.0], [33.2, 3.0], [33.3, 3.0], [33.4, 3.0], [33.5, 3.0], [33.6, 3.0], [33.7, 3.0], [33.8, 3.0], [33.9, 3.0], [34.0, 3.0], [34.1, 3.0], [34.2, 3.0], [34.3, 3.0], [34.4, 3.0], [34.5, 3.0], [34.6, 3.0], [34.7, 3.0], [34.8, 3.0], [34.9, 3.0], [35.0, 3.0], [35.1, 3.0], [35.2, 3.0], [35.3, 3.0], [35.4, 3.0], [35.5, 3.0], [35.6, 3.0], [35.7, 3.0], [35.8, 3.0], [35.9, 3.0], [36.0, 3.0], [36.1, 3.0], [36.2, 3.0], [36.3, 3.0], [36.4, 3.0], [36.5, 3.0], [36.6, 3.0], [36.7, 3.0], [36.8, 3.0], [36.9, 3.0], [37.0, 3.0], [37.1, 3.0], [37.2, 3.0], [37.3, 3.0], [37.4, 3.0], [37.5, 3.0], [37.6, 3.0], [37.7, 3.0], [37.8, 3.0], [37.9, 3.0], [38.0, 3.0], [38.1, 3.0], [38.2, 3.0], [38.3, 3.0], [38.4, 3.0], [38.5, 3.0], [38.6, 3.0], [38.7, 3.0], [38.8, 3.0], [38.9, 3.0], [39.0, 3.0], [39.1, 3.0], [39.2, 3.0], [39.3, 3.0], [39.4, 3.0], [39.5, 3.0], [39.6, 3.0], [39.7, 3.0], [39.8, 3.0], [39.9, 3.0], [40.0, 3.0], [40.1, 3.0], [40.2, 3.0], [40.3, 3.0], [40.4, 3.0], [40.5, 3.0], [40.6, 3.0], [40.7, 3.0], [40.8, 3.0], [40.9, 3.0], [41.0, 3.0], [41.1, 3.0], [41.2, 3.0], [41.3, 3.0], [41.4, 3.0], [41.5, 3.0], [41.6, 3.0], [41.7, 3.0], [41.8, 3.0], [41.9, 3.0], [42.0, 3.0], [42.1, 3.0], [42.2, 3.0], [42.3, 3.0], [42.4, 3.0], [42.5, 3.0], [42.6, 3.0], [42.7, 3.0], [42.8, 3.0], [42.9, 3.0], [43.0, 3.0], [43.1, 3.0], [43.2, 3.0], [43.3, 3.0], [43.4, 3.0], [43.5, 3.0], [43.6, 3.0], [43.7, 3.0], [43.8, 3.0], [43.9, 3.0], [44.0, 3.0], [44.1, 3.0], [44.2, 3.0], [44.3, 3.0], [44.4, 3.0], [44.5, 3.0], [44.6, 3.0], [44.7, 3.0], [44.8, 3.0], [44.9, 3.0], [45.0, 3.0], [45.1, 3.0], [45.2, 3.0], [45.3, 3.0], [45.4, 3.0], [45.5, 3.0], [45.6, 3.0], [45.7, 3.0], [45.8, 3.0], [45.9, 3.0], [46.0, 3.0], [46.1, 3.0], [46.2, 3.0], [46.3, 3.0], [46.4, 3.0], [46.5, 3.0], [46.6, 3.0], [46.7, 3.0], [46.8, 3.0], [46.9, 3.0], [47.0, 3.0], [47.1, 3.0], [47.2, 3.0], [47.3, 3.0], [47.4, 3.0], [47.5, 3.0], [47.6, 3.0], [47.7, 3.0], [47.8, 3.0], [47.9, 3.0], [48.0, 3.0], [48.1, 3.0], [48.2, 3.0], [48.3, 3.0], [48.4, 3.0], [48.5, 3.0], [48.6, 3.0], [48.7, 3.0], [48.8, 3.0], [48.9, 3.0], [49.0, 3.0], [49.1, 3.0], [49.2, 3.0], [49.3, 3.0], [49.4, 3.0], [49.5, 3.0], [49.6, 3.0], [49.7, 3.0], [49.8, 3.0], [49.9, 3.0], [50.0, 3.0], [50.1, 3.0], [50.2, 3.0], [50.3, 3.0], [50.4, 3.0], [50.5, 3.0], [50.6, 3.0], [50.7, 3.0], [50.8, 3.0], [50.9, 3.0], [51.0, 3.0], [51.1, 3.0], [51.2, 3.0], [51.3, 3.0], [51.4, 3.0], [51.5, 3.0], [51.6, 3.0], [51.7, 3.0], [51.8, 3.0], [51.9, 3.0], [52.0, 3.0], [52.1, 3.0], [52.2, 3.0], [52.3, 3.0], [52.4, 3.0], [52.5, 3.0], [52.6, 3.0], [52.7, 3.0], [52.8, 3.0], [52.9, 3.0], [53.0, 3.0], [53.1, 3.0], [53.2, 3.0], [53.3, 3.0], [53.4, 3.0], [53.5, 3.0], [53.6, 3.0], [53.7, 3.0], [53.8, 3.0], [53.9, 3.0], [54.0, 3.0], [54.1, 3.0], [54.2, 3.0], [54.3, 3.0], [54.4, 3.0], [54.5, 3.0], [54.6, 3.0], [54.7, 3.0], [54.8, 3.0], [54.9, 3.0], [55.0, 3.0], [55.1, 3.0], [55.2, 3.0], [55.3, 3.0], [55.4, 3.0], [55.5, 3.0], [55.6, 3.0], [55.7, 3.0], [55.8, 3.0], [55.9, 3.0], [56.0, 3.0], [56.1, 3.0], [56.2, 3.0], [56.3, 3.0], [56.4, 3.0], [56.5, 3.0], [56.6, 3.0], [56.7, 3.0], [56.8, 3.0], [56.9, 3.0], [57.0, 3.0], [57.1, 3.0], [57.2, 3.0], [57.3, 3.0], [57.4, 3.0], [57.5, 3.0], [57.6, 3.0], [57.7, 3.0], [57.8, 3.0], [57.9, 3.0], [58.0, 3.0], [58.1, 3.0], [58.2, 3.0], [58.3, 3.0], [58.4, 3.0], [58.5, 3.0], [58.6, 3.0], [58.7, 3.0], [58.8, 3.0], [58.9, 3.0], [59.0, 3.0], [59.1, 3.0], [59.2, 3.0], [59.3, 3.0], [59.4, 3.0], [59.5, 3.0], [59.6, 3.0], [59.7, 3.0], [59.8, 3.0], [59.9, 3.0], [60.0, 3.0], [60.1, 3.0], [60.2, 3.0], [60.3, 3.0], [60.4, 3.0], [60.5, 3.0], [60.6, 3.0], [60.7, 3.0], [60.8, 3.0], [60.9, 3.0], [61.0, 3.0], [61.1, 3.0], [61.2, 3.0], [61.3, 3.0], [61.4, 3.0], [61.5, 3.0], [61.6, 3.0], [61.7, 3.0], [61.8, 3.0], [61.9, 3.0], [62.0, 3.0], [62.1, 3.0], [62.2, 3.0], [62.3, 3.0], [62.4, 3.0], [62.5, 3.0], [62.6, 3.0], [62.7, 3.0], [62.8, 3.0], [62.9, 3.0], [63.0, 3.0], [63.1, 3.0], [63.2, 3.0], [63.3, 3.0], [63.4, 3.0], [63.5, 3.0], [63.6, 3.0], [63.7, 3.0], [63.8, 3.0], [63.9, 3.0], [64.0, 3.0], [64.1, 3.0], [64.2, 3.0], [64.3, 3.0], [64.4, 3.0], [64.5, 3.0], [64.6, 3.0], [64.7, 3.0], [64.8, 3.0], [64.9, 3.0], [65.0, 3.0], [65.1, 3.0], [65.2, 3.0], [65.3, 3.0], [65.4, 3.0], [65.5, 3.0], [65.6, 3.0], [65.7, 3.0], [65.8, 3.0], [65.9, 3.0], [66.0, 3.0], [66.1, 3.0], [66.2, 3.0], [66.3, 3.0], [66.4, 3.0], [66.5, 3.0], [66.6, 3.0], [66.7, 3.0], [66.8, 3.0], [66.9, 3.0], [67.0, 3.0], [67.1, 3.0], [67.2, 3.0], [67.3, 3.0], [67.4, 3.0], [67.5, 3.0], [67.6, 3.0], [67.7, 3.0], [67.8, 3.0], [67.9, 3.0], [68.0, 3.0], [68.1, 3.0], [68.2, 3.0], [68.3, 3.0], [68.4, 3.0], [68.5, 3.0], [68.6, 3.0], [68.7, 3.0], [68.8, 3.0], [68.9, 3.0], [69.0, 3.0], [69.1, 3.0], [69.2, 3.0], [69.3, 3.0], [69.4, 3.0], [69.5, 3.0], [69.6, 3.0], [69.7, 3.0], [69.8, 3.0], [69.9, 3.0], [70.0, 3.0], [70.1, 3.0], [70.2, 3.0], [70.3, 3.0], [70.4, 3.0], [70.5, 3.0], [70.6, 3.0], [70.7, 3.0], [70.8, 3.0], [70.9, 3.0], [71.0, 3.0], [71.1, 3.0], [71.2, 3.0], [71.3, 3.0], [71.4, 3.0], [71.5, 3.0], [71.6, 3.0], [71.7, 3.0], [71.8, 3.0], [71.9, 3.0], [72.0, 3.0], [72.1, 3.0], [72.2, 3.0], [72.3, 3.0], [72.4, 3.0], [72.5, 3.0], [72.6, 3.0], [72.7, 3.0], [72.8, 3.0], [72.9, 3.0], [73.0, 3.0], [73.1, 3.0], [73.2, 3.0], [73.3, 3.0], [73.4, 3.0], [73.5, 3.0], [73.6, 3.0], [73.7, 3.0], [73.8, 3.0], [73.9, 3.0], [74.0, 3.0], [74.1, 3.0], [74.2, 3.0], [74.3, 3.0], [74.4, 3.0], [74.5, 3.0], [74.6, 3.0], [74.7, 3.0], [74.8, 3.0], [74.9, 3.0], [75.0, 3.0], [75.1, 3.0], [75.2, 3.0], [75.3, 3.0], [75.4, 3.0], [75.5, 3.0], [75.6, 3.0], [75.7, 3.0], [75.8, 3.0], [75.9, 3.0], [76.0, 3.0], [76.1, 3.0], [76.2, 3.0], [76.3, 3.0], [76.4, 3.0], [76.5, 3.0], [76.6, 3.0], [76.7, 3.0], [76.8, 3.0], [76.9, 3.0], [77.0, 3.0], [77.1, 3.0], [77.2, 3.0], [77.3, 3.0], [77.4, 3.0], [77.5, 3.0], [77.6, 3.0], [77.7, 3.0], [77.8, 3.0], [77.9, 3.0], [78.0, 3.0], [78.1, 3.0], [78.2, 3.0], [78.3, 3.0], [78.4, 3.0], [78.5, 3.0], [78.6, 3.0], [78.7, 3.0], [78.8, 3.0], [78.9, 3.0], [79.0, 3.0], [79.1, 3.0], [79.2, 3.0], [79.3, 4.0], [79.4, 4.0], [79.5, 4.0], [79.6, 4.0], [79.7, 4.0], [79.8, 4.0], [79.9, 4.0], [80.0, 4.0], [80.1, 4.0], [80.2, 4.0], [80.3, 4.0], [80.4, 4.0], [80.5, 4.0], [80.6, 4.0], [80.7, 4.0], [80.8, 4.0], [80.9, 4.0], [81.0, 4.0], [81.1, 4.0], [81.2, 4.0], [81.3, 4.0], [81.4, 4.0], [81.5, 4.0], [81.6, 4.0], [81.7, 4.0], [81.8, 4.0], [81.9, 4.0], [82.0, 4.0], [82.1, 4.0], [82.2, 4.0], [82.3, 4.0], [82.4, 4.0], [82.5, 4.0], [82.6, 4.0], [82.7, 4.0], [82.8, 4.0], [82.9, 4.0], [83.0, 4.0], [83.1, 4.0], [83.2, 4.0], [83.3, 4.0], [83.4, 4.0], [83.5, 4.0], [83.6, 4.0], [83.7, 4.0], [83.8, 4.0], [83.9, 4.0], [84.0, 4.0], [84.1, 4.0], [84.2, 4.0], [84.3, 4.0], [84.4, 4.0], [84.5, 4.0], [84.6, 4.0], [84.7, 4.0], [84.8, 4.0], [84.9, 4.0], [85.0, 4.0], [85.1, 4.0], [85.2, 4.0], [85.3, 4.0], [85.4, 4.0], [85.5, 4.0], [85.6, 4.0], [85.7, 4.0], [85.8, 4.0], [85.9, 4.0], [86.0, 4.0], [86.1, 4.0], [86.2, 4.0], [86.3, 4.0], [86.4, 4.0], [86.5, 4.0], [86.6, 4.0], [86.7, 4.0], [86.8, 4.0], [86.9, 4.0], [87.0, 4.0], [87.1, 4.0], [87.2, 4.0], [87.3, 4.0], [87.4, 4.0], [87.5, 4.0], [87.6, 4.0], [87.7, 4.0], [87.8, 4.0], [87.9, 4.0], [88.0, 4.0], [88.1, 4.0], [88.2, 4.0], [88.3, 4.0], [88.4, 4.0], [88.5, 4.0], [88.6, 4.0], [88.7, 4.0], [88.8, 4.0], [88.9, 4.0], [89.0, 4.0], [89.1, 4.0], [89.2, 4.0], [89.3, 4.0], [89.4, 4.0], [89.5, 4.0], [89.6, 4.0], [89.7, 4.0], [89.8, 4.0], [89.9, 4.0], [90.0, 4.0], [90.1, 4.0], [90.2, 4.0], [90.3, 4.0], [90.4, 4.0], [90.5, 4.0], [90.6, 4.0], [90.7, 4.0], [90.8, 4.0], [90.9, 4.0], [91.0, 4.0], [91.1, 4.0], [91.2, 4.0], [91.3, 4.0], [91.4, 4.0], [91.5, 5.0], [91.6, 5.0], [91.7, 5.0], [91.8, 5.0], [91.9, 5.0], [92.0, 5.0], [92.1, 5.0], [92.2, 5.0], [92.3, 5.0], [92.4, 5.0], [92.5, 5.0], [92.6, 5.0], [92.7, 5.0], [92.8, 5.0], [92.9, 5.0], [93.0, 5.0], [93.1, 5.0], [93.2, 5.0], [93.3, 5.0], [93.4, 5.0], [93.5, 5.0], [93.6, 5.0], [93.7, 5.0], [93.8, 5.0], [93.9, 5.0], [94.0, 5.0], [94.1, 5.0], [94.2, 5.0], [94.3, 5.0], [94.4, 5.0], [94.5, 5.0], [94.6, 5.0], [94.7, 6.0], [94.8, 6.0], [94.9, 6.0], [95.0, 6.0], [95.1, 6.0], [95.2, 6.0], [95.3, 6.0], [95.4, 6.0], [95.5, 6.0], [95.6, 6.0], [95.7, 6.0], [95.8, 6.0], [95.9, 6.0], [96.0, 6.0], [96.1, 6.0], [96.2, 7.0], [96.3, 7.0], [96.4, 7.0], [96.5, 7.0], [96.6, 7.0], [96.7, 7.0], [96.8, 7.0], [96.9, 8.0], [97.0, 8.0], [97.1, 8.0], [97.2, 9.0], [97.3, 9.0], [97.4, 9.0], [97.5, 9.0], [97.6, 10.0], [97.7, 10.0], [97.8, 11.0], [97.9, 11.0], [98.0, 12.0], [98.1, 13.0], [98.2, 14.0], [98.3, 14.0], [98.4, 15.0], [98.5, 16.0], [98.6, 20.0], [98.7, 22.0], [98.8, 25.0], [98.9, 29.0], [99.0, 35.0], [99.1, 37.0], [99.2, 41.0], [99.3, 42.0], [99.4, 43.0], [99.5, 44.0], [99.6, 45.0], [99.7, 47.0], [99.8, 48.0], [99.9, 51.0]], "isOverall": false, "label": "Get DATA Report", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 13278.0, "minX": 0.0, "maxY": 13926.0, "series": [{"data": [[0.0, 13592.0]], "isOverall": false, "label": "Get DATA Info", "isController": false}, {"data": [[0.0, 13926.0]], "isOverall": false, "label": "Get DATA", "isController": false}, {"data": [[0.0, 13278.0]], "isOverall": false, "label": "Get DATA Report", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4.9E-324, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 40796.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 40796.0, "series": [{"data": [[0.0, 40796.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 4.9E-324, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 93.68608695652189, "minX": 1.52712672E12, "maxY": 1000.0, "series": [{"data": [[1.52712714E12, 999.9838366652504], [1.52712696E12, 817.5526807980026], [1.52712702E12, 999.1005897219904], [1.52712684E12, 417.8020667726551], [1.5271269E12, 617.799069767442], [1.52712672E12, 93.68608695652189], [1.52712678E12, 218.48748765228865], [1.52712708E12, 1000.0]], "isOverall": false, "label": "jp@gc Ultima Thread - Patient Data", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52712714E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 4.0, "maxY": 92.0, "series": [{"data": [[7.0, 3.0], [8.0, 4.5], [9.0, 3.0], [11.0, 3.5], [12.0, 2.0], [13.0, 2.0], [14.0, 3.0], [15.0, 6.5], [17.0, 3.0], [18.0, 6.25], [19.0, 2.5], [20.0, 3.0], [21.0, 3.0], [22.0, 3.0], [23.0, 3.0], [25.0, 2.0], [27.0, 3.0], [28.0, 2.0], [29.0, 2.25], [30.0, 2.75], [31.0, 2.6], [32.0, 2.5], [33.0, 3.0], [35.0, 3.0], [34.0, 2.6666666666666665], [37.0, 3.5], [36.0, 3.0], [40.0, 2.5], [42.0, 2.3333333333333335], [45.0, 2.0], [44.0, 3.0], [47.0, 2.5], [46.0, 2.5], [48.0, 3.0], [49.0, 3.25], [51.0, 2.0], [50.0, 2.0], [53.0, 3.3333333333333335], [52.0, 3.0], [55.0, 2.0], [54.0, 5.0], [57.0, 3.0], [56.0, 2.3333333333333335], [59.0, 3.0], [58.0, 3.5], [61.0, 2.5], [60.0, 3.0], [62.0, 3.0], [64.0, 2.3333333333333335], [67.0, 2.5], [65.0, 3.0], [71.0, 2.0], [69.0, 3.5], [68.0, 3.0], [72.0, 2.6666666666666665], [75.0, 3.0], [74.0, 2.6666666666666665], [73.0, 2.5], [79.0, 2.0], [78.0, 2.2], [77.0, 2.0], [76.0, 3.0], [80.0, 2.0], [83.0, 2.0], [82.0, 4.5], [81.0, 2.25], [87.0, 2.0], [86.0, 2.75], [85.0, 2.5], [84.0, 2.75], [91.0, 2.5], [90.0, 3.5], [89.0, 3.5], [88.0, 4.0], [95.0, 40.0], [94.0, 3.6666666666666665], [93.0, 3.0], [92.0, 2.833333333333333], [97.0, 2.0], [96.0, 2.0], [99.0, 2.5], [98.0, 1.8], [103.0, 2.75], [102.0, 4.0], [101.0, 2.0], [100.0, 2.666666666666667], [107.0, 3.0], [106.0, 3.0], [105.0, 2.5], [104.0, 3.0], [111.0, 2.0], [110.0, 3.0], [109.0, 2.2], [108.0, 3.0], [115.0, 3.0], [113.0, 2.0], [112.0, 2.5], [117.0, 2.5], [116.0, 3.5], [119.0, 2.5], [118.0, 3.0], [123.0, 2.0], [122.0, 3.5], [121.0, 2.6666666666666665], [120.0, 3.0], [125.0, 2.0], [127.0, 2.25], [126.0, 2.2], [124.0, 3.0], [130.0, 2.5], [129.0, 2.5], [128.0, 2.4], [134.0, 3.0], [133.0, 2.3333333333333335], [132.0, 16.0], [131.0, 2.5], [143.0, 2.4], [142.0, 2.5], [141.0, 2.25], [140.0, 3.0], [139.0, 4.0], [138.0, 2.75], [137.0, 2.6666666666666665], [136.0, 3.0], [145.0, 10.333333333333332], [144.0, 3.25], [151.0, 2.6666666666666665], [150.0, 2.0], [149.0, 3.0], [148.0, 2.0], [147.0, 2.6666666666666665], [146.0, 4.0], [159.0, 3.5], [158.0, 2.0], [157.0, 1.5], [156.0, 3.5], [155.0, 2.5], [154.0, 2.0], [153.0, 2.75], [152.0, 2.5], [161.0, 2.0], [160.0, 3.0], [167.0, 2.4], [166.0, 1.75], [164.0, 3.0], [163.0, 3.0], [162.0, 22.666666666666668], [175.0, 3.0], [174.0, 2.6666666666666665], [173.0, 2.0], [172.0, 3.0], [171.0, 2.6], [170.0, 2.0], [169.0, 2.6666666666666665], [168.0, 3.0], [179.0, 3.5], [178.0, 2.6666666666666665], [177.0, 3.0], [176.0, 3.0], [183.0, 2.0], [182.0, 2.75], [181.0, 3.25], [180.0, 2.5], [191.0, 2.333333333333333], [190.0, 2.0], [189.0, 2.5], [188.0, 2.4], [187.0, 3.0], [186.0, 2.75], [185.0, 1.0], [184.0, 3.0], [199.0, 2.5], [198.0, 3.0], [197.0, 2.0], [196.0, 2.0], [195.0, 5.0], [194.0, 3.0], [193.0, 3.0], [200.0, 2.9519560741249133], [207.0, 2.6666666666666665], [206.0, 2.3333333333333335], [205.0, 2.6666666666666665], [204.0, 2.6666666666666665], [203.0, 3.3333333333333335], [202.0, 3.0], [201.0, 2.5], [215.0, 2.25], [213.0, 3.0], [212.0, 3.0], [211.0, 4.0], [210.0, 2.0], [209.0, 3.3333333333333335], [208.0, 3.25], [219.0, 11.0], [218.0, 2.75], [217.0, 3.0], [216.0, 2.0], [223.0, 7.666666666666666], [222.0, 6.5], [221.0, 2.6666666666666665], [220.0, 2.0], [226.0, 2.6666666666666665], [231.0, 1.8], [230.0, 2.0], [229.0, 2.3333333333333335], [228.0, 2.0], [227.0, 2.0], [225.0, 2.0], [237.0, 2.25], [239.0, 3.0], [238.0, 3.0], [236.0, 2.4], [235.0, 3.0], [234.0, 2.3333333333333335], [233.0, 24.25], [232.0, 1.5], [246.0, 3.0], [244.0, 2.0], [243.0, 2.666666666666667], [242.0, 2.0], [241.0, 2.3333333333333335], [240.0, 2.6666666666666665], [247.0, 2.0], [253.0, 2.3333333333333335], [255.0, 2.6666666666666665], [254.0, 2.0], [252.0, 3.0], [251.0, 1.0], [250.0, 1.75], [249.0, 1.6666666666666667], [248.0, 2.3333333333333335], [270.0, 3.0], [260.0, 2.75], [261.0, 3.3333333333333335], [263.0, 2.5], [257.0, 2.0], [256.0, 2.0], [259.0, 2.0], [258.0, 2.0], [262.0, 2.0], [271.0, 2.0], [269.0, 2.0], [268.0, 2.0], [267.0, 3.0], [266.0, 2.0], [265.0, 2.0], [264.0, 4.0], [285.0, 2.0], [274.0, 2.3333333333333335], [273.0, 3.0], [272.0, 2.6], [279.0, 3.0], [278.0, 1.6666666666666667], [277.0, 1.8], [276.0, 2.5], [280.0, 2.5], [281.0, 1.5], [287.0, 1.6666666666666667], [286.0, 2.0], [284.0, 2.2], [275.0, 2.5], [283.0, 24.25], [282.0, 2.0], [303.0, 2.6], [292.0, 2.6666666666666665], [293.0, 2.3333333333333335], [298.0, 2.0], [301.0, 2.5], [300.0, 4.5], [299.0, 3.0], [297.0, 2.0], [296.0, 2.3333333333333335], [295.0, 2.166666666666667], [289.0, 3.25], [288.0, 3.5], [291.0, 2.3333333333333335], [290.0, 3.25], [294.0, 1.75], [318.0, 3.25], [306.0, 5.0], [307.0, 2.5], [305.0, 2.333333333333333], [304.0, 3.0], [311.0, 2.0], [310.0, 5.75], [309.0, 6.2], [308.0, 1.75], [319.0, 2.5], [312.0, 2.0], [317.0, 2.166666666666667], [316.0, 2.0], [314.0, 2.0], [313.0, 2.0], [334.0, 2.0], [335.0, 12.4], [333.0, 2.8], [332.0, 2.0], [331.0, 2.6666666666666665], [330.0, 2.5], [329.0, 2.0], [328.0, 1.75], [327.0, 2.5], [321.0, 3.0], [320.0, 3.0], [323.0, 2.6666666666666665], [322.0, 3.0], [326.0, 2.0], [325.0, 3.6666666666666665], [324.0, 2.0], [339.0, 7.8], [343.0, 2.2], [344.0, 2.75], [345.0, 3.0], [347.0, 3.0], [346.0, 2.0], [341.0, 2.3333333333333335], [340.0, 2.6666666666666665], [338.0, 1.5], [337.0, 3.0], [336.0, 1.6666666666666667], [351.0, 2.0], [350.0, 1.5], [349.0, 2.0], [348.0, 1.6666666666666667], [366.0, 2.6666666666666665], [367.0, 2.75], [365.0, 3.0], [364.0, 3.0], [363.0, 2.0], [362.0, 1.75], [361.0, 3.0], [360.0, 2.0], [359.0, 3.0], [353.0, 1.0], [352.0, 1.5], [355.0, 2.3333333333333335], [354.0, 3.0], [358.0, 3.0], [357.0, 3.0], [356.0, 2.0], [383.0, 1.3333333333333333], [378.0, 2.6666666666666665], [382.0, 2.3333333333333335], [381.0, 2.2], [380.0, 2.0], [371.0, 2.3333333333333335], [370.0, 3.0], [369.0, 2.0], [368.0, 2.0], [379.0, 2.0], [377.0, 3.5], [376.0, 2.0], [375.0, 2.5], [374.0, 2.6666666666666665], [373.0, 2.0], [372.0, 1.0], [398.0, 2.0], [385.0, 2.0], [386.0, 25.0], [387.0, 2.5], [384.0, 2.0], [391.0, 3.5], [389.0, 2.0], [388.0, 7.0], [399.0, 2.6666666666666665], [393.0, 2.6666666666666665], [392.0, 3.0], [397.0, 2.0], [396.0, 2.5], [395.0, 1.6666666666666667], [394.0, 2.25], [414.0, 2.0], [400.0, 2.8003901170351115], [401.0, 4.0], [403.0, 3.0], [402.0, 2.0], [407.0, 2.0], [406.0, 2.333333333333333], [405.0, 1.6666666666666667], [404.0, 2.3333333333333335], [415.0, 2.0], [413.0, 2.0], [412.0, 3.3333333333333335], [411.0, 2.0], [410.0, 2.0], [409.0, 2.0], [408.0, 2.0], [430.0, 2.5], [431.0, 2.0], [429.0, 4.0], [428.0, 2.0], [427.0, 2.5], [426.0, 2.0], [425.0, 2.5], [424.0, 2.25], [423.0, 4.0], [417.0, 2.0], [416.0, 3.0], [419.0, 2.0], [418.0, 3.0], [422.0, 2.5], [421.0, 2.75], [420.0, 2.0], [445.0, 2.4285714285714284], [432.0, 3.0], [438.0, 1.6666666666666667], [437.0, 1.8], [436.0, 2.5], [446.0, 3.5], [444.0, 2.0], [435.0, 2.5], [434.0, 2.0], [433.0, 2.75], [443.0, 2.25], [442.0, 2.25], [440.0, 2.0], [447.0, 3.0], [439.0, 45.0], [461.0, 2.3333333333333335], [460.0, 4.0], [451.0, 2.2], [450.0, 3.0], [449.0, 2.0], [448.0, 2.0], [462.0, 2.0], [459.0, 2.2], [458.0, 2.3333333333333335], [457.0, 2.0], [456.0, 2.25], [455.0, 1.6666666666666667], [454.0, 2.25], [452.0, 2.6666666666666665], [478.0, 3.0], [471.0, 4.0], [465.0, 2.5], [464.0, 2.5], [467.0, 2.0], [466.0, 2.5], [479.0, 2.0], [477.0, 2.0], [476.0, 3.0], [475.0, 5.666666666666667], [473.0, 1.75], [472.0, 3.0], [470.0, 3.4], [469.0, 2.0], [468.0, 2.75], [495.0, 2.0], [483.0, 2.0], [482.0, 2.0], [488.0, 12.8], [489.0, 2.0], [491.0, 3.0], [490.0, 2.25], [481.0, 2.6666666666666665], [480.0, 2.4], [487.0, 2.6666666666666665], [486.0, 2.0], [485.0, 2.0], [494.0, 2.0], [493.0, 1.6], [492.0, 2.0], [510.0, 4.0], [511.0, 2.0], [509.0, 2.25], [508.0, 2.5], [507.0, 2.5], [506.0, 2.0], [505.0, 3.6666666666666665], [504.0, 6.0], [503.0, 2.5], [497.0, 1.25], [496.0, 2.25], [499.0, 3.0], [498.0, 2.6666666666666665], [502.0, 2.3333333333333335], [501.0, 2.0], [500.0, 3.0], [541.0, 2.25], [526.0, 2.25], [525.0, 3.0], [524.0, 2.3333333333333335], [523.0, 1.9999999999999998], [522.0, 2.0], [521.0, 2.0], [520.0, 3.0], [536.0, 2.0], [519.0, 2.8], [518.0, 2.0], [517.0, 2.25], [516.0, 2.5], [515.0, 2.0], [514.0, 2.0], [513.0, 3.0], [512.0, 2.6], [527.0, 2.25], [530.0, 2.0], [529.0, 2.4], [528.0, 2.6], [531.0, 2.2], [533.0, 3.6666666666666665], [532.0, 2.0], [535.0, 3.0], [534.0, 2.0], [543.0, 2.5], [542.0, 3.0], [540.0, 2.75], [539.0, 26.5], [538.0, 1.8333333333333335], [537.0, 3.0], [570.0, 2.0], [574.0, 2.5], [545.0, 5.0], [544.0, 1.5], [559.0, 1.6666666666666667], [558.0, 1.6666666666666667], [556.0, 2.0], [555.0, 2.3333333333333335], [554.0, 2.5], [553.0, 2.0], [552.0, 2.75], [566.0, 2.3333333333333335], [567.0, 2.5], [575.0, 2.0], [560.0, 3.5], [563.0, 7.0], [562.0, 4.0], [561.0, 2.5], [565.0, 2.0], [564.0, 4.666666666666666], [573.0, 1.5], [572.0, 3.3333333333333335], [571.0, 2.3333333333333335], [569.0, 2.0], [568.0, 2.3333333333333335], [551.0, 2.0], [550.0, 2.5], [549.0, 2.0], [548.0, 2.4], [547.0, 3.0], [546.0, 22.0], [592.0, 7.5], [596.0, 2.0], [600.0, 2.79448621553885], [601.0, 2.5], [604.0, 2.0], [602.0, 2.5], [606.0, 2.5], [607.0, 2.0], [605.0, 2.0], [583.0, 3.0], [582.0, 2.0], [581.0, 2.3333333333333335], [580.0, 3.75], [579.0, 3.0], [578.0, 2.3333333333333335], [577.0, 2.6666666666666665], [576.0, 3.0], [591.0, 2.0], [590.0, 3.0], [589.0, 3.0], [588.0, 3.0], [587.0, 2.5], [586.0, 2.4], [585.0, 2.4], [584.0, 2.5], [599.0, 1.8], [598.0, 4.0], [597.0, 3.0], [595.0, 2.3333333333333335], [594.0, 3.0], [593.0, 2.5], [633.0, 3.0], [638.0, 2.3333333333333335], [639.0, 2.6666666666666665], [625.0, 5.0], [624.0, 2.5], [627.0, 3.0], [626.0, 2.0], [636.0, 2.5], [635.0, 3.3333333333333335], [634.0, 3.0], [632.0, 1.0], [615.0, 22.4], [614.0, 4.0], [613.0, 2.0], [612.0, 1.75], [611.0, 2.2], [610.0, 1.5714285714285714], [609.0, 2.0], [608.0, 2.0], [623.0, 2.5], [622.0, 3.3333333333333335], [621.0, 3.0], [620.0, 3.0], [619.0, 2.5], [618.0, 3.0], [617.0, 2.3333333333333335], [630.0, 1.0], [628.0, 3.0], [668.0, 2.6666666666666665], [671.0, 3.0], [656.0, 2.0], [658.0, 2.0], [657.0, 2.0], [660.0, 2.4], [659.0, 2.0], [670.0, 2.6666666666666665], [669.0, 2.0], [667.0, 3.0], [666.0, 2.3333333333333335], [665.0, 2.5], [664.0, 2.5], [655.0, 2.0], [641.0, 2.6666666666666665], [640.0, 2.5], [643.0, 2.0], [642.0, 2.5], [645.0, 2.0], [644.0, 2.0], [647.0, 2.0], [646.0, 3.5], [654.0, 2.0], [653.0, 2.5], [651.0, 2.0], [650.0, 2.5], [649.0, 2.6666666666666665], [648.0, 2.0], [663.0, 19.666666666666664], [661.0, 2.0], [699.0, 2.0], [676.0, 2.0], [672.0, 2.0], [680.0, 1.75], [682.0, 2.3333333333333335], [681.0, 2.0], [685.0, 1.3333333333333333], [684.0, 2.0], [687.0, 2.0], [686.0, 2.666666666666667], [679.0, 2.0], [696.0, 2.5], [698.0, 5.666666666666667], [697.0, 2.6666666666666665], [700.0, 2.6], [702.0, 2.0], [688.0, 2.25], [690.0, 3.0], [689.0, 3.5], [693.0, 1.6666666666666667], [691.0, 2.142857142857143], [695.0, 3.3333333333333335], [694.0, 2.6666666666666665], [701.0, 3.0], [678.0, 2.2], [677.0, 2.0], [675.0, 2.75], [674.0, 2.5], [673.0, 1.5], [733.0, 2.2], [708.0, 1.9999999999999998], [719.0, 2.0], [705.0, 3.5], [704.0, 2.5], [707.0, 2.75], [706.0, 2.6666666666666665], [718.0, 2.3333333333333335], [717.0, 2.5], [716.0, 20.571428571428573], [714.0, 2.0], [713.0, 2.2], [712.0, 2.8], [728.0, 2.0], [711.0, 2.2], [710.0, 2.0], [709.0, 2.3333333333333335], [723.0, 2.4], [722.0, 2.0], [721.0, 3.0], [720.0, 2.3333333333333335], [725.0, 2.0], [724.0, 2.25], [727.0, 2.0], [726.0, 14.0], [735.0, 2.5], [734.0, 1.8], [732.0, 2.8], [731.0, 2.0], [730.0, 3.0], [729.0, 2.0], [761.0, 1.75], [765.0, 2.4], [757.0, 2.0], [756.0, 3.3333333333333335], [755.0, 2.2], [754.0, 2.3333333333333335], [753.0, 2.0], [752.0, 2.3333333333333335], [767.0, 2.3333333333333335], [766.0, 2.0], [764.0, 2.0], [763.0, 3.0], [762.0, 12.5], [760.0, 3.0], [743.0, 2.0], [742.0, 2.3750000000000004], [741.0, 2.0], [740.0, 2.166666666666667], [739.0, 2.0], [738.0, 3.5], [737.0, 2.0], [736.0, 2.6], [751.0, 3.3333333333333335], [749.0, 2.0], [748.0, 2.5], [747.0, 3.0], [746.0, 1.75], [745.0, 2.5], [744.0, 2.166666666666667], [759.0, 3.25], [758.0, 2.0], [795.0, 2.3333333333333335], [772.0, 2.25], [771.0, 2.0], [770.0, 2.0], [769.0, 2.0], [768.0, 1.75], [783.0, 4.333333333333333], [782.0, 5.75], [780.0, 2.75], [779.0, 3.0], [778.0, 3.0], [777.0, 2.0], [776.0, 1.6666666666666667], [773.0, 2.0], [799.0, 2.0], [784.0, 3.0], [786.0, 2.6666666666666665], [785.0, 1.5], [788.0, 2.5], [787.0, 1.8], [791.0, 2.5], [790.0, 2.2], [798.0, 2.5], [797.0, 2.0], [794.0, 3.6666666666666665], [793.0, 2.4], [792.0, 2.0], [775.0, 3.0], [774.0, 2.0], [828.0, 3.0], [800.0, 3.1020408163265265], [815.0, 2.0], [814.0, 2.0], [813.0, 3.0], [812.0, 2.5], [811.0, 2.5], [810.0, 2.3333333333333335], [809.0, 2.5], [808.0, 2.3333333333333335], [801.0, 2.6666666666666665], [831.0, 2.5], [817.0, 2.0], [816.0, 1.6666666666666667], [819.0, 2.0], [818.0, 3.0], [821.0, 2.0], [820.0, 3.2], [823.0, 2.0], [822.0, 2.6666666666666665], [830.0, 3.0], [829.0, 17.0], [827.0, 5.0], [826.0, 3.0], [825.0, 3.3333333333333335], [824.0, 2.4], [807.0, 2.3333333333333335], [806.0, 2.6666666666666665], [805.0, 2.2], [804.0, 3.0], [802.0, 3.0], [856.0, 3.5], [861.0, 2.5714285714285716], [848.0, 2.3333333333333335], [855.0, 2.5], [862.0, 2.6666666666666665], [863.0, 2.0], [860.0, 4.2], [858.0, 2.3333333333333335], [857.0, 3.0], [847.0, 2.3333333333333335], [833.0, 2.75], [832.0, 2.4], [835.0, 2.0], [834.0, 3.0], [837.0, 2.6666666666666665], [836.0, 2.2], [839.0, 1.6666666666666667], [838.0, 2.2], [846.0, 3.0], [845.0, 3.3333333333333335], [844.0, 2.75], [842.0, 3.0], [841.0, 2.5], [840.0, 2.2], [854.0, 2.5], [853.0, 2.6666666666666665], [851.0, 2.0], [850.0, 2.0], [849.0, 2.6666666666666665], [892.0, 2.5], [879.0, 2.0], [878.0, 3.3333333333333335], [877.0, 3.2], [876.0, 2.6666666666666665], [875.0, 2.0], [874.0, 2.0], [873.0, 1.6666666666666667], [872.0, 2.0], [895.0, 2.5], [881.0, 2.5], [880.0, 3.0], [883.0, 2.6666666666666665], [882.0, 2.0], [885.0, 2.25], [884.0, 2.75], [894.0, 2.3333333333333335], [893.0, 2.0], [891.0, 2.3333333333333335], [890.0, 6.0], [889.0, 2.833333333333333], [871.0, 1.5], [870.0, 3.0], [869.0, 7.0], [868.0, 6.857142857142857], [865.0, 2.0], [864.0, 2.6666666666666665], [887.0, 2.0], [886.0, 3.0], [921.0, 2.5], [925.0, 2.0], [913.0, 3.0], [914.0, 2.0], [916.0, 2.75], [915.0, 2.0], [918.0, 2.0], [917.0, 2.25], [927.0, 2.5], [926.0, 27.0], [924.0, 3.0], [923.0, 4.333333333333333], [922.0, 2.25], [920.0, 2.0], [903.0, 2.0], [902.0, 2.0], [901.0, 2.0], [900.0, 2.5], [899.0, 2.0], [898.0, 2.6666666666666665], [897.0, 2.0], [896.0, 5.333333333333334], [911.0, 2.166666666666667], [910.0, 2.5], [909.0, 2.0], [908.0, 2.0], [907.0, 2.0], [906.0, 2.0], [905.0, 2.6666666666666665], [904.0, 2.5], [957.0, 6.5], [944.0, 2.5], [945.0, 3.0], [947.0, 3.0], [946.0, 2.5], [949.0, 8.333333333333334], [948.0, 2.0], [959.0, 2.6666666666666665], [958.0, 2.0], [955.0, 2.3333333333333335], [954.0, 2.5], [953.0, 2.0], [952.0, 2.2], [943.0, 2.2], [929.0, 3.0], [928.0, 2.5], [931.0, 1.0], [930.0, 2.6666666666666665], [933.0, 2.5], [932.0, 2.0], [935.0, 5.8], [934.0, 3.0], [942.0, 4.0], [940.0, 3.0], [939.0, 2.0], [936.0, 2.6666666666666665], [951.0, 3.0], [950.0, 2.0], [988.0, 2.5], [964.0, 2.25], [971.0, 1.75], [967.0, 3.0], [984.0, 1.75], [987.0, 2.75], [985.0, 2.571428571428571], [989.0, 2.285714285714286], [991.0, 2.0], [977.0, 2.0], [976.0, 2.0], [979.0, 3.0], [978.0, 7.5], [981.0, 2.0], [980.0, 2.3333333333333335], [983.0, 2.0], [982.0, 2.2], [990.0, 2.0], [970.0, 2.1666666666666665], [969.0, 2.25], [968.0, 3.3333333333333335], [966.0, 2.0], [965.0, 2.5], [963.0, 2.0], [962.0, 2.2], [961.0, 2.0], [960.0, 2.5], [975.0, 2.0], [974.0, 28.0], [973.0, 2.0], [972.0, 2.0], [996.0, 2.0], [1000.0, 3.140588608935002], [999.0, 2.5], [998.0, 11.636363636363635], [997.0, 2.5], [995.0, 3.0], [994.0, 2.0], [993.0, 2.3333333333333335], [992.0, 1.8571428571428572]], "isOverall": false, "label": "Get DATA Info", "isController": false}, {"data": [[679.567907592705, 3.029649793996465]], "isOverall": false, "label": "Get DATA Info-Aggregated", "isController": false}, {"data": [[4.0, 42.0], [5.0, 6.0], [8.0, 9.5], [9.0, 4.0], [10.0, 5.0], [11.0, 5.0], [12.0, 4.0], [13.0, 5.5], [14.0, 3.0], [15.0, 6.25], [16.0, 3.0], [17.0, 3.0], [18.0, 5.5], [20.0, 3.0], [22.0, 3.25], [23.0, 4.0], [24.0, 3.6666666666666665], [25.0, 3.0], [26.0, 3.25], [27.0, 3.3333333333333335], [28.0, 3.25], [29.0, 2.0], [30.0, 3.0], [31.0, 2.5], [32.0, 3.0], [33.0, 2.0], [34.0, 3.0], [35.0, 3.0], [36.0, 4.333333333333333], [37.0, 3.0], [39.0, 3.0], [38.0, 3.6666666666666665], [41.0, 3.5], [40.0, 3.166666666666667], [43.0, 3.0], [42.0, 4.0], [45.0, 3.2], [44.0, 3.5], [47.0, 3.0], [46.0, 3.5], [49.0, 3.25], [48.0, 3.0], [50.0, 3.0], [53.0, 3.5], [52.0, 4.333333333333333], [55.0, 3.5], [54.0, 4.0], [57.0, 3.0], [56.0, 4.0], [59.0, 3.3333333333333335], [58.0, 4.0], [61.0, 4.0], [60.0, 3.0], [63.0, 3.5], [62.0, 3.0], [64.0, 4.0], [67.0, 2.5], [66.0, 35.0], [65.0, 2.75], [71.0, 11.5], [70.0, 3.0], [69.0, 2.5], [68.0, 4.25], [73.0, 2.833333333333333], [72.0, 3.5], [75.0, 3.0], [74.0, 3.3333333333333335], [79.0, 3.0], [78.0, 2.6666666666666665], [77.0, 2.8], [76.0, 3.0], [83.0, 2.8], [82.0, 5.333333333333333], [81.0, 2.0], [80.0, 2.0], [87.0, 3.25], [86.0, 3.2], [85.0, 2.3333333333333335], [84.0, 3.3333333333333335], [88.0, 2.6666666666666665], [91.0, 3.0], [90.0, 3.3333333333333335], [89.0, 3.0], [95.0, 18.2], [94.0, 4.75], [93.0, 3.0], [92.0, 4.0], [97.0, 2.25], [96.0, 3.3333333333333335], [99.0, 3.0], [98.0, 3.0], [103.0, 3.0], [102.0, 3.3333333333333335], [101.0, 3.2], [100.0, 3.0], [107.0, 2.8], [106.0, 4.333333333333333], [105.0, 2.5], [104.0, 3.25], [111.0, 3.25], [110.0, 2.0], [109.0, 3.0], [108.0, 3.0], [115.0, 2.3333333333333335], [114.0, 3.3333333333333335], [113.0, 3.5], [112.0, 2.8333333333333335], [118.0, 3.0], [117.0, 3.0], [116.0, 3.3333333333333335], [119.0, 2.857142857142857], [123.0, 4.0], [122.0, 3.0], [121.0, 3.8], [120.0, 2.5], [127.0, 3.0], [126.0, 3.3333333333333335], [125.0, 2.75], [124.0, 3.0], [130.0, 2.5], [129.0, 2.3333333333333335], [128.0, 3.3333333333333335], [135.0, 2.5], [134.0, 3.3333333333333335], [133.0, 10.8], [132.0, 8.75], [131.0, 3.6666666666666665], [143.0, 3.0], [142.0, 2.4], [141.0, 2.5], [140.0, 3.0], [139.0, 2.3333333333333335], [138.0, 2.0], [137.0, 2.4], [136.0, 3.3333333333333335], [145.0, 15.25], [144.0, 2.5], [151.0, 2.5], [150.0, 2.6666666666666665], [149.0, 2.75], [148.0, 3.3333333333333335], [147.0, 3.0], [146.0, 2.75], [159.0, 4.0], [158.0, 3.0], [157.0, 2.3333333333333335], [156.0, 2.5], [155.0, 2.3333333333333335], [154.0, 3.0], [153.0, 2.4], [152.0, 3.0], [161.0, 3.0], [160.0, 2.4], [167.0, 3.0], [166.0, 3.0], [165.0, 3.3333333333333335], [164.0, 2.0], [163.0, 3.25], [162.0, 20.666666666666664], [175.0, 3.3333333333333335], [174.0, 3.5], [173.0, 4.0], [172.0, 3.6], [171.0, 2.6666666666666665], [170.0, 4.0], [169.0, 3.2], [168.0, 2.5], [179.0, 3.166666666666667], [178.0, 3.0], [177.0, 3.0], [176.0, 4.666666666666666], [183.0, 2.0], [182.0, 2.75], [181.0, 3.0], [191.0, 2.5], [190.0, 2.0], [189.0, 2.6666666666666665], [188.0, 2.8], [187.0, 2.6666666666666665], [186.0, 2.8], [185.0, 3.0], [184.0, 3.0], [199.0, 2.0], [198.0, 3.5], [197.0, 3.3333333333333335], [196.0, 2.0], [195.0, 3.75], [194.0, 3.5], [193.0, 3.2], [192.0, 2.0], [200.0, 3.2121834360027397], [207.0, 3.0], [206.0, 3.0], [205.0, 2.8571428571428568], [204.0, 3.0], [203.0, 3.0], [202.0, 2.6666666666666665], [201.0, 3.0], [215.0, 2.5], [214.0, 4.0], [213.0, 3.25], [212.0, 4.0], [211.0, 5.0], [210.0, 6.0], [209.0, 4.75], [208.0, 3.0], [219.0, 8.0], [218.0, 4.0], [217.0, 3.0], [216.0, 2.625], [223.0, 8.25], [222.0, 9.5], [221.0, 3.3333333333333335], [220.0, 2.5], [231.0, 2.75], [230.0, 1.5], [229.0, 3.0], [228.0, 2.0], [227.0, 2.3333333333333335], [226.0, 10.5], [225.0, 2.6666666666666665], [224.0, 1.0], [239.0, 2.75], [238.0, 2.5], [237.0, 2.6666666666666665], [236.0, 2.0], [235.0, 2.666666666666667], [234.0, 2.6666666666666665], [233.0, 7.666666666666666], [232.0, 2.0], [246.0, 3.6666666666666665], [245.0, 2.25], [244.0, 2.25], [243.0, 2.6666666666666665], [242.0, 3.0], [241.0, 2.5], [240.0, 2.0], [247.0, 3.0], [255.0, 3.0], [254.0, 2.0], [253.0, 2.25], [252.0, 2.6666666666666665], [251.0, 2.5714285714285716], [250.0, 3.0], [249.0, 2.25], [248.0, 2.8], [270.0, 3.0], [271.0, 2.2], [269.0, 2.6666666666666665], [268.0, 2.5], [267.0, 2.6], [266.0, 3.0], [265.0, 2.0], [264.0, 3.75], [263.0, 2.4], [257.0, 2.4], [256.0, 2.0], [259.0, 2.25], [258.0, 2.0], [262.0, 2.5], [261.0, 3.25], [260.0, 2.3333333333333335], [286.0, 2.3333333333333335], [273.0, 2.5], [274.0, 2.3333333333333335], [275.0, 2.0], [272.0, 2.6666666666666665], [279.0, 2.0], [278.0, 2.0], [277.0, 2.0], [276.0, 2.5], [287.0, 3.25], [281.0, 2.5], [280.0, 2.5], [285.0, 3.0], [284.0, 2.6], [283.0, 18.0], [282.0, 2.6666666666666665], [302.0, 2.8], [291.0, 2.6], [290.0, 3.3333333333333335], [289.0, 3.5], [288.0, 2.0], [303.0, 2.0], [301.0, 2.25], [300.0, 5.666666666666667], [299.0, 3.4], [297.0, 2.8], [296.0, 2.6666666666666665], [295.0, 2.0], [294.0, 2.75], [293.0, 3.5], [292.0, 3.5], [318.0, 3.0], [305.0, 2.0], [306.0, 2.8], [307.0, 2.0], [304.0, 2.0], [311.0, 2.0], [310.0, 7.5], [309.0, 6.666666666666667], [308.0, 3.0], [319.0, 3.5], [313.0, 2.0], [312.0, 2.0], [317.0, 2.0], [316.0, 2.0], [315.0, 3.0], [314.0, 2.285714285714286], [334.0, 3.0], [320.0, 2.3333333333333335], [326.0, 2.75], [325.0, 2.75], [324.0, 3.0], [327.0, 4.0], [335.0, 29.5], [333.0, 3.4], [332.0, 3.0], [323.0, 3.2], [322.0, 6.0], [321.0, 3.0], [331.0, 2.3333333333333335], [330.0, 2.2], [329.0, 3.0], [328.0, 3.0], [339.0, 6.5], [343.0, 3.0], [342.0, 2.5], [344.0, 2.25], [345.0, 2.5], [347.0, 2.3333333333333335], [346.0, 2.4], [341.0, 2.5], [340.0, 3.0], [338.0, 2.0], [336.0, 3.0], [351.0, 4.0], [350.0, 2.6], [349.0, 2.0], [348.0, 2.0], [366.0, 2.3333333333333335], [355.0, 2.75], [354.0, 2.6666666666666665], [353.0, 2.25], [352.0, 2.0], [359.0, 3.0], [358.0, 3.3333333333333335], [357.0, 2.6666666666666665], [356.0, 4.0], [367.0, 3.0], [365.0, 3.0], [364.0, 3.4285714285714284], [363.0, 2.5], [362.0, 2.0], [361.0, 2.6666666666666665], [360.0, 3.0], [382.0, 2.3333333333333335], [383.0, 3.3333333333333335], [381.0, 2.5], [380.0, 2.2], [379.0, 2.0], [378.0, 4.5], [377.0, 3.0], [376.0, 2.8], [375.0, 2.0], [369.0, 2.666666666666667], [368.0, 2.8], [371.0, 2.4], [370.0, 3.0], [374.0, 2.166666666666667], [373.0, 2.5], [372.0, 3.0], [385.0, 2.3333333333333335], [384.0, 2.0], [391.0, 3.0], [390.0, 2.5], [389.0, 3.2], [388.0, 3.5], [393.0, 2.5], [399.0, 1.75], [398.0, 4.666666666666667], [397.0, 2.4], [396.0, 3.5], [387.0, 3.333333333333333], [395.0, 2.0], [394.0, 2.0], [392.0, 2.5], [414.0, 2.6666666666666665], [400.0, 3.102108036890642], [401.0, 2.6], [403.0, 3.5], [402.0, 2.3333333333333335], [407.0, 3.0], [406.0, 2.6666666666666665], [405.0, 2.5], [404.0, 3.0], [415.0, 2.0], [413.0, 2.2], [412.0, 4.0], [411.0, 2.0], [410.0, 2.6], [409.0, 2.6], [408.0, 2.2], [430.0, 3.0], [420.0, 3.0], [421.0, 3.0], [423.0, 3.1666666666666665], [417.0, 2.0], [416.0, 2.6666666666666665], [419.0, 2.0], [418.0, 3.5], [422.0, 2.5], [431.0, 2.4], [429.0, 3.8], [428.0, 2.3333333333333335], [427.0, 2.3333333333333335], [426.0, 3.0], [425.0, 2.6], [424.0, 3.0], [446.0, 3.0], [432.0, 2.8], [433.0, 3.5], [435.0, 3.3333333333333335], [434.0, 2.5], [439.0, 14.0], [438.0, 2.6666666666666665], [437.0, 2.0], [436.0, 2.0], [447.0, 2.75], [445.0, 2.3333333333333335], [444.0, 2.6], [443.0, 2.2], [442.0, 2.3333333333333335], [441.0, 2.0], [440.0, 2.142857142857143], [462.0, 3.0], [463.0, 2.0], [461.0, 2.5], [460.0, 5.0], [459.0, 2.6666666666666665], [458.0, 2.6666666666666665], [457.0, 2.4], [456.0, 2.3333333333333335], [455.0, 2.3333333333333335], [449.0, 2.833333333333333], [448.0, 2.5], [451.0, 2.3333333333333335], [450.0, 3.0], [454.0, 2.6666666666666665], [453.0, 2.2], [452.0, 3.0], [478.0, 2.0], [479.0, 2.3333333333333335], [477.0, 1.5], [476.0, 2.666666666666667], [475.0, 4.0], [474.0, 3.0], [473.0, 2.3333333333333335], [472.0, 1.6666666666666667], [471.0, 2.4], [465.0, 2.25], [464.0, 2.5], [467.0, 2.0], [466.0, 3.0], [470.0, 2.0], [469.0, 3.0], [468.0, 2.5], [494.0, 2.25], [482.0, 2.8], [484.0, 2.5], [485.0, 2.0], [487.0, 2.2], [486.0, 2.75], [483.0, 2.0], [481.0, 3.6666666666666665], [480.0, 3.6666666666666665], [495.0, 2.5], [489.0, 2.0], [488.0, 15.75], [491.0, 2.5], [490.0, 2.6666666666666665], [493.0, 2.714285714285714], [492.0, 2.0], [510.0, 2.6], [511.0, 2.5], [509.0, 2.3333333333333335], [508.0, 3.5], [507.0, 2.6666666666666665], [506.0, 2.25], [505.0, 2.0], [504.0, 6.0], [503.0, 2.5], [497.0, 2.0], [496.0, 3.25], [499.0, 3.6], [498.0, 2.75], [502.0, 2.0], [501.0, 3.0], [500.0, 3.0], [537.0, 3.666666666666667], [542.0, 2.3333333333333335], [543.0, 3.8], [529.0, 3.0], [528.0, 2.0], [531.0, 2.8], [530.0, 2.3333333333333335], [533.0, 5.0], [532.0, 3.0], [540.0, 2.8], [539.0, 4.25], [538.0, 2.5], [536.0, 2.3333333333333335], [519.0, 2.6666666666666665], [518.0, 3.0], [517.0, 2.6], [516.0, 3.0], [515.0, 2.0], [514.0, 2.166666666666667], [513.0, 3.285714285714286], [512.0, 2.5], [526.0, 2.0], [525.0, 2.3333333333333335], [524.0, 2.0], [523.0, 3.0], [522.0, 2.5], [521.0, 3.25], [520.0, 2.8], [535.0, 3.0], [534.0, 2.0], [573.0, 2.0], [545.0, 3.0], [544.0, 3.0], [559.0, 3.0], [558.0, 2.6666666666666665], [557.0, 2.75], [556.0, 2.0], [555.0, 3.0], [554.0, 2.0], [553.0, 2.3750000000000004], [552.0, 2.6666666666666665], [567.0, 2.3333333333333335], [566.0, 2.0], [565.0, 2.6], [564.0, 3.0], [563.0, 5.0], [562.0, 2.5], [561.0, 3.0], [560.0, 2.6666666666666665], [575.0, 2.0], [574.0, 2.0], [572.0, 3.0], [571.0, 2.25], [570.0, 2.0], [569.0, 2.5], [568.0, 3.0], [551.0, 2.5], [550.0, 5.75], [549.0, 3.0], [548.0, 3.0], [547.0, 3.0], [546.0, 3.5], [592.0, 2.5], [596.0, 2.5], [600.0, 2.981033355134072], [601.0, 2.0], [603.0, 2.833333333333333], [602.0, 2.6], [604.0, 2.8], [606.0, 2.5], [607.0, 2.5], [605.0, 2.0], [583.0, 2.571428571428571], [582.0, 2.5], [581.0, 2.25], [580.0, 2.5], [579.0, 2.3333333333333335], [578.0, 3.0], [577.0, 2.6666666666666665], [576.0, 4.0], [591.0, 7.0], [590.0, 24.25], [589.0, 3.0], [588.0, 2.0], [586.0, 2.25], [585.0, 2.3333333333333335], [584.0, 2.4285714285714284], [599.0, 2.0], [598.0, 2.833333333333333], [597.0, 2.75], [595.0, 3.0], [594.0, 2.5], [593.0, 3.0], [636.0, 2.2], [639.0, 2.0], [625.0, 4.0], [624.0, 2.5], [627.0, 3.0], [626.0, 2.5], [629.0, 2.5], [628.0, 2.25], [638.0, 2.0], [637.0, 3.0], [635.0, 2.5], [634.0, 3.0], [633.0, 2.6], [632.0, 2.8], [623.0, 2.6666666666666665], [609.0, 2.0], [608.0, 3.6666666666666665], [611.0, 3.5], [610.0, 2.6666666666666665], [613.0, 3.0], [612.0, 3.0], [615.0, 21.0], [614.0, 4.333333333333333], [622.0, 2.6666666666666665], [621.0, 4.0], [620.0, 3.0], [619.0, 2.5], [618.0, 3.0], [617.0, 2.0], [616.0, 2.4], [631.0, 3.0], [630.0, 2.375], [668.0, 3.0], [671.0, 3.5], [656.0, 3.0], [658.0, 2.0], [657.0, 2.5], [660.0, 3.0], [659.0, 2.4285714285714284], [670.0, 5.0], [669.0, 3.3333333333333335], [667.0, 2.5714285714285716], [666.0, 3.0], [665.0, 2.0], [664.0, 2.0], [655.0, 2.8], [641.0, 3.0], [640.0, 2.6666666666666665], [643.0, 2.0], [642.0, 2.5], [645.0, 2.75], [644.0, 2.3333333333333335], [647.0, 2.25], [646.0, 2.8], [654.0, 3.0], [653.0, 3.0], [652.0, 2.5], [651.0, 2.0], [650.0, 2.75], [649.0, 2.0], [648.0, 2.75], [663.0, 19.285714285714285], [661.0, 3.0], [698.0, 5.833333333333333], [675.0, 5.2], [680.0, 2.6], [682.0, 2.75], [681.0, 2.4], [684.0, 2.5], [683.0, 2.0], [686.0, 2.5], [685.0, 2.3333333333333335], [678.0, 2.375], [697.0, 2.5], [696.0, 3.0], [677.0, 2.6666666666666665], [676.0, 3.3333333333333335], [674.0, 2.666666666666667], [673.0, 3.3333333333333335], [672.0, 2.0], [687.0, 2.0], [702.0, 2.5714285714285716], [701.0, 2.0], [700.0, 2.5], [699.0, 3.0], [703.0, 3.0], [689.0, 3.5], [688.0, 2.0], [691.0, 2.6666666666666665], [690.0, 2.0], [693.0, 2.3333333333333335], [692.0, 2.4], [695.0, 3.0], [694.0, 2.5], [732.0, 2.4], [735.0, 1.5], [720.0, 2.6], [723.0, 1.0], [722.0, 2.6666666666666665], [725.0, 2.5], [724.0, 2.5], [734.0, 2.6], [733.0, 2.0], [731.0, 2.0], [730.0, 2.0], [729.0, 7.5], [728.0, 2.0], [719.0, 3.0], [705.0, 2.6666666666666665], [704.0, 2.0], [707.0, 2.2], [706.0, 2.6666666666666665], [709.0, 2.0], [708.0, 1.5], [711.0, 2.3333333333333335], [710.0, 2.8], [718.0, 2.833333333333333], [717.0, 3.0], [716.0, 12.375], [715.0, 2.5], [714.0, 3.0], [713.0, 2.25], [727.0, 1.5], [726.0, 5.666666666666667], [763.0, 3.0], [751.0, 4.0], [750.0, 2.75], [749.0, 2.5], [748.0, 2.0], [747.0, 3.25], [746.0, 2.6666666666666665], [745.0, 3.0], [744.0, 2.75], [756.0, 2.5], [755.0, 2.8], [754.0, 2.3333333333333335], [753.0, 2.3333333333333335], [752.0, 2.6666666666666665], [767.0, 2.3333333333333335], [766.0, 2.4], [757.0, 2.6666666666666665], [765.0, 2.5], [764.0, 2.75], [762.0, 25.5], [761.0, 3.0], [760.0, 4.0], [743.0, 3.3333333333333335], [742.0, 2.25], [741.0, 2.6666666666666665], [740.0, 2.3333333333333335], [739.0, 2.5], [738.0, 2.8], [737.0, 2.6], [736.0, 3.0], [759.0, 4.0], [758.0, 2.5], [793.0, 3.0], [798.0, 3.75], [799.0, 2.5], [785.0, 2.6], [784.0, 2.0], [787.0, 3.0], [786.0, 2.0], [789.0, 2.5], [788.0, 2.166666666666667], [796.0, 4.5], [795.0, 3.0], [794.0, 2.0], [792.0, 3.0], [775.0, 2.5], [774.0, 2.2], [773.0, 2.3333333333333335], [772.0, 2.8750000000000004], [771.0, 2.3333333333333335], [770.0, 2.2500000000000004], [769.0, 2.0], [768.0, 2.5], [783.0, 6.0], [782.0, 3.3333333333333335], [781.0, 2.5], [780.0, 2.5], [779.0, 3.0], [777.0, 2.4], [776.0, 2.75], [791.0, 3.5], [790.0, 2.25], [827.0, 1.0], [800.0, 3.1665594855305415], [802.0, 2.75], [801.0, 2.5], [804.0, 2.4], [803.0, 2.0], [806.0, 2.0], [805.0, 2.6666666666666665], [814.0, 2.5], [813.0, 2.6], [812.0, 2.6], [811.0, 2.666666666666667], [810.0, 2.0], [809.0, 2.5], [808.0, 2.4], [807.0, 2.75], [831.0, 2.75], [817.0, 2.5], [816.0, 2.2], [819.0, 3.0], [818.0, 2.5], [821.0, 2.25], [820.0, 3.0], [823.0, 3.0], [822.0, 2.0], [830.0, 3.0], [829.0, 22.75], [826.0, 3.2], [825.0, 3.5], [824.0, 2.0], [856.0, 2.5], [860.0, 3.25], [837.0, 3.3333333333333335], [836.0, 2.6666666666666665], [835.0, 2.25], [834.0, 2.0], [833.0, 2.5], [832.0, 2.0], [839.0, 2.0], [838.0, 2.5], [847.0, 2.3333333333333335], [846.0, 2.75], [845.0, 3.0], [844.0, 4.0], [843.0, 2.0], [842.0, 6.0], [841.0, 3.0], [840.0, 2.3333333333333335], [861.0, 3.0], [863.0, 2.2], [862.0, 2.5], [849.0, 2.25], [848.0, 3.0], [851.0, 2.6666666666666665], [850.0, 2.857142857142857], [853.0, 3.5], [852.0, 2.5], [859.0, 2.6666666666666665], [858.0, 2.75], [857.0, 3.0], [855.0, 3.6666666666666665], [854.0, 2.0], [892.0, 2.6666666666666665], [895.0, 2.25], [881.0, 2.25], [880.0, 2.0], [883.0, 2.5], [882.0, 5.75], [885.0, 2.0], [884.0, 3.0], [894.0, 3.3333333333333335], [893.0, 2.5], [891.0, 2.3333333333333335], [890.0, 8.0], [889.0, 3.0], [888.0, 2.8], [879.0, 2.0], [864.0, 2.6666666666666665], [866.0, 2.0], [865.0, 2.0], [869.0, 3.0], [868.0, 7.428571428571429], [871.0, 2.6666666666666665], [870.0, 3.0], [878.0, 16.42857142857143], [877.0, 3.5], [876.0, 3.0], [875.0, 3.0], [874.0, 2.6666666666666665], [873.0, 2.6], [872.0, 3.8], [887.0, 2.2], [886.0, 2.2], [924.0, 3.25], [923.0, 2.0], [927.0, 2.6666666666666665], [913.0, 4.6], [912.0, 2.0], [915.0, 3.0], [914.0, 3.4], [917.0, 2.5], [916.0, 2.0], [926.0, 16.5], [925.0, 2.0], [922.0, 4.666666666666667], [921.0, 2.75], [920.0, 2.6], [911.0, 2.3333333333333335], [897.0, 2.6666666666666665], [896.0, 2.0], [899.0, 2.75], [898.0, 2.5], [901.0, 2.0], [900.0, 2.5], [903.0, 2.0], [902.0, 2.166666666666667], [910.0, 3.0], [909.0, 2.6666666666666665], [908.0, 1.6666666666666667], [907.0, 3.0], [906.0, 2.857142857142857], [905.0, 2.166666666666667], [904.0, 2.75], [919.0, 2.8], [918.0, 2.6], [956.0, 2.6666666666666665], [959.0, 2.3333333333333335], [945.0, 2.4444444444444446], [944.0, 2.0], [947.0, 3.0], [946.0, 3.0], [949.0, 4.0], [948.0, 2.5], [958.0, 2.5], [957.0, 8.666666666666666], [955.0, 2.0], [954.0, 2.6666666666666665], [953.0, 2.0], [952.0, 2.5], [943.0, 3.3333333333333335], [929.0, 2.5], [928.0, 2.3333333333333335], [931.0, 3.0], [930.0, 2.75], [933.0, 2.5], [932.0, 2.833333333333333], [935.0, 6.75], [934.0, 2.6], [942.0, 3.0], [941.0, 2.5], [940.0, 2.4], [939.0, 2.5714285714285716], [938.0, 3.0], [937.0, 2.3333333333333335], [936.0, 4.5], [951.0, 2.3333333333333335], [950.0, 2.5], [988.0, 2.3333333333333335], [964.0, 2.6666666666666665], [966.0, 2.0], [967.0, 4.25], [985.0, 2.0], [984.0, 2.0], [987.0, 2.0], [986.0, 3.3333333333333335], [989.0, 2.3333333333333335], [983.0, 2.5], [982.0, 1.75], [981.0, 2.3333333333333335], [980.0, 3.0], [979.0, 2.5], [978.0, 10.5], [977.0, 2.0], [976.0, 4.333333333333334], [991.0, 2.166666666666667], [972.0, 2.25], [973.0, 2.75], [975.0, 2.0], [974.0, 14.0], [961.0, 3.0], [960.0, 2.5], [963.0, 4.4], [962.0, 2.5], [971.0, 3.0], [970.0, 2.3333333333333335], [969.0, 2.6666666666666665], [968.0, 3.0], [965.0, 2.25], [996.0, 2.6], [1000.0, 3.1476078094829423], [999.0, 2.5], [998.0, 13.125000000000002], [997.0, 2.6], [995.0, 3.0], [994.0, 2.2857142857142856], [993.0, 2.3333333333333335], [992.0, 2.2]], "isOverall": false, "label": "Get DATA", "isController": false}, {"data": [[673.7643975298, 3.1816745655608143]], "isOverall": false, "label": "Get DATA-Aggregated", "isController": false}, {"data": [[11.0, 6.0], [12.0, 3.0], [13.0, 8.0], [14.0, 4.333333333333333], [16.0, 4.5], [17.0, 4.0], [18.0, 5.0], [19.0, 3.0], [20.0, 4.0], [21.0, 3.5], [22.0, 3.5], [23.0, 4.0], [24.0, 8.666666666666666], [25.0, 5.25], [26.0, 2.0], [30.0, 3.5], [31.0, 3.0], [33.0, 3.25], [32.0, 3.6666666666666665], [35.0, 2.6666666666666665], [34.0, 3.0], [37.0, 2.6666666666666665], [36.0, 3.0], [39.0, 3.0], [38.0, 3.0], [41.0, 6.0], [40.0, 3.6666666666666665], [43.0, 3.0], [45.0, 3.0], [44.0, 4.0], [46.0, 2.5], [49.0, 3.0], [48.0, 4.0], [50.0, 3.0], [53.0, 4.0], [52.0, 2.6666666666666665], [55.0, 4.5], [54.0, 6.0], [57.0, 4.0], [56.0, 3.0], [59.0, 4.0], [58.0, 4.0], [61.0, 3.5], [60.0, 3.0], [62.0, 2.5], [63.0, 3.3333333333333335], [67.0, 3.5], [66.0, 4.0], [65.0, 3.3333333333333335], [64.0, 3.0], [71.0, 4.0], [70.0, 2.5], [69.0, 3.25], [72.0, 3.0], [75.0, 3.0], [74.0, 3.0], [79.0, 3.75], [78.0, 2.0], [77.0, 3.25], [76.0, 4.0], [80.0, 3.5], [82.0, 4.5], [87.0, 3.5], [86.0, 4.0], [85.0, 4.666666666666667], [84.0, 3.3333333333333335], [91.0, 3.6666666666666665], [90.0, 4.5], [89.0, 2.0], [88.0, 2.0], [95.0, 31.5], [94.0, 4.0], [93.0, 4.0], [92.0, 3.5], [96.0, 2.5], [99.0, 3.0], [98.0, 2.6666666666666665], [97.0, 2.6666666666666665], [103.0, 4.0], [102.0, 3.25], [101.0, 2.0], [100.0, 3.0], [107.0, 3.3333333333333335], [106.0, 4.5], [105.0, 3.3333333333333335], [104.0, 2.8], [110.0, 3.0], [109.0, 3.0], [108.0, 2.0], [115.0, 2.6666666666666665], [114.0, 3.0], [112.0, 3.6666666666666665], [113.0, 4.0], [118.0, 3.0], [116.0, 4.5], [119.0, 3.0], [123.0, 3.0], [122.0, 2.0], [121.0, 4.0], [120.0, 3.0], [124.0, 2.75], [127.0, 3.25], [125.0, 3.0], [130.0, 2.6666666666666665], [131.0, 3.0], [129.0, 3.25], [128.0, 3.0], [135.0, 3.3333333333333335], [133.0, 9.666666666666668], [132.0, 16.0], [143.0, 2.0], [142.0, 4.0], [141.0, 3.0], [140.0, 2.4], [139.0, 4.0], [138.0, 3.0], [137.0, 2.6], [136.0, 2.5], [145.0, 4.0], [144.0, 4.25], [150.0, 2.8], [151.0, 3.0], [149.0, 3.0], [148.0, 2.0], [147.0, 3.0], [146.0, 3.0], [159.0, 4.0], [157.0, 3.0], [156.0, 3.0], [155.0, 2.6666666666666665], [154.0, 2.6666666666666665], [153.0, 3.0], [152.0, 3.0], [161.0, 2.5], [160.0, 4.0], [167.0, 2.6], [166.0, 4.0], [164.0, 3.0], [163.0, 3.0], [162.0, 16.0], [175.0, 3.8], [174.0, 4.0], [173.0, 3.5], [172.0, 3.5], [171.0, 3.3333333333333335], [170.0, 3.0], [169.0, 3.0], [168.0, 2.6666666666666665], [179.0, 3.5], [178.0, 2.0], [177.0, 3.0], [176.0, 4.5], [183.0, 4.0], [182.0, 4.0], [181.0, 4.5], [180.0, 4.0], [191.0, 2.6666666666666665], [190.0, 3.3333333333333335], [189.0, 2.6], [187.0, 3.0], [186.0, 2.0], [184.0, 3.0], [199.0, 2.5], [198.0, 3.3333333333333335], [197.0, 2.6666666666666665], [196.0, 3.6666666666666665], [195.0, 3.0], [194.0, 3.0], [193.0, 3.25], [192.0, 4.0], [200.0, 3.7892590074779045], [207.0, 4.0], [206.0, 5.0], [205.0, 2.5], [204.0, 2.6666666666666665], [203.0, 4.0], [202.0, 4.0], [214.0, 3.5], [212.0, 4.0], [211.0, 5.0], [210.0, 9.0], [209.0, 6.5], [208.0, 5.5], [215.0, 3.0], [219.0, 7.0], [218.0, 2.5], [217.0, 3.5], [216.0, 3.0], [223.0, 9.5], [220.0, 3.0], [231.0, 2.2], [230.0, 2.75], [229.0, 3.0], [228.0, 2.6666666666666665], [227.0, 2.5], [226.0, 6.0], [225.0, 2.5], [224.0, 2.0], [239.0, 2.6666666666666665], [238.0, 2.5], [237.0, 2.6666666666666665], [236.0, 2.0], [235.0, 3.0], [234.0, 3.0], [233.0, 13.0], [232.0, 3.0], [245.0, 2.6666666666666665], [246.0, 3.0], [244.0, 2.857142857142857], [242.0, 3.0], [241.0, 2.3333333333333335], [240.0, 2.5714285714285716], [247.0, 3.0], [255.0, 2.5], [254.0, 2.75], [253.0, 2.5], [252.0, 3.0], [250.0, 3.0], [249.0, 2.75], [248.0, 2.0], [270.0, 2.8], [271.0, 2.833333333333333], [268.0, 4.0], [258.0, 2.3333333333333335], [257.0, 3.0], [256.0, 2.3333333333333335], [267.0, 2.8], [266.0, 3.25], [265.0, 3.0], [264.0, 4.0], [263.0, 2.6], [262.0, 3.5], [260.0, 3.285714285714286], [286.0, 3.0], [273.0, 3.0], [274.0, 2.6666666666666665], [275.0, 2.8], [272.0, 4.0], [279.0, 3.0], [278.0, 3.0], [277.0, 2.3333333333333335], [287.0, 2.25], [280.0, 2.5], [285.0, 3.0], [284.0, 4.5], [283.0, 2.0], [281.0, 2.75], [302.0, 3.0], [303.0, 3.0], [301.0, 3.0], [300.0, 6.0], [299.0, 5.0], [297.0, 3.5], [296.0, 3.0], [295.0, 2.3333333333333335], [289.0, 4.0], [288.0, 2.5], [291.0, 3.0], [290.0, 2.0], [294.0, 3.0], [293.0, 2.5], [292.0, 3.0], [318.0, 3.0], [305.0, 2.5], [306.0, 2.0], [307.0, 3.0], [304.0, 2.75], [311.0, 2.0], [310.0, 5.0], [309.0, 7.666666666666667], [308.0, 3.0], [319.0, 2.6666666666666665], [313.0, 2.5], [312.0, 2.3333333333333335], [317.0, 2.0], [316.0, 2.0], [315.0, 3.0], [314.0, 3.0], [333.0, 4.0], [335.0, 2.0], [330.0, 3.0], [334.0, 3.0], [332.0, 3.0], [323.0, 2.3333333333333335], [322.0, 4.333333333333333], [321.0, 4.666666666666667], [320.0, 3.0], [331.0, 2.6666666666666665], [328.0, 2.4], [327.0, 6.0], [326.0, 3.0], [325.0, 4.0], [324.0, 2.5], [339.0, 9.0], [343.0, 2.0], [342.0, 2.6666666666666665], [344.0, 3.5], [345.0, 2.25], [347.0, 2.333333333333333], [346.0, 3.0], [351.0, 3.0], [350.0, 2.25], [349.0, 2.0], [348.0, 2.0], [341.0, 2.6666666666666665], [340.0, 2.0], [338.0, 3.0], [337.0, 3.5], [336.0, 3.6666666666666665], [367.0, 3.0], [360.0, 2.0], [366.0, 2.5], [365.0, 3.4], [364.0, 3.5], [355.0, 2.6], [354.0, 2.6666666666666665], [353.0, 2.3333333333333335], [352.0, 2.25], [363.0, 2.5], [362.0, 2.0], [361.0, 2.6666666666666665], [359.0, 4.0], [358.0, 3.0], [357.0, 2.5], [356.0, 5.5], [382.0, 3.0], [383.0, 3.0], [381.0, 2.0], [380.0, 2.5], [379.0, 2.5], [378.0, 4.0], [377.0, 3.6], [376.0, 2.0], [375.0, 2.5], [369.0, 3.0], [368.0, 3.3333333333333335], [371.0, 2.0], [370.0, 2.0], [374.0, 4.0], [373.0, 5.0], [372.0, 2.75], [398.0, 3.6], [385.0, 2.0], [386.0, 22.0], [387.0, 4.0], [384.0, 2.6666666666666665], [391.0, 4.0], [389.0, 3.3333333333333335], [388.0, 8.25], [399.0, 2.3333333333333335], [393.0, 3.0], [392.0, 3.6666666666666665], [397.0, 3.0], [396.0, 3.0], [395.0, 2.5], [394.0, 3.0], [414.0, 3.0], [400.0, 3.553135313531351], [402.0, 2.6666666666666665], [401.0, 3.0], [415.0, 2.75], [413.0, 3.0], [412.0, 3.5], [411.0, 2.75], [409.0, 3.5], [408.0, 3.0], [407.0, 3.5], [406.0, 2.6666666666666665], [404.0, 3.0], [430.0, 2.0], [431.0, 3.0], [429.0, 6.0], [428.0, 2.5], [427.0, 2.125], [426.0, 2.0], [425.0, 2.5], [424.0, 3.0], [423.0, 3.8], [417.0, 4.0], [416.0, 4.857142857142857], [419.0, 2.5], [418.0, 3.4], [422.0, 3.0], [421.0, 2.6666666666666665], [420.0, 3.0], [445.0, 3.3333333333333335], [447.0, 3.2], [444.0, 2.0], [435.0, 1.8], [434.0, 4.5], [433.0, 2.5], [432.0, 4.0], [443.0, 3.75], [442.0, 2.6666666666666665], [440.0, 3.0], [439.0, 16.333333333333332], [437.0, 1.6666666666666667], [436.0, 2.0], [463.0, 2.5], [459.0, 4.0], [462.0, 3.0], [461.0, 2.5], [460.0, 3.0], [451.0, 2.0], [450.0, 2.5], [448.0, 3.0], [458.0, 2.5], [457.0, 2.5], [456.0, 2.0], [455.0, 2.5], [454.0, 3.0], [452.0, 3.0], [478.0, 2.5], [467.0, 2.2], [466.0, 2.0], [465.0, 2.5], [464.0, 3.0], [471.0, 3.25], [469.0, 2.5], [468.0, 4.0], [479.0, 3.0], [477.0, 2.5], [476.0, 2.3333333333333335], [475.0, 7.5], [474.0, 3.0], [473.0, 3.0], [472.0, 2.5], [493.0, 3.0], [482.0, 4.0], [484.0, 2.25], [486.0, 3.0], [487.0, 3.0], [485.0, 2.6666666666666665], [483.0, 4.0], [481.0, 2.0], [480.0, 3.0], [494.0, 2.75], [489.0, 2.6666666666666665], [488.0, 46.0], [492.0, 2.6666666666666665], [491.0, 2.6666666666666665], [490.0, 3.0], [509.0, 3.0], [510.0, 3.0], [508.0, 3.6666666666666665], [499.0, 8.0], [497.0, 2.3333333333333335], [496.0, 3.0], [507.0, 2.5], [505.0, 2.6666666666666665], [504.0, 8.625], [503.0, 3.0], [502.0, 2.6666666666666665], [501.0, 2.5], [500.0, 3.0], [540.0, 2.0], [543.0, 2.5], [529.0, 4.0], [528.0, 3.5], [531.0, 2.5], [530.0, 2.0], [533.0, 3.0], [532.0, 12.5], [542.0, 2.625], [541.0, 2.5], [539.0, 36.0], [538.0, 2.5], [537.0, 2.5], [536.0, 3.0], [527.0, 2.75], [513.0, 3.3333333333333335], [515.0, 2.4], [514.0, 3.6666666666666665], [517.0, 3.3333333333333335], [516.0, 3.0], [519.0, 2.5], [518.0, 3.5], [526.0, 2.0], [525.0, 2.75], [524.0, 3.0], [523.0, 2.0], [522.0, 2.75], [521.0, 3.0], [520.0, 2.6666666666666665], [535.0, 3.0], [534.0, 2.3333333333333335], [572.0, 3.0], [545.0, 3.0], [546.0, 12.5], [549.0, 3.0], [547.0, 3.0], [551.0, 2.5], [550.0, 3.0], [569.0, 3.0], [568.0, 2.4], [544.0, 2.6666666666666665], [554.0, 3.0], [553.0, 2.5], [552.0, 2.5], [555.0, 2.0], [557.0, 2.0], [556.0, 2.0], [559.0, 2.0], [558.0, 2.6], [575.0, 3.4], [561.0, 5.0], [560.0, 3.3333333333333335], [563.0, 4.6], [562.0, 2.3333333333333335], [565.0, 2.5], [564.0, 2.5], [567.0, 2.3333333333333335], [566.0, 3.6666666666666665], [574.0, 2.5], [573.0, 2.8], [571.0, 2.8], [570.0, 3.0], [600.0, 3.4714828897338386], [581.0, 2.0], [580.0, 2.25], [579.0, 2.5], [578.0, 2.0], [576.0, 2.5], [583.0, 3.3333333333333335], [582.0, 2.5], [590.0, 25.8], [589.0, 2.5], [588.0, 3.0], [585.0, 2.0], [584.0, 2.0], [586.0, 2.5], [587.0, 3.0], [599.0, 2.5], [598.0, 2.25], [597.0, 2.3333333333333335], [596.0, 2.0], [595.0, 3.0], [594.0, 4.5], [593.0, 2.5], [592.0, 2.75], [607.0, 3.0], [606.0, 2.3333333333333335], [605.0, 2.6666666666666665], [603.0, 2.8], [602.0, 3.25], [601.0, 3.0], [636.0, 3.0], [623.0, 2.5], [609.0, 2.5], [608.0, 3.0], [611.0, 3.0], [610.0, 2.0], [615.0, 27.0], [614.0, 3.0], [622.0, 3.8], [621.0, 3.0], [620.0, 4.0], [619.0, 3.0], [618.0, 2.75], [617.0, 2.0], [616.0, 2.3333333333333335], [639.0, 2.75], [625.0, 2.6666666666666665], [624.0, 2.5], [627.0, 3.0], [626.0, 3.3333333333333335], [629.0, 2.6666666666666665], [628.0, 2.6666666666666665], [631.0, 2.75], [630.0, 3.0], [638.0, 2.0], [637.0, 3.5], [635.0, 4.0], [634.0, 2.0], [633.0, 2.285714285714286], [632.0, 3.0], [668.0, 2.5], [652.0, 2.6666666666666665], [651.0, 2.6], [650.0, 3.0], [649.0, 2.5], [648.0, 6.5], [653.0, 2.75], [655.0, 3.0], [641.0, 2.0], [640.0, 2.0], [643.0, 3.0], [642.0, 2.5], [645.0, 2.5], [644.0, 3.5], [647.0, 2.5], [646.0, 3.3333333333333335], [654.0, 3.2], [671.0, 2.5], [656.0, 3.0], [658.0, 2.6666666666666665], [657.0, 2.3333333333333335], [660.0, 3.5], [659.0, 2.0], [663.0, 30.2], [661.0, 3.0], [670.0, 9.8], [669.0, 3.5], [667.0, 2.6666666666666665], [666.0, 3.0], [665.0, 2.857142857142857], [664.0, 2.3333333333333335], [698.0, 7.0], [675.0, 2.5], [680.0, 3.4], [682.0, 3.0], [681.0, 3.0], [684.0, 2.5], [683.0, 5.0], [686.0, 3.0], [685.0, 2.3333333333333335], [679.0, 2.0], [697.0, 1.0], [696.0, 3.5], [700.0, 2.75], [677.0, 2.8], [676.0, 3.0], [674.0, 3.0], [673.0, 2.3333333333333335], [672.0, 3.0], [687.0, 2.3333333333333335], [703.0, 2.6666666666666665], [702.0, 2.0], [689.0, 6.0], [688.0, 2.3333333333333335], [691.0, 2.6666666666666665], [690.0, 2.25], [693.0, 3.0], [692.0, 3.0], [695.0, 3.0], [694.0, 3.0], [701.0, 2.0], [729.0, 3.5], [733.0, 2.0], [735.0, 3.0], [721.0, 2.6666666666666665], [723.0, 2.6666666666666665], [722.0, 2.5], [732.0, 2.5], [731.0, 2.6666666666666665], [730.0, 2.75], [719.0, 2.2], [706.0, 3.0], [705.0, 2.5], [708.0, 3.0], [707.0, 2.5], [711.0, 2.5], [710.0, 3.0], [718.0, 3.0], [717.0, 2.5], [716.0, 20.5], [714.0, 3.0], [715.0, 2.0], [713.0, 3.0], [712.0, 3.3333333333333335], [727.0, 2.3333333333333335], [726.0, 3.0], [725.0, 3.0], [724.0, 2.6666666666666665], [764.0, 2.833333333333333], [765.0, 3.0], [766.0, 3.0], [752.0, 2.6], [767.0, 3.0], [754.0, 3.0], [753.0, 3.0], [763.0, 3.0], [762.0, 27.5], [761.0, 3.0], [760.0, 2.75], [751.0, 4.0], [737.0, 3.5], [736.0, 3.3333333333333335], [742.0, 3.0], [739.0, 2.5], [750.0, 3.0], [749.0, 2.3333333333333335], [747.0, 3.166666666666667], [746.0, 2.0], [745.0, 3.0], [744.0, 4.0], [759.0, 4.333333333333333], [758.0, 2.5], [757.0, 3.0], [755.0, 2.5], [796.0, 4.428571428571429], [772.0, 2.5], [782.0, 4.0], [781.0, 2.6666666666666665], [780.0, 3.5], [779.0, 3.0], [778.0, 3.0], [777.0, 2.3333333333333335], [776.0, 2.4], [783.0, 3.0], [768.0, 3.0], [770.0, 3.0], [769.0, 2.5], [799.0, 2.5], [784.0, 3.0], [786.0, 2.5], [785.0, 3.0], [788.0, 2.6], [787.0, 2.0], [791.0, 2.75], [789.0, 2.0], [798.0, 3.75], [797.0, 2.6666666666666665], [795.0, 3.0], [794.0, 3.0], [793.0, 2.6], [792.0, 2.5], [775.0, 2.3333333333333335], [774.0, 2.75], [773.0, 3.0], [828.0, 3.0], [800.0, 3.4571062740076877], [801.0, 2.0], [803.0, 2.75], [802.0, 3.5], [805.0, 2.6], [804.0, 2.0], [807.0, 2.0], [806.0, 3.25], [815.0, 2.8], [814.0, 2.75], [813.0, 2.3333333333333335], [812.0, 3.0], [811.0, 3.25], [810.0, 2.5], [809.0, 3.0], [808.0, 3.0], [824.0, 3.0], [831.0, 3.0], [816.0, 3.2], [819.0, 2.0], [818.0, 2.75], [821.0, 3.0], [820.0, 3.0], [823.0, 3.3333333333333335], [822.0, 3.0], [830.0, 3.0], [829.0, 24.8], [827.0, 3.6], [826.0, 2.8], [825.0, 2.0], [857.0, 3.0], [861.0, 4.0], [862.0, 3.0], [863.0, 2.75], [849.0, 3.0], [848.0, 3.0], [851.0, 2.8], [850.0, 2.3333333333333335], [853.0, 2.5], [852.0, 4.0], [860.0, 3.3333333333333335], [859.0, 3.0], [858.0, 2.8], [856.0, 2.3333333333333335], [839.0, 3.25], [838.0, 2.0], [837.0, 3.25], [836.0, 2.5], [835.0, 3.0], [834.0, 2.6666666666666665], [833.0, 3.25], [832.0, 3.0], [847.0, 3.25], [846.0, 2.0], [845.0, 3.0], [844.0, 5.333333333333333], [843.0, 2.75], [842.0, 3.0], [841.0, 3.0], [840.0, 2.0], [855.0, 2.6666666666666665], [854.0, 2.5], [892.0, 3.0], [895.0, 2.75], [880.0, 3.0], [882.0, 2.5], [881.0, 3.0], [884.0, 3.0], [883.0, 2.75], [894.0, 2.5], [893.0, 2.0], [891.0, 2.6666666666666665], [890.0, 15.5], [889.0, 2.25], [888.0, 2.6666666666666665], [879.0, 3.0], [864.0, 2.3333333333333335], [866.0, 2.75], [865.0, 2.5], [868.0, 11.0], [867.0, 92.0], [871.0, 3.0], [870.0, 4.0], [878.0, 27.0], [877.0, 3.0], [876.0, 2.8], [874.0, 2.3333333333333335], [873.0, 3.5], [872.0, 3.6666666666666665], [886.0, 4.0], [885.0, 2.75], [921.0, 3.5], [925.0, 2.5], [926.0, 18.0], [913.0, 2.6666666666666665], [912.0, 3.0], [915.0, 2.8571428571428568], [914.0, 2.0], [924.0, 3.6666666666666665], [923.0, 6.5], [922.0, 3.5], [911.0, 3.0], [897.0, 3.0], [896.0, 4.666666666666666], [899.0, 3.0], [898.0, 3.25], [901.0, 4.0], [900.0, 3.3333333333333335], [903.0, 3.0], [902.0, 2.6666666666666665], [910.0, 3.5], [909.0, 2.0], [908.0, 2.5], [907.0, 2.75], [906.0, 2.0], [904.0, 2.5], [919.0, 4.0], [918.0, 3.0], [917.0, 2.0], [916.0, 2.5], [953.0, 2.0], [957.0, 8.0], [959.0, 3.0], [945.0, 2.5], [944.0, 2.6666666666666665], [948.0, 2.3333333333333335], [946.0, 3.0], [956.0, 3.0], [955.0, 2.6666666666666665], [954.0, 3.0], [952.0, 2.75], [935.0, 5.0], [934.0, 2.6666666666666665], [933.0, 3.0], [932.0, 3.0], [931.0, 2.75], [930.0, 4.0], [929.0, 3.3333333333333335], [928.0, 2.6], [943.0, 2.6666666666666665], [942.0, 3.0], [941.0, 2.0], [940.0, 2.0], [939.0, 2.833333333333333], [937.0, 2.0], [936.0, 3.75], [950.0, 2.3333333333333335], [949.0, 3.0], [988.0, 2.6666666666666665], [963.0, 11.0], [971.0, 3.0], [973.0, 3.0], [972.0, 2.6666666666666665], [975.0, 3.0], [974.0, 11.5], [970.0, 3.0], [969.0, 2.0], [968.0, 3.0], [967.0, 3.0], [985.0, 3.3333333333333335], [984.0, 2.3333333333333335], [987.0, 2.8], [986.0, 3.5], [989.0, 3.0], [991.0, 2.0], [976.0, 3.0], [978.0, 8.25], [977.0, 2.0], [981.0, 2.4], [980.0, 2.3333333333333335], [983.0, 3.0], [982.0, 3.0], [990.0, 4.0], [966.0, 2.5], [965.0, 4.0], [962.0, 3.0], [960.0, 3.0], [996.0, 3.0], [1000.0, 3.64516129032258], [999.0, 3.0], [998.0, 15.444444444444443], [997.0, 3.0], [995.0, 3.0], [994.0, 3.0], [993.0, 2.5], [992.0, 2.0]], "isOverall": false, "label": "Get DATA Report", "isController": false}, {"data": [[684.1484410302749, 3.620424762765476]], "isOverall": false, "label": "Get DATA Report-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3174.7166666666667, "minX": 1.52712672E12, "maxY": 205698.55, "series": [{"data": [[1.52712714E12, 72692.56666666667], [1.52712696E12, 205471.56666666668], [1.52712702E12, 186535.38333333333], [1.52712684E12, 200900.86666666667], [1.5271269E12, 205698.55], [1.52712672E12, 38438.183333333334], [1.52712678E12, 193595.36666666667], [1.52712708E12, 192250.68333333332]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.52712714E12, 6506.95], [1.52712696E12, 17742.866666666665], [1.52712702E12, 16419.833333333332], [1.52712684E12, 17393.2], [1.5271269E12, 17835.516666666666], [1.52712672E12, 3174.7166666666667], [1.52712678E12, 16797.266666666666], [1.52712708E12, 16960.616666666665]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52712714E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2.8213091256569522, "minX": 1.52712672E12, "maxY": 4.092550790067721, "series": [{"data": [[1.52712714E12, 3.154135338345861], [1.52712696E12, 3.079410366143604], [1.52712702E12, 3.2426988922457194], [1.52712684E12, 2.8213091256569522], [1.5271269E12, 2.871177015755333], [1.52712672E12, 3.4046997389033953], [1.52712678E12, 2.9673267326732646], [1.52712708E12, 3.0945880058508073]], "isOverall": false, "label": "Get DATA Info", "isController": false}, {"data": [[1.52712714E12, 3.333773087071237], [1.52712696E12, 3.180793507664564], [1.52712702E12, 3.2415361293582614], [1.52712684E12, 3.034007352941182], [1.5271269E12, 3.1179901301031867], [1.52712672E12, 4.092550790067721], [1.52712678E12, 3.235406698564592], [1.52712708E12, 3.041810132808655]], "isOverall": false, "label": "Get DATA", "isController": false}, {"data": [[1.52712714E12, 3.5723270440251556], [1.52712696E12, 3.5140811455847216], [1.52712702E12, 3.662944162436549], [1.52712684E12, 3.621969322117762], [1.5271269E12, 3.5744062045564715], [1.52712672E12, 3.709876543209876], [1.52712678E12, 3.6466395112016308], [1.52712708E12, 3.7126099706744857]], "isOverall": false, "label": "Get DATA Report", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.52712714E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2.81748686096512, "minX": 1.52712672E12, "maxY": 4.076749435665912, "series": [{"data": [[1.52712714E12, 3.1491228070175468], [1.52712696E12, 3.0789348549690985], [1.52712702E12, 3.239677744209473], [1.52712684E12, 2.81748686096512], [1.5271269E12, 2.86700648748841], [1.52712672E12, 3.3577023498694505], [1.52712678E12, 2.962871287128714], [1.52712708E12, 3.090687469527056]], "isOverall": false, "label": "Get DATA Info", "isController": false}, {"data": [[1.52712714E12, 3.3324538258575176], [1.52712696E12, 3.154192966636609], [1.52712702E12, 3.2385042950985388], [1.52712684E12, 3.0160845588235303], [1.5271269E12, 3.1121579183490358], [1.52712672E12, 4.076749435665912], [1.52712678E12, 3.2258373205741586], [1.52712708E12, 3.0383669454008877]], "isOverall": false, "label": "Get DATA", "isController": false}, {"data": [[1.52712714E12, 3.568553459119496], [1.52712696E12, 3.512171837708827], [1.52712702E12, 3.65685279187817], [1.52712684E12, 3.619495299356754], [1.5271269E12, 3.571013087736304], [1.52712672E12, 3.6759259259259274], [1.52712678E12, 3.640529531568231], [1.52712708E12, 3.7082111436950083]], "isOverall": false, "label": "Get DATA Report", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.52712714E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.09921671018276762, "minX": 1.52712672E12, "maxY": 0.4672686230248309, "series": [{"data": [[1.52712714E12, 0.3834586466165414], [1.52712696E12, 0.3509272467903001], [1.52712702E12, 0.4164149043303122], [1.52712684E12, 0.23984710941232637], [1.5271269E12, 0.29240037071362446], [1.52712672E12, 0.09921671018276762], [1.52712678E12, 0.2074257425742575], [1.52712708E12, 0.36811311555338905]], "isOverall": false, "label": "Get DATA Info", "isController": false}, {"data": [[1.52712714E12, 0.4432717678100263], [1.52712696E12, 0.3322813345356176], [1.52712702E12, 0.3759474482061646], [1.52712684E12, 0.24862132352941185], [1.5271269E12, 0.30058322117541464], [1.52712672E12, 0.4672686230248309], [1.52712678E12, 0.21818181818181867], [1.52712708E12, 0.3403836694540089]], "isOverall": false, "label": "Get DATA", "isController": false}, {"data": [[1.52712714E12, 0.4075471698113209], [1.52712696E12, 0.374224343675418], [1.52712702E12, 0.40050761421319764], [1.52712684E12, 0.2582879762493812], [1.5271269E12, 0.2981095492001931], [1.52712672E12, 0.13888888888888892], [1.52712678E12, 0.18584521384928704], [1.52712708E12, 0.38465298142717447]], "isOverall": false, "label": "Get DATA Report", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.52712714E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.52712672E12, "maxY": 92.0, "series": [{"data": [[1.52712714E12, 56.0], [1.52712696E12, 92.0], [1.52712702E12, 77.0], [1.52712684E12, 83.0], [1.5271269E12, 51.0], [1.52712672E12, 70.0], [1.52712678E12, 50.0], [1.52712708E12, 54.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.52712714E12, 1.0], [1.52712696E12, 1.0], [1.52712702E12, 1.0], [1.52712684E12, 1.0], [1.5271269E12, 1.0], [1.52712672E12, 1.0], [1.52712678E12, 1.0], [1.52712708E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.52712714E12, 4.0], [1.52712696E12, 4.0], [1.52712702E12, 4.0], [1.52712684E12, 4.0], [1.5271269E12, 4.0], [1.52712672E12, 4.0], [1.52712678E12, 4.0], [1.52712708E12, 4.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.52712714E12, 24.0], [1.52712696E12, 23.9900000000016], [1.52712702E12, 24.0], [1.52712684E12, 21.68000000000029], [1.5271269E12, 23.0], [1.52712672E12, 34.0], [1.52712678E12, 21.0], [1.52712708E12, 24.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.52712714E12, 5.0], [1.52712696E12, 5.0], [1.52712702E12, 5.0], [1.52712684E12, 5.0], [1.5271269E12, 5.0], [1.52712672E12, 6.0], [1.52712678E12, 5.0], [1.52712708E12, 5.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52712714E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 3.0, "minX": 19.0, "maxY": 3.0, "series": [{"data": [[19.0, 3.0], [39.0, 3.0], [98.0, 3.0], [101.0, 3.0], [102.0, 3.0], [104.0, 3.0], [107.0, 3.0], [106.0, 3.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 107.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 3.0, "minX": 19.0, "maxY": 3.0, "series": [{"data": [[19.0, 3.0], [39.0, 3.0], [98.0, 3.0], [101.0, 3.0], [102.0, 3.0], [104.0, 3.0], [107.0, 3.0], [106.0, 3.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 107.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 19.183333333333334, "minX": 1.52712672E12, "maxY": 107.5, "series": [{"data": [[1.52712714E12, 39.166666666666664], [1.52712696E12, 106.93333333333334], [1.52712702E12, 98.91666666666667], [1.52712684E12, 104.8], [1.5271269E12, 107.5], [1.52712672E12, 19.183333333333334], [1.52712678E12, 101.25], [1.52712708E12, 102.18333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52712714E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 19.166666666666668, "minX": 1.52712672E12, "maxY": 107.5, "series": [{"data": [[1.52712714E12, 39.18333333333333], [1.52712696E12, 106.93333333333334], [1.52712702E12, 98.91666666666667], [1.52712684E12, 104.83333333333333], [1.5271269E12, 107.5], [1.52712672E12, 19.166666666666668], [1.52712678E12, 101.23333333333333], [1.52712708E12, 102.16666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.52712714E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 5.4, "minX": 1.52712672E12, "maxY": 37.15, "series": [{"data": [[1.52712714E12, 12.633333333333333], [1.52712696E12, 36.96666666666667], [1.52712702E12, 32.983333333333334], [1.52712684E12, 36.266666666666666], [1.5271269E12, 37.15], [1.52712672E12, 7.383333333333334], [1.52712678E12, 34.833333333333336], [1.52712708E12, 33.88333333333333]], "isOverall": false, "label": "Get DATA-success", "isController": false}, {"data": [[1.52712714E12, 13.3], [1.52712696E12, 35.05], [1.52712702E12, 33.1], [1.52712684E12, 34.88333333333333], [1.5271269E12, 35.96666666666667], [1.52712672E12, 6.383333333333334], [1.52712678E12, 33.666666666666664], [1.52712708E12, 34.18333333333333]], "isOverall": false, "label": "Get DATA Info-success", "isController": false}, {"data": [[1.52712714E12, 13.25], [1.52712696E12, 34.916666666666664], [1.52712702E12, 32.833333333333336], [1.52712684E12, 33.68333333333333], [1.5271269E12, 34.38333333333333], [1.52712672E12, 5.4], [1.52712678E12, 32.733333333333334], [1.52712708E12, 34.1]], "isOverall": false, "label": "Get DATA Report-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.52712714E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -36000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
